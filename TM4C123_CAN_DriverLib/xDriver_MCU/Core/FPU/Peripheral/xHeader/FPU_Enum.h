/*
 * FPU_Enum.h
 *
 *  Created on: 17 jun. 2020
 *      Author: vyldram
 */

#ifndef XDRIVER_MCU_DRIVER_HEADER_FPU_FPU_PERIPHERAL_FPU_ENUM_H_
#define XDRIVER_MCU_DRIVER_HEADER_FPU_FPU_PERIPHERAL_FPU_ENUM_H_

typedef enum
{
    FPU_enOK = 0UL,
    FPU_enERROR = 1UL,
}FPU_nSTATUS;

typedef enum
{
    FPU_enDENIED = 0UL,
    FPU_enONLY_PRIVILEGED = 1UL,
    FPU_enFULL_ACCESS = 3UL,
}FPU_nACCESS;

typedef enum
{
    FPU_enLAZY_PRESERVATION_DIS = 0UL,
    FPU_enLAZY_PRESERVATION_ENA = 1UL,
}FPU_nLAZY_PRESERVATION;

typedef enum
{
    FPU_enAUTO_PRESERVATION_DIS = 0UL,
    FPU_enAUTO_PRESERVATION_ENA = 1UL,
}FPU_nAUTO_PRESERVATION;

typedef enum
{
    FPU_enPRESERVATION_NOACTIVE = 0UL,
    FPU_enPRESERVATION_ACTIVE = 1UL,
}FPU_nPRESERVATION_STATUS;

typedef enum
{
    FPU_enHALF_PRECISION_IEEE = 0UL,
    FPU_enHALF_PRECISION_ALT = 1UL,
}FPU_nHALF_PRECISION;

typedef enum
{
    FPU_enNAN_PROPAGATE = 0UL,
    FPU_enNAN_NAN = 1UL,
}FPU_nNAN;

typedef enum
{
    FPU_enROUNDING_NEAREST = 0UL,
    FPU_enROUNDING_PLUSINF = 1UL,
    FPU_enROUNDING_MINUSINF = 2UL,
    FPU_enROUNDING_ZERO = 3UL,
}FPU_nROUNDING;

typedef enum
{
    FPU_enEXCEPTION_INVALID = 0x01UL,
    FPU_enEXCEPTION_DIV0 = 0x02UL,
    FPU_enEXCEPTION_OVERFLOW = 0x04UL,
    FPU_enEXCEPTION_UNDERFLOW = 0x08UL,
    FPU_enEXCEPTION_INEXACT = 0x10UL,
    FPU_enEXCEPTION_DENORMAL = 0x80UL,
}FPU_nEXCEPTION;

#endif /* XDRIVER_MCU_DRIVER_HEADER_FPU_FPU_PERIPHERAL_FPU_ENUM_H_ */

/*
 * TIMER.h
 *
 *  Created on: 3 may. 2018
 *      Author: InDev
 */

#ifndef TIMER_H_
#define TIMER_H_


#include <stdint.h>
#include <xDriver_MCU/Driver_Header/NVIC/NVIC.h>
#include <xDriver_MCU/Driver_Header/SCB/SCB.h>
#include <xDriver_MCU/Driver_Header/SYSCTL/SYSCTL.h>

#include <xDriver_MCU/Driver_Header/TIMER/TIMER_Peripheral/TIMER_Struct/TIMER_Struct.h>
#include <xDriver_MCU/Driver_Header/TIMER/TIMER_Peripheral/TIMER_Peripheral.h>


#define GPTM                     (((GPTMS_TypeDef*)(GPTM_BASE)))
#define GPTM_UNION               (((GPTM_UNION_TypeDef*)(GPTM_BASE)))

#define GPTM0                    (((GPTM_TypeDef*)(GPTM0_BASE)))
#define GPTM1                    (((GPTM_TypeDef*)(GPTM1_BASE)))
#define GPTM2                    (((GPTM_TypeDef*)(GPTM2_BASE)))
#define GPTM3                    (((GPTM_TypeDef*)(GPTM3_BASE)))
#define GPTM4                    (((GPTM_TypeDef*)(GPTM4_BASE)))
#define GPTM5                    (((GPTM_TypeDef*)(GPTM5_BASE)))

#define GPTM0_CTL                (((GPTM_CTL_TypeDef*)(GPTM0_BASE)))
#define GPTM1_CTL                (((GPTM_CTL_TypeDef*)(GPTM1_BASE)))
#define GPTM2_CTL                (((GPTM_CTL_TypeDef*)(GPTM2_BASE)))
#define GPTM3_CTL                (((GPTM_CTL_TypeDef*)(GPTM3_BASE)))
#define GPTM4_CTL                (((GPTM_CTL_TypeDef*)(GPTM4_BASE)))
#define GPTM5_CTL                (((GPTM_CTL_TypeDef*)(GPTM5_BASE)))

#define GPTM0_TA                 (((GPTM_TA_TypeDef*)(GPTM0_BASE)))
#define GPTM1_TA                 (((GPTM_TA_TypeDef*)(GPTM1_BASE)))
#define GPTM2_TA                 (((GPTM_TA_TypeDef*)(GPTM2_BASE)))
#define GPTM3_TA                 (((GPTM_TA_TypeDef*)(GPTM3_BASE)))
#define GPTM4_TA                 (((GPTM_TA_TypeDef*)(GPTM4_BASE)))
#define GPTM5_TA                 (((GPTM_TA_TypeDef*)(GPTM5_BASE)))

#define GPTM0_TB                 (((GPTM_TB_TypeDef*)(GPTM0_BASE)))
#define GPTM1_TB                 (((GPTM_TB_TypeDef*)(GPTM1_BASE)))
#define GPTM2_TB                 (((GPTM_TB_TypeDef*)(GPTM2_BASE)))
#define GPTM3_TB                 (((GPTM_TB_TypeDef*)(GPTM3_BASE)))
#define GPTM4_TB                 (((GPTM_TB_TypeDef*)(GPTM4_BASE)))
#define GPTM5_TB                 (((GPTM_TB_TypeDef*)(GPTM5_BASE)))

#define GPTM0_TW                 (((GPTM_TW_TypeDef*)(GPTM0_BASE)))
#define GPTM1_TW                 (((GPTM_TW_TypeDef*)(GPTM1_BASE)))
#define GPTM2_TW                 (((GPTM_TW_TypeDef*)(GPTM2_BASE)))
#define GPTM3_TW                 (((GPTM_TW_TypeDef*)(GPTM3_BASE)))
#define GPTM4_TW                 (((GPTM_TW_TypeDef*)(GPTM4_BASE)))
#define GPTM5_TW                 (((GPTM_TW_TypeDef*)(GPTM5_BASE)))


#define GPTM_BITBANDING          (((GPTM_BITBANDING_TypeDef*)(GPTM_BITBANDING_BASE+(GPTM_OFFSET*32u))))
#define GPTM_BITBANDING_UNION    (((GPTM_BITBANDING_UNION_TypeDef*)(GPTM_BITBANDING_BASE+(GPTM_OFFSET*32u))))

#define GPTM0_BITBANDING          (((GPTM_BITBANDING_TypeDef*) (GPTM_BITBANDING_BASE+(GPTM0_OFFSET*32u))))
#define GPTM1_BITBANDING          (((GPTM_BITBANDING_TypeDef*) (GPTM_BITBANDING_BASE+(GPTM1_OFFSET*32u))))
#define GPTM2_BITBANDING          (((GPTM_BITBANDING_TypeDef*) (GPTM_BITBANDING_BASE+(GPTM2_OFFSET*32u))))
#define GPTM3_BITBANDING          (((GPTM_BITBANDING_TypeDef*) (GPTM_BITBANDING_BASE+(GPTM3_OFFSET*32u))))
#define GPTM4_BITBANDING          (((GPTM_BITBANDING_TypeDef*) (GPTM_BITBANDING_BASE+(GPTM4_OFFSET*32u))))
#define GPTM5_BITBANDING          (((GPTM_BITBANDING_TypeDef*) (GPTM_BITBANDING_BASE+(GPTM5_OFFSET*32u))))

#define GPTM0_BITBANDING_CTL      (((GPTM_BITBANDING_CTL_TypeDef*) (GPTM_BITBANDING_BASE+(GPTM0_OFFSET*32u))))
#define GPTM1_BITBANDING_CTL      (((GPTM_BITBANDING_CTL_TypeDef*) (GPTM_BITBANDING_BASE+(GPTM1_OFFSET*32u))))
#define GPTM2_BITBANDING_CTL      (((GPTM_BITBANDING_CTL_TypeDef*) (GPTM_BITBANDING_BASE+(GPTM2_OFFSET*32u))))
#define GPTM3_BITBANDING_CTL      (((GPTM_BITBANDING_CTL_TypeDef*) (GPTM_BITBANDING_BASE+(GPTM3_OFFSET*32u))))
#define GPTM4_BITBANDING_CTL      (((GPTM_BITBANDING_CTL_TypeDef*) (GPTM_BITBANDING_BASE+(GPTM4_OFFSET*32u))))
#define GPTM5_BITBANDING_CTL      (((GPTM_BITBANDING_CTL_TypeDef*) (GPTM_BITBANDING_BASE+(GPTM5_OFFSET*32u))))

#define GPTM0_BITBANDING_TA       (((GPTM_BITBANDING_TA_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM0_OFFSET*32u))))
#define GPTM1_BITBANDING_TA       (((GPTM_BITBANDING_TA_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM1_OFFSET*32u))))
#define GPTM2_BITBANDING_TA       (((GPTM_BITBANDING_TA_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM2_OFFSET*32u))))
#define GPTM3_BITBANDING_TA       (((GPTM_BITBANDING_TA_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM3_OFFSET*32u))))
#define GPTM4_BITBANDING_TA       (((GPTM_BITBANDING_TA_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM4_OFFSET*32u))))
#define GPTM5_BITBANDING_TA       (((GPTM_BITBANDING_TA_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM5_OFFSET*32u))))

#define GPTM0_BITBANDING_TB       (((GPTM_BITBANDING_TB_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM0_OFFSET*32u))))
#define GPTM1_BITBANDING_TB       (((GPTM_BITBANDING_TB_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM1_OFFSET*32u))))
#define GPTM2_BITBANDING_TB       (((GPTM_BITBANDING_TB_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM2_OFFSET*32u))))
#define GPTM3_BITBANDING_TB       (((GPTM_BITBANDING_TB_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM3_OFFSET*32u))))
#define GPTM4_BITBANDING_TB       (((GPTM_BITBANDING_TB_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM4_OFFSET*32u))))
#define GPTM5_BITBANDING_TB       (((GPTM_BITBANDING_TB_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM5_OFFSET*32u))))

#define GPTM0_BITBANDING_TW       (((GPTM_BITBANDING_TW_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM0_OFFSET*32u))))
#define GPTM1_BITBANDING_TW       (((GPTM_BITBANDING_TW_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM1_OFFSET*32u))))
#define GPTM2_BITBANDING_TW       (((GPTM_BITBANDING_TW_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM2_OFFSET*32u))))
#define GPTM3_BITBANDING_TW       (((GPTM_BITBANDING_TW_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM3_OFFSET*32u))))
#define GPTM4_BITBANDING_TW       (((GPTM_BITBANDING_TW_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM4_OFFSET*32u))))
#define GPTM5_BITBANDING_TW       (((GPTM_BITBANDING_TW_TypeDef*)  (GPTM_BITBANDING_BASE+(GPTM5_OFFSET*32u))))


#define GPWTM                     (((GPWTMS_TypeDef*)(GPWTM_BASE)))
#define GPWTM_UNION               (((GPWTM_UNION_TypeDef*)(GPWTM_BASE)))

#define GPWTM0                    (((GPTM_TypeDef*)(GPWTM0_BASE)))
#define GPWTM1                    (((GPTM_TypeDef*)(GPWTM1_BASE)))
#define GPWTM2                    (((GPTM_TypeDef*)(GPWTM2_BASE)))
#define GPWTM3                    (((GPTM_TypeDef*)(GPWTM3_BASE)))
#define GPWTM4                    (((GPTM_TypeDef*)(GPWTM4_BASE)))
#define GPWTM5                    (((GPTM_TypeDef*)(GPWTM5_BASE)))

#define GPWTM0_CTL                (((GPWTM_CTL_TypeDef*)(GPWTM0_BASE)))
#define GPWTM1_CTL                (((GPWTM_CTL_TypeDef*)(GPWTM1_BASE)))
#define GPWTM2_CTL                (((GPWTM_CTL_TypeDef*)(GPWTM2_BASE)))
#define GPWTM3_CTL                (((GPWTM_CTL_TypeDef*)(GPWTM3_BASE)))
#define GPWTM4_CTL                (((GPWTM_CTL_TypeDef*)(GPWTM4_BASE)))
#define GPWTM5_CTL                (((GPWTM_CTL_TypeDef*)(GPWTM5_BASE)))

#define GPWTM0_TA                 (((GPWTM_TA_TypeDef*)(GPWTM0_BASE)))
#define GPWTM1_TA                 (((GPWTM_TA_TypeDef*)(GPWTM1_BASE)))
#define GPWTM2_TA                 (((GPWTM_TA_TypeDef*)(GPWTM2_BASE)))
#define GPWTM3_TA                 (((GPWTM_TA_TypeDef*)(GPWTM3_BASE)))
#define GPWTM4_TA                 (((GPWTM_TA_TypeDef*)(GPWTM4_BASE)))
#define GPWTM5_TA                 (((GPWTM_TA_TypeDef*)(GPWTM5_BASE)))

#define GPWTM0_TB                 (((GPWTM_TB_TypeDef*)(GPWTM0_BASE)))
#define GPWTM1_TB                 (((GPWTM_TB_TypeDef*)(GPWTM1_BASE)))
#define GPWTM2_TB                 (((GPWTM_TB_TypeDef*)(GPWTM2_BASE)))
#define GPWTM3_TB                 (((GPWTM_TB_TypeDef*)(GPWTM3_BASE)))
#define GPWTM4_TB                 (((GPWTM_TB_TypeDef*)(GPWTM4_BASE)))
#define GPWTM5_TB                 (((GPWTM_TB_TypeDef*)(GPWTM5_BASE)))

#define GPWTM0_TW                 (((GPWTM_TW_TypeDef*)(GPWTM0_BASE)))
#define GPWTM1_TW                 (((GPWTM_TW_TypeDef*)(GPWTM1_BASE)))
#define GPWTM2_TW                 (((GPWTM_TW_TypeDef*)(GPWTM2_BASE)))
#define GPWTM3_TW                 (((GPWTM_TW_TypeDef*)(GPWTM3_BASE)))
#define GPWTM4_TW                 (((GPWTM_TW_TypeDef*)(GPWTM4_BASE)))
#define GPWTM5_TW                 (((GPWTM_TW_TypeDef*)(GPWTM5_BASE)))

#define GPWTM_BITBANDING          (((GPWTMS_BITBANDING_TypeDef*)(GPWTM_BASE_BITBANDING+(GPWTM_OFFSET*32u))))
#define GPWTM_BITBANDING_UNION    (((GPWTM_BITBANDING_UNION_TypeDef*)(GPWTM_BASE_BITBANDING+(GPWTM_OFFSET*32u))))

#define GPWTM0_BITBANDING         (((GPTM_BITBANDING_TypeDef*) (GPWTM_BASE_BITBANDING+(GPWTM0_OFFSET*32u))))
#define GPWTM1_BITBANDING         (((GPTM_BITBANDING_TypeDef*) (GPWTM_BASE_BITBANDING+(GPWTM1_OFFSET*32u))))
#define GPWTM2_BITBANDING         (((GPTM_BITBANDING_TypeDef*) (GPWTM_BASE_BITBANDING+(GPWTM2_OFFSET*32u))))
#define GPWTM3_BITBANDING         (((GPTM_BITBANDING_TypeDef*) (GPWTM_BASE_BITBANDING+(GPWTM3_OFFSET*32u))))
#define GPWTM4_BITBANDING         (((GPTM_BITBANDING_TypeDef*) (GPWTM_BASE_BITBANDING+(GPWTM4_OFFSET*32u))))
#define GPWTM5_BITBANDING         (((GPTM_BITBANDING_TypeDef*) (GPWTM_BASE_BITBANDING+(GPWTM5_OFFSET*32u))))

#define GPWTM0_BITBANDING_CTL     (((GPWTM_BITBANDING_CTL_TypeDef*) (GPWTM_BASE_BITBANDING+(GPWTM0_OFFSET*32u))))
#define GPWTM1_BITBANDING_CTL     (((GPWTM_BITBANDING_CTL_TypeDef*) (GPWTM_BASE_BITBANDING+(GPWTM1_OFFSET*32u))))
#define GPWTM2_BITBANDING_CTL     (((GPWTM_BITBANDING_CTL_TypeDef*) (GPWTM_BASE_BITBANDING+(GPWTM2_OFFSET*32u))))
#define GPWTM3_BITBANDING_CTL     (((GPWTM_BITBANDING_CTL_TypeDef*) (GPWTM_BASE_BITBANDING+(GPWTM3_OFFSET*32u))))
#define GPWTM4_BITBANDING_CTL     (((GPWTM_BITBANDING_CTL_TypeDef*) (GPWTM_BASE_BITBANDING+(GPWTM4_OFFSET*32u))))
#define GPWTM5_BITBANDING_CTL     (((GPWTM_BITBANDING_CTL_TypeDef*) (GPWTM_BASE_BITBANDING+(GPWTM5_OFFSET*32u))))

#define GPWTM0_BITBANDING_TA      (((GPWTM_BITBANDING_TA_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM0_OFFSET*32u))))
#define GPWTM1_BITBANDING_TA      (((GPWTM_BITBANDING_TA_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM1_OFFSET*32u))))
#define GPWTM2_BITBANDING_TA      (((GPWTM_BITBANDING_TA_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM2_OFFSET*32u))))
#define GPWTM3_BITBANDING_TA      (((GPWTM_BITBANDING_TA_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM3_OFFSET*32u))))
#define GPWTM4_BITBANDING_TA      (((GPWTM_BITBANDING_TA_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM4_OFFSET*32u))))
#define GPWTM5_BITBANDING_TA      (((GPWTM_BITBANDING_TA_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM5_OFFSET*32u))))

#define GPWTM0_BITBANDING_TB      (((GPWTM_BITBANDING_TB_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM0_OFFSET*32u))))
#define GPWTM1_BITBANDING_TB      (((GPWTM_BITBANDING_TB_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM1_OFFSET*32u))))
#define GPWTM2_BITBANDING_TB      (((GPWTM_BITBANDING_TB_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM2_OFFSET*32u))))
#define GPWTM3_BITBANDING_TB      (((GPWTM_BITBANDING_TB_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM3_OFFSET*32u))))
#define GPWTM4_BITBANDING_TB      (((GPWTM_BITBANDING_TB_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM4_OFFSET*32u))))
#define GPWTM5_BITBANDING_TB      (((GPWTM_BITBANDING_TB_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM5_OFFSET*32u))))

#define GPWTM0_BITBANDING_TW      (((GPWTM_BITBANDING_TW_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM0_OFFSET*32u))))
#define GPWTM1_BITBANDING_TW      (((GPWTM_BITBANDING_TW_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM1_OFFSET*32u))))
#define GPWTM2_BITBANDING_TW      (((GPWTM_BITBANDING_TW_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM2_OFFSET*32u))))
#define GPWTM3_BITBANDING_TW      (((GPWTM_BITBANDING_TW_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM3_OFFSET*32u))))
#define GPWTM4_BITBANDING_TW      (((GPWTM_BITBANDING_TW_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM4_OFFSET*32u))))
#define GPWTM5_BITBANDING_TW      (((GPWTM_BITBANDING_TW_TypeDef*)  (GPWTM_BASE_BITBANDING+(GPWTM5_OFFSET*32u))))



/******************************************************************************************
************************************ 1 GPTMCFG *********************************************
******************************************************************************************/

/* GPTM0 GPTMCFG*/
/* GPTM1 GPTMCFG*/
/* GPTM2 GPTMCFG*/
/* GPTM3 GPTMCFG*/
/* GPTM4 GPTMCFG*/
/* GPTM5 GPTMCFG*/

#define GPTM0_BITBANDING_GPTMCFG        (((BITBANDING_GPTMCFG_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMCFG_OFFSET)*32u))))
#define GPTM1_BITBANDING_GPTMCFG        (((BITBANDING_GPTMCFG_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMCFG_OFFSET)*32u))))
#define GPTM2_BITBANDING_GPTMCFG        (((BITBANDING_GPTMCFG_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMCFG_OFFSET)*32u))))
#define GPTM3_BITBANDING_GPTMCFG        (((BITBANDING_GPTMCFG_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMCFG_OFFSET)*32u))))
#define GPTM4_BITBANDING_GPTMCFG        (((BITBANDING_GPTMCFG_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMCFG_OFFSET)*32u))))
#define GPTM5_BITBANDING_GPTMCFG        (((BITBANDING_GPTMCFG_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMCFG_OFFSET)*32u))))

#define GPTM0_GPTMCFG                   (((GPTMCFG_TypeDef*)(GPTM0_BASE + GPTM_GPTMCFG_OFFSET )))
#define GPTM1_GPTMCFG                   (((GPTMCFG_TypeDef*)(GPTM1_BASE + GPTM_GPTMCFG_OFFSET )))
#define GPTM2_GPTMCFG                   (((GPTMCFG_TypeDef*)(GPTM2_BASE + GPTM_GPTMCFG_OFFSET )))
#define GPTM3_GPTMCFG                   (((GPTMCFG_TypeDef*)(GPTM3_BASE + GPTM_GPTMCFG_OFFSET )))
#define GPTM4_GPTMCFG                   (((GPTMCFG_TypeDef*)(GPTM4_BASE + GPTM_GPTMCFG_OFFSET )))
#define GPTM5_GPTMCFG                   (((GPTMCFG_TypeDef*)(GPTM5_BASE + GPTM_GPTMCFG_OFFSET )))

#define GPTM0_GPTMCFG_R                 (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMCFG_OFFSET)))
#define GPTM1_GPTMCFG_R                 (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMCFG_OFFSET)))
#define GPTM2_GPTMCFG_R                 (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMCFG_OFFSET)))
#define GPTM3_GPTMCFG_R                 (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMCFG_OFFSET)))
#define GPTM4_GPTMCFG_R                 (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMCFG_OFFSET)))
#define GPTM5_GPTMCFG_R                 (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMCFG_OFFSET)))

#define GPTM0_BITBANDING_CTL_GPTMCFG    (((BITBANDING_GPTMCFG_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_CTL_GPTMCFG_OFFSET)*32u))))
#define GPTM1_BITBANDING_CTL_GPTMCFG    (((BITBANDING_GPTMCFG_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_CTL_GPTMCFG_OFFSET)*32u))))
#define GPTM2_BITBANDING_CTL_GPTMCFG    (((BITBANDING_GPTMCFG_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_CTL_GPTMCFG_OFFSET)*32u))))
#define GPTM3_BITBANDING_CTL_GPTMCFG    (((BITBANDING_GPTMCFG_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_CTL_GPTMCFG_OFFSET)*32u))))
#define GPTM4_BITBANDING_CTL_GPTMCFG    (((BITBANDING_GPTMCFG_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_CTL_GPTMCFG_OFFSET)*32u))))
#define GPTM5_BITBANDING_CTL_GPTMCFG    (((BITBANDING_GPTMCFG_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_CTL_GPTMCFG_OFFSET)*32u))))

#define GPTM0_CTL_GPTMCFG               (((GPTMCFG_TypeDef*)(GPTM0_BASE + GPTM_CTL_GPTMCFG_OFFSET )))
#define GPTM1_CTL_GPTMCFG               (((GPTMCFG_TypeDef*)(GPTM1_BASE + GPTM_CTL_GPTMCFG_OFFSET )))
#define GPTM2_CTL_GPTMCFG               (((GPTMCFG_TypeDef*)(GPTM2_BASE + GPTM_CTL_GPTMCFG_OFFSET )))
#define GPTM3_CTL_GPTMCFG               (((GPTMCFG_TypeDef*)(GPTM3_BASE + GPTM_CTL_GPTMCFG_OFFSET )))
#define GPTM4_CTL_GPTMCFG               (((GPTMCFG_TypeDef*)(GPTM4_BASE + GPTM_CTL_GPTMCFG_OFFSET )))
#define GPTM5_CTL_GPTMCFG               (((GPTMCFG_TypeDef*)(GPTM5_BASE + GPTM_CTL_GPTMCFG_OFFSET )))

#define GPTM0_CTL_GPTMCFG_R             (*((volatile uint32_t *)(GPTM0_BASE +GPTM_CTL_GPTMCFG_OFFSET)))
#define GPTM1_CTL_GPTMCFG_R             (*((volatile uint32_t *)(GPTM1_BASE +GPTM_CTL_GPTMCFG_OFFSET)))
#define GPTM2_CTL_GPTMCFG_R             (*((volatile uint32_t *)(GPTM2_BASE +GPTM_CTL_GPTMCFG_OFFSET)))
#define GPTM3_CTL_GPTMCFG_R             (*((volatile uint32_t *)(GPTM3_BASE +GPTM_CTL_GPTMCFG_OFFSET)))
#define GPTM4_CTL_GPTMCFG_R             (*((volatile uint32_t *)(GPTM4_BASE +GPTM_CTL_GPTMCFG_OFFSET)))
#define GPTM5_CTL_GPTMCFG_R             (*((volatile uint32_t *)(GPTM5_BASE +GPTM_CTL_GPTMCFG_OFFSET)))


/* GPWTM0 GPTMCFG*/
/* GPWTM1 GPTMCFG*/
/* GPWTM2 GPTMCFG*/
/* GPWTM3 GPTMCFG*/
/* GPWTM4 GPTMCFG*/
/* GPWTM5 GPTMCFG*/

#define GPWTM0_BITBANDING_GPTMCFG       (((BITBANDING_GPTMCFG_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMCFG_OFFSET)*32u))))
#define GPWTM1_BITBANDING_GPTMCFG       (((BITBANDING_GPTMCFG_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMCFG_OFFSET)*32u))))
#define GPWTM2_BITBANDING_GPTMCFG       (((BITBANDING_GPTMCFG_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMCFG_OFFSET)*32u))))
#define GPWTM3_BITBANDING_GPTMCFG       (((BITBANDING_GPTMCFG_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMCFG_OFFSET)*32u))))
#define GPWTM4_BITBANDING_GPTMCFG       (((BITBANDING_GPTMCFG_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMCFG_OFFSET)*32u))))
#define GPWTM5_BITBANDING_GPTMCFG       (((BITBANDING_GPTMCFG_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMCFG_OFFSET)*32u))))

#define GPWTM0_GPTMCFG                  (((GPTMCFG_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMCFG_OFFSET )))
#define GPWTM1_GPTMCFG                  (((GPTMCFG_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMCFG_OFFSET )))
#define GPWTM2_GPTMCFG                  (((GPTMCFG_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMCFG_OFFSET )))
#define GPWTM3_GPTMCFG                  (((GPTMCFG_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMCFG_OFFSET )))
#define GPWTM4_GPTMCFG                  (((GPTMCFG_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMCFG_OFFSET )))
#define GPWTM5_GPTMCFG                  (((GPTMCFG_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMCFG_OFFSET )))

#define GPWTM0_GPTMCFG_R                (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMCFG_OFFSET)))
#define GPWTM1_GPTMCFG_R                (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMCFG_OFFSET)))
#define GPWTM2_GPTMCFG_R                (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMCFG_OFFSET)))
#define GPWTM3_GPTMCFG_R                (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMCFG_OFFSET)))
#define GPWTM4_GPTMCFG_R                (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMCFG_OFFSET)))
#define GPWTM5_GPTMCFG_R                (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMCFG_OFFSET)))

#define GPWTM0_BITBANDING_CTL_GPTMCFG   (((BITBANDING_GPTMCFG_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_CTL_GPTMCFG_OFFSET)*32u))))
#define GPWTM1_BITBANDING_CTL_GPTMCFG   (((BITBANDING_GPTMCFG_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_CTL_GPTMCFG_OFFSET)*32u))))
#define GPWTM2_BITBANDING_CTL_GPTMCFG   (((BITBANDING_GPTMCFG_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_CTL_GPTMCFG_OFFSET)*32u))))
#define GPWTM3_BITBANDING_CTL_GPTMCFG   (((BITBANDING_GPTMCFG_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_CTL_GPTMCFG_OFFSET)*32u))))
#define GPWTM4_BITBANDING_CTL_GPTMCFG   (((BITBANDING_GPTMCFG_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_CTL_GPTMCFG_OFFSET)*32u))))
#define GPWTM5_BITBANDING_CTL_GPTMCFG   (((BITBANDING_GPTMCFG_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_CTL_GPTMCFG_OFFSET)*32u))))

#define GPWTM0_CTL_GPTMCFG              (((GPTMCFG_TypeDef*)(GPWTM0_BASE + GPWTM_CTL_GPTMCFG_OFFSET )))
#define GPWTM1_CTL_GPTMCFG              (((GPTMCFG_TypeDef*)(GPWTM1_BASE + GPWTM_CTL_GPTMCFG_OFFSET )))
#define GPWTM2_CTL_GPTMCFG              (((GPTMCFG_TypeDef*)(GPWTM2_BASE + GPWTM_CTL_GPTMCFG_OFFSET )))
#define GPWTM3_CTL_GPTMCFG              (((GPTMCFG_TypeDef*)(GPWTM3_BASE + GPWTM_CTL_GPTMCFG_OFFSET )))
#define GPWTM4_CTL_GPTMCFG              (((GPTMCFG_TypeDef*)(GPWTM4_BASE + GPWTM_CTL_GPTMCFG_OFFSET )))
#define GPWTM5_CTL_GPTMCFG              (((GPTMCFG_TypeDef*)(GPWTM5_BASE + GPWTM_CTL_GPTMCFG_OFFSET )))

#define GPWTM0_CTL_GPTMCFG_R            (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_CTL_GPTMCFG_OFFSET)))
#define GPWTM1_CTL_GPTMCFG_R            (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_CTL_GPTMCFG_OFFSET)))
#define GPWTM2_CTL_GPTMCFG_R            (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_CTL_GPTMCFG_OFFSET)))
#define GPWTM3_CTL_GPTMCFG_R            (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_CTL_GPTMCFG_OFFSET)))
#define GPWTM4_CTL_GPTMCFG_R            (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_CTL_GPTMCFG_OFFSET)))
#define GPWTM5_CTL_GPTMCFG_R            (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_CTL_GPTMCFG_OFFSET)))


/******************************************************************************************
************************************ 2 GPTMTAMR *********************************************
******************************************************************************************/

/* GPTM0 GPTMTAMR*/
/* GPTM1 GPTMTAMR*/
/* GPTM2 GPTMTAMR*/
/* GPTM3 GPTMTAMR*/
/* GPTM4 GPTMTAMR*/
/* GPTM5 GPTMTAMR*/

#define GPTM0_BITBANDING_GPTMTAMR       (((BITBANDING_GPTMTAMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u))))
#define GPTM1_BITBANDING_GPTMTAMR       (((BITBANDING_GPTMTAMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u))))
#define GPTM2_BITBANDING_GPTMTAMR       (((BITBANDING_GPTMTAMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u))))
#define GPTM3_BITBANDING_GPTMTAMR       (((BITBANDING_GPTMTAMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u))))
#define GPTM4_BITBANDING_GPTMTAMR       (((BITBANDING_GPTMTAMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u))))
#define GPTM5_BITBANDING_GPTMTAMR       (((BITBANDING_GPTMTAMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u))))

#define GPTM0_GPTMTAMR                  (((GPTMTAMR_TypeDef*)(GPTM0_BASE + GPTM_GPTMTAMR_OFFSET )))
#define GPTM1_GPTMTAMR                  (((GPTMTAMR_TypeDef*)(GPTM1_BASE + GPTM_GPTMTAMR_OFFSET )))
#define GPTM2_GPTMTAMR                  (((GPTMTAMR_TypeDef*)(GPTM2_BASE + GPTM_GPTMTAMR_OFFSET )))
#define GPTM3_GPTMTAMR                  (((GPTMTAMR_TypeDef*)(GPTM3_BASE + GPTM_GPTMTAMR_OFFSET )))
#define GPTM4_GPTMTAMR                  (((GPTMTAMR_TypeDef*)(GPTM4_BASE + GPTM_GPTMTAMR_OFFSET )))
#define GPTM5_GPTMTAMR                  (((GPTMTAMR_TypeDef*)(GPTM5_BASE + GPTM_GPTMTAMR_OFFSET )))

#define GPTM0_GPTMTAMR_R                (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTAMR_OFFSET)))
#define GPTM1_GPTMTAMR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTAMR_OFFSET)))
#define GPTM2_GPTMTAMR_R                (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTAMR_OFFSET)))
#define GPTM3_GPTMTAMR_R                (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTAMR_OFFSET)))
#define GPTM4_GPTMTAMR_R                (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTAMR_OFFSET)))
#define GPTM5_GPTMTAMR_R                (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTAMR_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnMR    (((BITBANDING_TA_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u))))
#define GPTM1_BITBANDING_TA_GPTMTnMR    (((BITBANDING_TA_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u))))
#define GPTM2_BITBANDING_TA_GPTMTnMR    (((BITBANDING_TA_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u))))
#define GPTM3_BITBANDING_TA_GPTMTnMR    (((BITBANDING_TA_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u))))
#define GPTM4_BITBANDING_TA_GPTMTnMR    (((BITBANDING_TA_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u))))
#define GPTM5_BITBANDING_TA_GPTMTnMR    (((BITBANDING_TA_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u))))

#define GPTM0_TA_GPTMTnMR               (((TA_GPTMMR_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnMR_OFFSET )))
#define GPTM1_TA_GPTMTnMR               (((TA_GPTMMR_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnMR_OFFSET )))
#define GPTM2_TA_GPTMTnMR               (((TA_GPTMMR_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnMR_OFFSET )))
#define GPTM3_TA_GPTMTnMR               (((TA_GPTMMR_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnMR_OFFSET )))
#define GPTM4_TA_GPTMTnMR               (((TA_GPTMMR_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnMR_OFFSET )))
#define GPTM5_TA_GPTMTnMR               (((TA_GPTMMR_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnMR_OFFSET )))

#define GPTM0_TA_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnMR_OFFSET)))
#define GPTM1_TA_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnMR_OFFSET)))
#define GPTM2_TA_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnMR_OFFSET)))
#define GPTM3_TA_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnMR_OFFSET)))
#define GPTM4_TA_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnMR_OFFSET)))
#define GPTM5_TA_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnMR_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMTnMR    (((BITBANDING_TW_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u))))
#define GPTM1_BITBANDING_TW_GPTMTnMR    (((BITBANDING_TW_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u))))
#define GPTM2_BITBANDING_TW_GPTMTnMR    (((BITBANDING_TW_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u))))
#define GPTM3_BITBANDING_TW_GPTMTnMR    (((BITBANDING_TW_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u))))
#define GPTM4_BITBANDING_TW_GPTMTnMR    (((BITBANDING_TW_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u))))
#define GPTM5_BITBANDING_TW_GPTMTnMR    (((BITBANDING_TW_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u))))

#define GPTM0_TW_GPTMTnMR               (((TW_GPTMMR_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMTnMR_OFFSET )))
#define GPTM1_TW_GPTMTnMR               (((TW_GPTMMR_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnMR_OFFSET )))
#define GPTM2_TW_GPTMTnMR               (((TW_GPTMMR_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMTnMR_OFFSET )))
#define GPTM3_TW_GPTMTnMR               (((TW_GPTMMR_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMTnMR_OFFSET )))
#define GPTM4_TW_GPTMTnMR               (((TW_GPTMMR_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMTnMR_OFFSET )))
#define GPTM5_TW_GPTMTnMR               (((TW_GPTMMR_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMTnMR_OFFSET )))

#define GPTM0_TW_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMTnMR_OFFSET)))
#define GPTM1_TW_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnMR_OFFSET)))
#define GPTM2_TW_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMTnMR_OFFSET)))
#define GPTM3_TW_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMTnMR_OFFSET)))
#define GPTM4_TW_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMTnMR_OFFSET)))
#define GPTM5_TW_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMTnMR_OFFSET)))


/* GPWTM0 GPTMTAMR*/
/* GPWTM1 GPTMTAMR*/
/* GPWTM2 GPTMTAMR*/
/* GPWTM3 GPTMTAMR*/
/* GPWTM4 GPTMTAMR*/
/* GPWTM5 GPTMTAMR*/

#define GPWTM0_BITBANDING_GPTMTAMR       (((BITBANDING_GPTMTAMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u))))
#define GPWTM1_BITBANDING_GPTMTAMR       (((BITBANDING_GPTMTAMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u))))
#define GPWTM2_BITBANDING_GPTMTAMR       (((BITBANDING_GPTMTAMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u))))
#define GPWTM3_BITBANDING_GPTMTAMR       (((BITBANDING_GPTMTAMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u))))
#define GPWTM4_BITBANDING_GPTMTAMR       (((BITBANDING_GPTMTAMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u))))
#define GPWTM5_BITBANDING_GPTMTAMR       (((BITBANDING_GPTMTAMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u))))

#define GPWTM0_GPTMTAMR                  (((GPTMTAMR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTAMR_OFFSET )))
#define GPWTM1_GPTMTAMR                  (((GPTMTAMR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTAMR_OFFSET )))
#define GPWTM2_GPTMTAMR                  (((GPTMTAMR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTAMR_OFFSET )))
#define GPWTM3_GPTMTAMR                  (((GPTMTAMR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTAMR_OFFSET )))
#define GPWTM4_GPTMTAMR                  (((GPTMTAMR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTAMR_OFFSET )))
#define GPWTM5_GPTMTAMR                  (((GPTMTAMR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTAMR_OFFSET )))

#define GPWTM0_GPTMTAMR_R                (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTAMR_OFFSET)))
#define GPWTM1_GPTMTAMR_R                (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTAMR_OFFSET)))
#define GPWTM2_GPTMTAMR_R                (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTAMR_OFFSET)))
#define GPWTM3_GPTMTAMR_R                (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTAMR_OFFSET)))
#define GPWTM4_GPTMTAMR_R                (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTAMR_OFFSET)))
#define GPWTM5_GPTMTAMR_R                (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTAMR_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnMR    (((BITBANDING_TA_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMR    (((BITBANDING_TA_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMR    (((BITBANDING_TA_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMR    (((BITBANDING_TA_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMR    (((BITBANDING_TA_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMR    (((BITBANDING_TA_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u))))

#define GPWTM0_TA_GPTMTnMR               (((TA_GPTMMR_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnMR_OFFSET )))
#define GPWTM1_TA_GPTMTnMR               (((TA_GPTMMR_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnMR_OFFSET )))
#define GPWTM2_TA_GPTMTnMR               (((TA_GPTMMR_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnMR_OFFSET )))
#define GPWTM3_TA_GPTMTnMR               (((TA_GPTMMR_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnMR_OFFSET )))
#define GPWTM4_TA_GPTMTnMR               (((TA_GPTMMR_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnMR_OFFSET )))
#define GPWTM5_TA_GPTMTnMR               (((TA_GPTMMR_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnMR_OFFSET )))

#define GPWTM0_TA_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnMR_OFFSET)))
#define GPWTM1_TA_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnMR_OFFSET)))
#define GPWTM2_TA_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnMR_OFFSET)))
#define GPWTM3_TA_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnMR_OFFSET)))
#define GPWTM4_TA_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnMR_OFFSET)))
#define GPWTM5_TA_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnMR_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnMR    (((BITBANDING_TW_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMR    (((BITBANDING_TW_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMR    (((BITBANDING_TW_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMR    (((BITBANDING_TW_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMR    (((BITBANDING_TW_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMR    (((BITBANDING_TW_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u))))

#define GPWTM0_TW_GPTMTnMR               (((TW_GPTMMR_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnMR_OFFSET )))
#define GPWTM1_TW_GPTMTnMR               (((TW_GPTMMR_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnMR_OFFSET )))
#define GPWTM2_TW_GPTMTnMR               (((TW_GPTMMR_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnMR_OFFSET )))
#define GPWTM3_TW_GPTMTnMR               (((TW_GPTMMR_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnMR_OFFSET )))
#define GPWTM4_TW_GPTMTnMR               (((TW_GPTMMR_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnMR_OFFSET )))
#define GPWTM5_TW_GPTMTnMR               (((TW_GPTMMR_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnMR_OFFSET )))

#define GPWTM0_TW_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnMR_OFFSET)))
#define GPWTM1_TW_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnMR_OFFSET)))
#define GPWTM2_TW_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnMR_OFFSET)))
#define GPWTM3_TW_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnMR_OFFSET)))
#define GPWTM4_TW_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnMR_OFFSET)))
#define GPWTM5_TW_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnMR_OFFSET)))



/* GPTM0 BITBANDING GPTMTAMR*/
#define GPTM0_BITBANDING_GPTMTAMR_TACMR         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TACMR_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTAMR_TAAMS         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAAMS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTAMR_TACDIR        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TACDIR_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTAMR_TAMIE         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAMIE_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTAMR_TAWOT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAWOT_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTAMR_TASNAPS       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TASNAPS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTAMR_TAILD         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAILD_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTAMR_TAPWMIE       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAPWMIE_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTAMR_TAMRSU        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAMRSU_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTAMR_TAPLO         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAPLO_BIT*4u))))


#define GPTM0_BITBANDING_TA_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnPLO_BIT*4u))))

#define GPTM0_BITBANDING_TW_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM1 BITBANDING GPTMTAMR*/
#define GPTM1_BITBANDING_GPTMTAMR_TACMR         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TACMR_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTAMR_TAAMS         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAAMS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTAMR_TACDIR        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TACDIR_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTAMR_TAMIE         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAMIE_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTAMR_TAWOT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAWOT_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTAMR_TASNAPS       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TASNAPS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTAMR_TAILD         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAILD_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTAMR_TAPWMIE       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAPWMIE_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTAMR_TAMRSU        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAMRSU_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTAMR_TAPLO         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAPLO_BIT*4u))))


#define GPTM1_BITBANDING_TA_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnPLO_BIT*4u))))

#define GPTM1_BITBANDING_TW_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM2 BITBANDING GPTMTAMR*/
#define GPTM2_BITBANDING_GPTMTAMR_TACMR         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TACMR_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTAMR_TAAMS         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAAMS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTAMR_TACDIR        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TACDIR_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTAMR_TAMIE         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAMIE_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTAMR_TAWOT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAWOT_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTAMR_TASNAPS       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TASNAPS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTAMR_TAILD         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAILD_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTAMR_TAPWMIE       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAPWMIE_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTAMR_TAMRSU        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAMRSU_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTAMR_TAPLO         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAPLO_BIT*4u))))


#define GPTM2_BITBANDING_TA_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnPLO_BIT*4u))))

#define GPTM2_BITBANDING_TW_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM3 BITBANDING GPTMTAMR*/
#define GPTM3_BITBANDING_GPTMTAMR_TACMR         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TACMR_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTAMR_TAAMS         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAAMS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTAMR_TACDIR        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TACDIR_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTAMR_TAMIE         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAMIE_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTAMR_TAWOT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAWOT_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTAMR_TASNAPS       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TASNAPS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTAMR_TAILD         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAILD_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTAMR_TAPWMIE       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAPWMIE_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTAMR_TAMRSU        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAMRSU_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTAMR_TAPLO         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAPLO_BIT*4u))))


#define GPTM3_BITBANDING_TA_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnPLO_BIT*4u))))

#define GPTM3_BITBANDING_TW_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM4 BITBANDING GPTMTAMR*/
#define GPTM4_BITBANDING_GPTMTAMR_TACMR         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TACMR_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTAMR_TAAMS         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAAMS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTAMR_TACDIR        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TACDIR_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTAMR_TAMIE         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAMIE_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTAMR_TAWOT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAWOT_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTAMR_TASNAPS       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TASNAPS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTAMR_TAILD         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAILD_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTAMR_TAPWMIE       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAPWMIE_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTAMR_TAMRSU        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAMRSU_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTAMR_TAPLO         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAPLO_BIT*4u))))


#define GPTM4_BITBANDING_TA_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnPLO_BIT*4u))))

#define GPTM4_BITBANDING_TW_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM5 BITBANDING GPTMTAMR*/
#define GPTM5_BITBANDING_GPTMTAMR_TACMR         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TACMR_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTAMR_TAAMS         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAAMS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTAMR_TACDIR        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TACDIR_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTAMR_TAMIE         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAMIE_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTAMR_TAWOT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAWOT_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTAMR_TASNAPS       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TASNAPS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTAMR_TAILD         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAILD_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTAMR_TAPWMIE       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAPWMIE_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTAMR_TAMRSU        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAMRSU_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTAMR_TAPLO         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAMR_OFFSET)*32u)+(GPTM_GPTMTAMR_R_TAPLO_BIT*4u))))


#define GPTM5_BITBANDING_TA_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMR_OFFSET)*32u)+(GPTM_TA_GPTMTnMR_R_TnPLO_BIT*4u))))

#define GPTM5_BITBANDING_TW_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMR_OFFSET)*32u)+(GPTM_TW_GPTMTnMR_R_TnPLO_BIT*4u))))


/* GPTM0 BITBANDING GPTMTAMR*/
#define GPWTM0_BITBANDING_GPTMTAMR_TACMR        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TACMR_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTAMR_TAAMS        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAAMS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTAMR_TACDIR       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TACDIR_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTAMR_TAMIE        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAMIE_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTAMR_TAWOT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAWOT_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTAMR_TASNAPS      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TASNAPS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTAMR_TAILD        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAILD_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTAMR_TAPWMIE      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAPWMIE_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTAMR_TAMRSU       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAMRSU_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTAMR_TAPLO        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAPLO_BIT*4u))))


#define GPWTM0_BITBANDING_TA_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnPLO_BIT*4u))))

#define GPWTM0_BITBANDING_TW_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM1 BITBANDING GPTMTAMR*/
#define GPWTM1_BITBANDING_GPTMTAMR_TACMR        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TACMR_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTAMR_TAAMS        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAAMS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTAMR_TACDIR       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TACDIR_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTAMR_TAMIE        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAMIE_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTAMR_TAWOT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAWOT_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTAMR_TASNAPS      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TASNAPS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTAMR_TAILD        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAILD_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTAMR_TAPWMIE      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAPWMIE_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTAMR_TAMRSU       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAMRSU_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTAMR_TAPLO        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAPLO_BIT*4u))))


#define GPWTM1_BITBANDING_TA_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnPLO_BIT*4u))))

#define GPWTM1_BITBANDING_TW_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM2 BITBANDING GPTMTAMR*/
#define GPWTM2_BITBANDING_GPTMTAMR_TACMR        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TACMR_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTAMR_TAAMS        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAAMS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTAMR_TACDIR       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TACDIR_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTAMR_TAMIE        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAMIE_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTAMR_TAWOT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAWOT_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTAMR_TASNAPS      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TASNAPS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTAMR_TAILD        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAILD_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTAMR_TAPWMIE      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAPWMIE_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTAMR_TAMRSU       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAMRSU_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTAMR_TAPLO        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAPLO_BIT*4u))))


#define GPWTM2_BITBANDING_TA_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnPLO_BIT*4u))))

#define GPWTM2_BITBANDING_TW_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM3 BITBANDING GPTMTAMR*/
#define GPWTM3_BITBANDING_GPTMTAMR_TACMR        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TACMR_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTAMR_TAAMS        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAAMS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTAMR_TACDIR       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TACDIR_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTAMR_TAMIE        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAMIE_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTAMR_TAWOT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAWOT_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTAMR_TASNAPS      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TASNAPS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTAMR_TAILD        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAILD_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTAMR_TAPWMIE      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAPWMIE_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTAMR_TAMRSU       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAMRSU_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTAMR_TAPLO        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAPLO_BIT*4u))))


#define GPWTM3_BITBANDING_TA_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnPLO_BIT*4u))))

#define GPWTM3_BITBANDING_TW_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM4 BITBANDING GPTMTAMR*/
#define GPWTM4_BITBANDING_GPTMTAMR_TACMR        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TACMR_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTAMR_TAAMS        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAAMS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTAMR_TACDIR       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TACDIR_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTAMR_TAMIE        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAMIE_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTAMR_TAWOT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAWOT_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTAMR_TASNAPS      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TASNAPS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTAMR_TAILD        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAILD_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTAMR_TAPWMIE      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAPWMIE_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTAMR_TAMRSU       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAMRSU_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTAMR_TAPLO        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAPLO_BIT*4u))))


#define GPWTM4_BITBANDING_TA_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnPLO_BIT*4u))))

#define GPWTM4_BITBANDING_TW_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM5 BITBANDING GPTMTAMR*/
#define GPWTM5_BITBANDING_GPTMTAMR_TACMR        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TACMR_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTAMR_TAAMS        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAAMS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTAMR_TACDIR       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TACDIR_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTAMR_TAMIE        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAMIE_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTAMR_TAWOT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAWOT_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTAMR_TASNAPS      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TASNAPS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTAMR_TAILD        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAILD_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTAMR_TAPWMIE      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAPWMIE_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTAMR_TAMRSU       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAMRSU_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTAMR_TAPLO        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAMR_OFFSET)*32u)+(GPWTM_GPTMTAMR_R_TAPLO_BIT*4u))))


#define GPWTM5_BITBANDING_TA_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnMR_R_TnPLO_BIT*4u))))

#define GPWTM5_BITBANDING_TW_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnMR_R_TnPLO_BIT*4u))))


/******************************************************************************************
************************************ 3 GPTMTBMR *********************************************
******************************************************************************************/

/* GPTM0 GPTMTBMR*/
#define GPTM0_BITBANDING_GPTMTBMR       (((BITBANDING_GPTMTBMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u))))
#define GPTM0_GPTMTBMR                  (((GPTMTBMR_TypeDef*)(GPTM0_BASE + GPTM_GPTMTBMR_OFFSET )))
#define GPTM0_GPTMTBMR_R                (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTBMR_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnMR    (((BITBANDING_TB_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnMR               (((TB_GPTMMR_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnMR_OFFSET )))
#define GPTM0_TB_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnMR_OFFSET)))

/* GPTM1 GPTMTBMR*/
#define GPTM1_BITBANDING_GPTMTBMR       (((BITBANDING_GPTMTBMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u))))
#define GPTM1_GPTMTBMR                  (((GPTMTBMR_TypeDef*)(GPTM1_BASE + GPTM_GPTMTBMR_OFFSET )))
#define GPTM1_GPTMTBMR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTBMR_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnMR    (((BITBANDING_TB_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnMR               (((TB_GPTMMR_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnMR_OFFSET )))
#define GPTM1_TB_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnMR_OFFSET)))

/* GPTM2 GPTMTBMR*/
#define GPTM2_BITBANDING_GPTMTBMR       (((BITBANDING_GPTMTBMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u))))
#define GPTM2_GPTMTBMR                  (((GPTMTBMR_TypeDef*)(GPTM2_BASE + GPTM_GPTMTBMR_OFFSET )))
#define GPTM2_GPTMTBMR_R                (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTBMR_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnMR    (((BITBANDING_TB_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnMR               (((TB_GPTMMR_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnMR_OFFSET )))
#define GPTM2_TB_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnMR_OFFSET)))

/* GPTM3 GPTMTBMR*/
#define GPTM3_BITBANDING_GPTMTBMR       (((BITBANDING_GPTMTBMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u))))
#define GPTM3_GPTMTBMR                  (((GPTMTBMR_TypeDef*)(GPTM3_BASE + GPTM_GPTMTBMR_OFFSET )))
#define GPTM3_GPTMTBMR_R                (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTBMR_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnMR    (((BITBANDING_TB_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnMR               (((TB_GPTMMR_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnMR_OFFSET )))
#define GPTM3_TB_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnMR_OFFSET)))

/* GPTM4 GPTMTBMR*/
#define GPTM4_BITBANDING_GPTMTBMR       (((BITBANDING_GPTMTBMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u))))
#define GPTM4_GPTMTBMR                  (((GPTMTBMR_TypeDef*)(GPTM4_BASE + GPTM_GPTMTBMR_OFFSET )))
#define GPTM4_GPTMTBMR_R                (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTBMR_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnMR    (((BITBANDING_TB_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnMR               (((TB_GPTMMR_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnMR_OFFSET )))
#define GPTM4_TB_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnMR_OFFSET)))

/* GPTM5 GPTMTBMR*/
#define GPTM5_BITBANDING_GPTMTBMR       (((BITBANDING_GPTMTBMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u))))
#define GPTM5_GPTMTBMR                  (((GPTMTBMR_TypeDef*)(GPTM5_BASE + GPTM_GPTMTBMR_OFFSET )))
#define GPTM5_GPTMTBMR_R                (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTBMR_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnMR    (((BITBANDING_TB_GPTMMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnMR               (((TB_GPTMMR_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnMR_OFFSET )))
#define GPTM5_TB_GPTMTnMR_R             (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnMR_OFFSET)))

/* GPWTM0 GPTMTBMR*/
#define GPWTM0_BITBANDING_GPTMTBMR       (((BITBANDING_GPTMTBMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u))))
#define GPWTM0_GPTMTBMR                  (((GPTMTBMR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTBMR_OFFSET )))
#define GPWTM0_GPTMTBMR_R                (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTBMR_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnMR    (((BITBANDING_TB_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnMR               (((TB_GPTMMR_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnMR_OFFSET )))
#define GPWTM0_TB_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnMR_OFFSET)))

/* GPWTM1 GPTMTBMR*/
#define GPWTM1_BITBANDING_GPTMTBMR       (((BITBANDING_GPTMTBMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u))))
#define GPWTM1_GPTMTBMR                  (((GPTMTBMR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTBMR_OFFSET )))
#define GPWTM1_GPTMTBMR_R                (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTBMR_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnMR    (((BITBANDING_TB_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnMR               (((TB_GPTMMR_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnMR_OFFSET )))
#define GPWTM1_TB_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnMR_OFFSET)))

/* GPWTM2 GPTMTBMR*/
#define GPWTM2_BITBANDING_GPTMTBMR       (((BITBANDING_GPTMTBMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u))))
#define GPWTM2_GPTMTBMR                  (((GPTMTBMR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTBMR_OFFSET )))
#define GPWTM2_GPTMTBMR_R                (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTBMR_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnMR    (((BITBANDING_TB_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnMR               (((TB_GPTMMR_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnMR_OFFSET )))
#define GPWTM2_TB_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnMR_OFFSET)))

/* GPWTM3 GPTMTBMR*/
#define GPWTM3_BITBANDING_GPTMTBMR       (((BITBANDING_GPTMTBMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u))))
#define GPWTM3_GPTMTBMR                  (((GPTMTBMR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTBMR_OFFSET )))
#define GPWTM3_GPTMTBMR_R                (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTBMR_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnMR    (((BITBANDING_TB_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnMR               (((TB_GPTMMR_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnMR_OFFSET )))
#define GPWTM3_TB_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnMR_OFFSET)))

/* GPWTM4 GPTMTBMR*/
#define GPWTM4_BITBANDING_GPTMTBMR       (((BITBANDING_GPTMTBMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u))))
#define GPWTM4_GPTMTBMR                  (((GPTMTBMR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTBMR_OFFSET )))
#define GPWTM4_GPTMTBMR_R                (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTBMR_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnMR    (((BITBANDING_TB_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnMR               (((TB_GPTMMR_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnMR_OFFSET )))
#define GPWTM4_TB_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnMR_OFFSET)))

/* GPWTM5 GPTMTBMR*/
#define GPWTM5_BITBANDING_GPTMTBMR       (((BITBANDING_GPTMTBMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u))))
#define GPWTM5_GPTMTBMR                  (((GPTMTBMR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTBMR_OFFSET )))
#define GPWTM5_GPTMTBMR_R                (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTBMR_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnMR    (((BITBANDING_TB_GPTMMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnMR               (((TB_GPTMMR_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnMR_OFFSET )))
#define GPWTM5_TB_GPTMTnMR_R             (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnMR_OFFSET)))



/*----------*/
#define GPTM_GPTMTBMR_R_TBMR_MASK           ((uint32_t)0x00000003u)
#define GPTM_GPTMTBMR_R_TBMR_BIT            (0u)
#define GPTM_GPTMTBMR_R_TBMR_ONESHOT        ((uint32_t)0x00000001u)
#define GPTM_GPTMTBMR_R_TBMR_PERIOD         ((uint32_t)0x00000002u)
#define GPTM_GPTMTBMR_R_TBMR_CAPTURE        ((uint32_t)0x00000003u)

#define GPTM_GPTMTBMR_TBMR_MASK             ((uint32_t)0x00000003u)
#define GPTM_GPTMTBMR_TBMR_ONESHOT          ((uint32_t)0x00000001u)
#define GPTM_GPTMTBMR_TBMR_PERIOD           ((uint32_t)0x00000002u)
#define GPTM_GPTMTBMR_TBMR_CAPTURE          ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMTBMR_R_TBCMR_MASK          ((uint32_t)0x00000004u)
#define GPTM_GPTMTBMR_R_TBCMR_BIT           (2u)
#define GPTM_GPTMTBMR_R_TBCMR_EDGECOUNT     ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_R_TBCMR_EDGETIME      ((uint32_t)0x00000004u)

#define GPTM_GPTMTBMR_TBCMR_MASK            ((uint32_t)0x00000001u)
#define GPTM_GPTMTBMR_TBCMR_EDGECOUNT       ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_TBCMR_EDGETIME        ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMTBMR_R_TBAMS_MASK          ((uint32_t)0x00000008u)
#define GPTM_GPTMTBMR_R_TBAMS_BIT           (3u)
#define GPTM_GPTMTBMR_R_TBAMS_CAPCOMP       ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_R_TBAMS_PWM           ((uint32_t)0x00000008u)

#define GPTM_GPTMTBMR_TBAMS_MASK            ((uint32_t)0x00000001u)
#define GPTM_GPTMTBMR_TBAMS_CAPCOMP         ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_TBAMS_PWM             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMTBMR_R_TBCDIR_MASK         ((uint32_t)0x00000010u)
#define GPTM_GPTMTBMR_R_TBCDIR_BIT          (4u)
#define GPTM_GPTMTBMR_R_TBCDIR_DOWN         ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_R_TBCDIR_UP           ((uint32_t)0x00000010u)

#define GPTM_GPTMTBMR_TBCDIR_MASK           ((uint32_t)0x00000001u)
#define GPTM_GPTMTBMR_TBCDIR_DOWN           ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_TBCDIR_UP             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMTBMR_R_TBMIE_MASK          ((uint32_t)0x00000020u)
#define GPTM_GPTMTBMR_R_TBMIE_BIT           (5u)
#define GPTM_GPTMTBMR_R_TBMIE_DIS           ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_R_TBMIE_EN            ((uint32_t)0x00000020u)

#define GPTM_GPTMTBMR_TBMIE_MASK            ((uint32_t)0x00000001u)
#define GPTM_GPTMTBMR_TBMIE_DIS             ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_TBMIE_EN              ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMTBMR_R_TBWOT_MASK          ((uint32_t)0x00000040u)
#define GPTM_GPTMTBMR_R_TBWOT_BIT           (6u)
#define GPTM_GPTMTBMR_R_TBWOT_INSTBNT       ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_R_TBWOT_TRIGGER       ((uint32_t)0x00000040u)

#define GPTM_GPTMTBMR_TBWOT_MASK            ((uint32_t)0x00000001u)
#define GPTM_GPTMTBMR_TBWOT_INSTBNT         ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_TBWOT_TRIGGER         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMTBMR_R_TBSNAPS_MASK        ((uint32_t)0x00000080u)
#define GPTM_GPTMTBMR_R_TBSNAPS_BIT         (7u)
#define GPTM_GPTMTBMR_R_TBSNAPS_DIS         ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_R_TBSNAPS_EN          ((uint32_t)0x00000080u)

#define GPTM_GPTMTBMR_TBSNAPS_MASK          ((uint32_t)0x00000001u)
#define GPTM_GPTMTBMR_TBSNAPS_DIS           ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_TBSNAPS_EN            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMTBMR_R_TBILD_MASK          ((uint32_t)0x00000100u)
#define GPTM_GPTMTBMR_R_TBILD_BIT           (8u)
#define GPTM_GPTMTBMR_R_TBILD_NEXT          ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_R_TBILD_TIMEOUT       ((uint32_t)0x00000100u)

#define GPTM_GPTMTBMR_TBILD_MASK            ((uint32_t)0x00000001u)
#define GPTM_GPTMTBMR_TBILD_NEXT            ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_TBILD_TIMEOUT         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMTBMR_R_TBPWMIE_MASK        ((uint32_t)0x00000200u)
#define GPTM_GPTMTBMR_R_TBPWMIE_BIT         (9u)
#define GPTM_GPTMTBMR_R_TBPWMIE_DIS         ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_R_TBPWMIE_EN          ((uint32_t)0x00000200u)

#define GPTM_GPTMTBMR_TBPWMIE_MASK          ((uint32_t)0x00000001u)
#define GPTM_GPTMTBMR_TBPWMIE_DIS           ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_TBPWMIE_EN            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMTBMR_R_TBMRSU_MASK         ((uint32_t)0x00000400u)
#define GPTM_GPTMTBMR_R_TBMRSU_BIT          (10u)
#define GPTM_GPTMTBMR_R_TBMRSU_NEXT         ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_R_TBMRSU_TIMEOUT      ((uint32_t)0x00000400u)

#define GPTM_GPTMTBMR_TBMRSU_MASK           ((uint32_t)0x00000001u)
#define GPTM_GPTMTBMR_TBMRSU_NEXT           ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_TBMRSU_TIMEOUT        ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMTBMR_R_TBPLO_MASK          ((uint32_t)0x00000800u)
#define GPTM_GPTMTBMR_R_TBPLO_BIT           (11u)
#define GPTM_GPTMTBMR_R_TBPLO_LOW           ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_R_TBPLO_HIGH          ((uint32_t)0x00000800u)

#define GPTM_GPTMTBMR_TBPLO_MASK            ((uint32_t)0x00000001u)
#define GPTM_GPTMTBMR_TBPLO_LOW             ((uint32_t)0x00000000u)
#define GPTM_GPTMTBMR_TBPLO_HIGH            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMR_R_TnMR_MASK        ((uint32_t)0x00000003u)
#define GPTM_TB_GPTMTnMR_R_TnMR_BIT         (0u)
#define GPTM_TB_GPTMTnMR_R_TnMR_ONESHOT     ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMR_R_TnMR_PERIOD      ((uint32_t)0x00000002u)
#define GPTM_TB_GPTMTnMR_R_TnMR_CAPTURE     ((uint32_t)0x00000003u)

#define GPTM_TB_GPTMTnMR_TnMR_MASK          ((uint32_t)0x00000003u)
#define GPTM_TB_GPTMTnMR_TnMR_ONESHOT       ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMR_TnMR_PERIOD        ((uint32_t)0x00000002u)
#define GPTM_TB_GPTMTnMR_TnMR_CAPTURE       ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMR_R_TnCMR_MASK       ((uint32_t)0x00000004u)
#define GPTM_TB_GPTMTnMR_R_TnCMR_BIT        (2u)
#define GPTM_TB_GPTMTnMR_R_TnCMR_EDGECOUNT  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_R_TnCMR_EDGETIME   ((uint32_t)0x00000004u)

#define GPTM_TB_GPTMTnMR_TnCMR_MASK         ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMR_TnCMR_EDGECOUNT    ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_TnCMR_EDGETIME     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMR_R_TnAMS_MASK       ((uint32_t)0x00000008u)
#define GPTM_TB_GPTMTnMR_R_TnAMS_BIT        (3u)
#define GPTM_TB_GPTMTnMR_R_TnAMS_CAPCOMP    ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_R_TnAMS_PWM        ((uint32_t)0x00000008u)

#define GPTM_TB_GPTMTnMR_TnAMS_MASK         ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMR_TnAMS_CAPCOMP      ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_TnAMS_PWM          ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMR_R_TnCDIR_MASK      ((uint32_t)0x00000010u)
#define GPTM_TB_GPTMTnMR_R_TnCDIR_BIT       (4u)
#define GPTM_TB_GPTMTnMR_R_TnCDIR_DOWN      ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_R_TnCDIR_UP        ((uint32_t)0x00000010u)

#define GPTM_TB_GPTMTnMR_TnCDIR_MASK        ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMR_TnCDIR_DOWN        ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_TnCDIR_UP          ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMR_R_TnMIE_MASK       ((uint32_t)0x00000020u)
#define GPTM_TB_GPTMTnMR_R_TnMIE_BIT        (5u)
#define GPTM_TB_GPTMTnMR_R_TnMIE_DIS        ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_R_TnMIE_EN         ((uint32_t)0x00000020u)

#define GPTM_TB_GPTMTnMR_TnMIE_MASK         ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMR_TnMIE_DIS          ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_TnMIE_EN           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMR_R_TnWOT_MASK       ((uint32_t)0x00000040u)
#define GPTM_TB_GPTMTnMR_R_TnWOT_BIT        (6u)
#define GPTM_TB_GPTMTnMR_R_TnWOT_INSTBNT    ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_R_TnWOT_TRIGGER    ((uint32_t)0x00000040u)

#define GPTM_TB_GPTMTnMR_TnWOT_MASK         ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMR_TnWOT_INSTBNT      ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_TnWOT_TRIGGER      ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMR_R_TnSNAPS_MASK     ((uint32_t)0x00000080u)
#define GPTM_TB_GPTMTnMR_R_TnSNAPS_BIT      (7u)
#define GPTM_TB_GPTMTnMR_R_TnSNAPS_DIS      ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_R_TnSNAPS_EN       ((uint32_t)0x00000080u)

#define GPTM_TB_GPTMTnMR_TnSNAPS_MASK       ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMR_TnSNAPS_DIS        ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_TnSNAPS_EN         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMR_R_TnILD_MASK       ((uint32_t)0x00000100u)
#define GPTM_TB_GPTMTnMR_R_TnILD_BIT        (8u)
#define GPTM_TB_GPTMTnMR_R_TnILD_NEXT       ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_R_TnILD_TIMEOUT    ((uint32_t)0x00000100u)

#define GPTM_TB_GPTMTnMR_TnILD_MASK         ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMR_TnILD_NEXT         ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_TnILD_TIMEOUT      ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMR_R_TnPWMIE_MASK     ((uint32_t)0x00000200u)
#define GPTM_TB_GPTMTnMR_R_TnPWMIE_BIT      (9u)
#define GPTM_TB_GPTMTnMR_R_TnPWMIE_DIS      ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_R_TnPWMIE_EN       ((uint32_t)0x00000200u)

#define GPTM_TB_GPTMTnMR_TnPWMIE_MASK       ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMR_TnPWMIE_DIS        ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_TnPWMIE_EN         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMR_R_TnMRSU_MASK      ((uint32_t)0x00000400u)
#define GPTM_TB_GPTMTnMR_R_TnMRSU_BIT       (10u)
#define GPTM_TB_GPTMTnMR_R_TnMRSU_NEXT      ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_R_TnMRSU_TIMEOUT   ((uint32_t)0x00000400u)

#define GPTM_TB_GPTMTnMR_TnMRSU_MASK        ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMR_TnMRSU_NEXT        ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_TnMRSU_TIMEOUT     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMR_R_TnPLO_MASK       ((uint32_t)0x00000800u)
#define GPTM_TB_GPTMTnMR_R_TnPLO_BIT        (11u)
#define GPTM_TB_GPTMTnMR_R_TnPLO_LOW        ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_R_TnPLO_HIGH       ((uint32_t)0x00000800u)

#define GPTM_TB_GPTMTnMR_TnPLO_MASK         ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMR_TnPLO_LOW          ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMR_TnPLO_HIGH         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBMR_R_TBMR_MASK          ((uint32_t)0x00000003u)
#define GPWTM_GPTMTBMR_R_TBMR_BIT           (0u)
#define GPWTM_GPTMTBMR_R_TBMR_ONESHOT       ((uint32_t)0x00000001u)
#define GPWTM_GPTMTBMR_R_TBMR_PERIOD        ((uint32_t)0x00000002u)
#define GPWTM_GPTMTBMR_R_TBMR_CAPTURE       ((uint32_t)0x00000003u)

#define GPWTM_GPTMTBMR_TBMR_MASK            ((uint32_t)0x00000003u)
#define GPWTM_GPTMTBMR_TBMR_ONESHOT         ((uint32_t)0x00000001u)
#define GPWTM_GPTMTBMR_TBMR_PERIOD          ((uint32_t)0x00000002u)
#define GPWTM_GPTMTBMR_TBMR_CAPTURE         ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBMR_R_TBCMR_MASK         ((uint32_t)0x00000004u)
#define GPWTM_GPTMTBMR_R_TBCMR_BIT          (2u)
#define GPWTM_GPTMTBMR_R_TBCMR_EDGECOUNT    ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_R_TBCMR_EDGETIME     ((uint32_t)0x00000004u)

#define GPWTM_GPTMTBMR_TBCMR_MASK           ((uint32_t)0x00000001u)
#define GPWTM_GPTMTBMR_TBCMR_EDGECOUNT      ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_TBCMR_EDGETIME       ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBMR_R_TBAMS_MASK         ((uint32_t)0x00000008u)
#define GPWTM_GPTMTBMR_R_TBAMS_BIT          (3u)
#define GPWTM_GPTMTBMR_R_TBAMS_CAPCOMP      ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_R_TBAMS_PWM          ((uint32_t)0x00000008u)

#define GPWTM_GPTMTBMR_TBAMS_MASK           ((uint32_t)0x00000001u)
#define GPWTM_GPTMTBMR_TBAMS_CAPCOMP        ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_TBAMS_PWM            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBMR_R_TBCDIR_MASK        ((uint32_t)0x00000010u)
#define GPWTM_GPTMTBMR_R_TBCDIR_BIT         (4u)
#define GPWTM_GPTMTBMR_R_TBCDIR_DOWN        ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_R_TBCDIR_UP          ((uint32_t)0x00000010u)

#define GPWTM_GPTMTBMR_TBCDIR_MASK          ((uint32_t)0x00000001u)
#define GPWTM_GPTMTBMR_TBCDIR_DOWN          ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_TBCDIR_UP            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBMR_R_TBMIE_MASK         ((uint32_t)0x00000020u)
#define GPWTM_GPTMTBMR_R_TBMIE_BIT          (5u)
#define GPWTM_GPTMTBMR_R_TBMIE_DIS          ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_R_TBMIE_EN           ((uint32_t)0x00000020u)

#define GPWTM_GPTMTBMR_TBMIE_MASK           ((uint32_t)0x00000001u)
#define GPWTM_GPTMTBMR_TBMIE_DIS            ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_TBMIE_EN             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBMR_R_TBWOT_MASK         ((uint32_t)0x00000040u)
#define GPWTM_GPTMTBMR_R_TBWOT_BIT          (6u)
#define GPWTM_GPTMTBMR_R_TBWOT_INSTBNT      ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_R_TBWOT_TRIGGER      ((uint32_t)0x00000040u)

#define GPWTM_GPTMTBMR_TBWOT_MASK           ((uint32_t)0x00000001u)
#define GPWTM_GPTMTBMR_TBWOT_INSTBNT        ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_TBWOT_TRIGGER        ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBMR_R_TBSNAPS_MASK       ((uint32_t)0x00000080u)
#define GPWTM_GPTMTBMR_R_TBSNAPS_BIT        (7u)
#define GPWTM_GPTMTBMR_R_TBSNAPS_DIS        ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_R_TBSNAPS_EN         ((uint32_t)0x00000080u)

#define GPWTM_GPTMTBMR_TBSNAPS_MASK         ((uint32_t)0x00000001u)
#define GPWTM_GPTMTBMR_TBSNAPS_DIS          ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_TBSNAPS_EN           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBMR_R_TBILD_MASK         ((uint32_t)0x00000100u)
#define GPWTM_GPTMTBMR_R_TBILD_BIT          (8u)
#define GPWTM_GPTMTBMR_R_TBILD_NEXT         ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_R_TBILD_TIMEOUT      ((uint32_t)0x00000100u)

#define GPWTM_GPTMTBMR_TBILD_MASK           ((uint32_t)0x00000001u)
#define GPWTM_GPTMTBMR_TBILD_NEXT           ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_TBILD_TIMEOUT        ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBMR_R_TBPWMIE_MASK       ((uint32_t)0x00000200u)
#define GPWTM_GPTMTBMR_R_TBPWMIE_BIT        (9u)
#define GPWTM_GPTMTBMR_R_TBPWMIE_DIS        ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_R_TBPWMIE_EN         ((uint32_t)0x00000200u)

#define GPWTM_GPTMTBMR_TBPWMIE_MASK         ((uint32_t)0x00000001u)
#define GPWTM_GPTMTBMR_TBPWMIE_DIS          ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_TBPWMIE_EN           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBMR_R_TBMRSU_MASK        ((uint32_t)0x00000400u)
#define GPWTM_GPTMTBMR_R_TBMRSU_BIT         (10u)
#define GPWTM_GPTMTBMR_R_TBMRSU_NEXT        ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_R_TBMRSU_TIMEOUT     ((uint32_t)0x00000400u)

#define GPWTM_GPTMTBMR_TBMRSU_MASK          ((uint32_t)0x00000001u)
#define GPWTM_GPTMTBMR_TBMRSU_NEXT          ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_TBMRSU_TIMEOUT       ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBMR_R_TBPLO_MASK         ((uint32_t)0x00000800u)
#define GPWTM_GPTMTBMR_R_TBPLO_BIT          (11u)
#define GPWTM_GPTMTBMR_R_TBPLO_LOW          ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_R_TBPLO_HIGH         ((uint32_t)0x00000800u)

#define GPWTM_GPTMTBMR_TBPLO_MASK           ((uint32_t)0x00000001u)
#define GPWTM_GPTMTBMR_TBPLO_LOW            ((uint32_t)0x00000000u)
#define GPWTM_GPTMTBMR_TBPLO_HIGH           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMR_R_TnMR_MASK       ((uint32_t)0x00000003u)
#define GPWTM_TB_GPTMTnMR_R_TnMR_BIT        (0u)
#define GPWTM_TB_GPTMTnMR_R_TnMR_ONESHOT    ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMR_R_TnMR_PERIOD     ((uint32_t)0x00000002u)
#define GPWTM_TB_GPTMTnMR_R_TnMR_CAPTURE    ((uint32_t)0x00000003u)

#define GPWTM_TB_GPTMTnMR_TnMR_MASK         ((uint32_t)0x00000003u)
#define GPWTM_TB_GPTMTnMR_TnMR_ONESHOT      ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMR_TnMR_PERIOD       ((uint32_t)0x00000002u)
#define GPWTM_TB_GPTMTnMR_TnMR_CAPTURE      ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMR_R_TnCMR_MASK      ((uint32_t)0x00000004u)
#define GPWTM_TB_GPTMTnMR_R_TnCMR_BIT       (2u)
#define GPWTM_TB_GPTMTnMR_R_TnCMR_EDGECOUNT ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_R_TnCMR_EDGETIME  ((uint32_t)0x00000004u)

#define GPWTM_TB_GPTMTnMR_TnCMR_MASK        ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMR_TnCMR_EDGECOUNT   ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_TnCMR_EDGETIME    ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMR_R_TnAMS_MASK      ((uint32_t)0x00000008u)
#define GPWTM_TB_GPTMTnMR_R_TnAMS_BIT       (3u)
#define GPWTM_TB_GPTMTnMR_R_TnAMS_CAPCOMP   ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_R_TnAMS_PWM       ((uint32_t)0x00000008u)

#define GPWTM_TB_GPTMTnMR_TnAMS_MASK        ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMR_TnAMS_CAPCOMP     ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_TnAMS_PWM         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMR_R_TnCDIR_MASK     ((uint32_t)0x00000010u)
#define GPWTM_TB_GPTMTnMR_R_TnCDIR_BIT      (4u)
#define GPWTM_TB_GPTMTnMR_R_TnCDIR_DOWN     ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_R_TnCDIR_UP       ((uint32_t)0x00000010u)

#define GPWTM_TB_GPTMTnMR_TnCDIR_MASK       ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMR_TnCDIR_DOWN       ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_TnCDIR_UP         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMR_R_TnMIE_MASK      ((uint32_t)0x00000020u)
#define GPWTM_TB_GPTMTnMR_R_TnMIE_BIT       (5u)
#define GPWTM_TB_GPTMTnMR_R_TnMIE_DIS       ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_R_TnMIE_EN        ((uint32_t)0x00000020u)

#define GPWTM_TB_GPTMTnMR_TnMIE_MASK        ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMR_TnMIE_DIS         ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_TnMIE_EN          ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMR_R_TnWOT_MASK      ((uint32_t)0x00000040u)
#define GPWTM_TB_GPTMTnMR_R_TnWOT_BIT       (6u)
#define GPWTM_TB_GPTMTnMR_R_TnWOT_INSTBNT   ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_R_TnWOT_TRIGGER   ((uint32_t)0x00000040u)

#define GPWTM_TB_GPTMTnMR_TnWOT_MASK        ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMR_TnWOT_INSTBNT     ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_TnWOT_TRIGGER     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMR_R_TnSNAPS_MASK    ((uint32_t)0x00000080u)
#define GPWTM_TB_GPTMTnMR_R_TnSNAPS_BIT     (7u)
#define GPWTM_TB_GPTMTnMR_R_TnSNAPS_DIS     ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_R_TnSNAPS_EN      ((uint32_t)0x00000080u)

#define GPWTM_TB_GPTMTnMR_TnSNAPS_MASK      ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMR_TnSNAPS_DIS       ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_TnSNAPS_EN        ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMR_R_TnILD_MASK      ((uint32_t)0x00000100u)
#define GPWTM_TB_GPTMTnMR_R_TnILD_BIT       (8u)
#define GPWTM_TB_GPTMTnMR_R_TnILD_NEXT      ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_R_TnILD_TIMEOUT   ((uint32_t)0x00000100u)

#define GPWTM_TB_GPTMTnMR_TnILD_MASK        ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMR_TnILD_NEXT        ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_TnILD_TIMEOUT     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMR_R_TnPWMIE_MASK    ((uint32_t)0x00000200u)
#define GPWTM_TB_GPTMTnMR_R_TnPWMIE_BIT     (9u)
#define GPWTM_TB_GPTMTnMR_R_TnPWMIE_DIS     ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_R_TnPWMIE_EN      ((uint32_t)0x00000200u)

#define GPWTM_TB_GPTMTnMR_TnPWMIE_MASK      ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMR_TnPWMIE_DIS       ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_TnPWMIE_EN        ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMR_R_TnMRSU_MASK     ((uint32_t)0x00000400u)
#define GPWTM_TB_GPTMTnMR_R_TnMRSU_BIT      (10u)
#define GPWTM_TB_GPTMTnMR_R_TnMRSU_NEXT     ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_R_TnMRSU_TIMEOUT  ((uint32_t)0x00000400u)

#define GPWTM_TB_GPTMTnMR_TnMRSU_MASK       ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMR_TnMRSU_NEXT       ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_TnMRSU_TIMEOUT    ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMR_R_TnPLO_MASK      ((uint32_t)0x00000800u)
#define GPWTM_TB_GPTMTnMR_R_TnPLO_BIT       (11u)
#define GPWTM_TB_GPTMTnMR_R_TnPLO_LOW       ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_R_TnPLO_HIGH      ((uint32_t)0x00000800u)

#define GPWTM_TB_GPTMTnMR_TnPLO_MASK        ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMR_TnPLO_LOW         ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMR_TnPLO_HIGH        ((uint32_t)0x00000001u)
/*----------*/

/* GPTM0 BITBANDING GPTMTBMR*/
#define GPTM0_BITBANDING_GPTMTBMR_TBCMR         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBCMR_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTBMR_TBAMS         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBAMS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTBMR_TBCDIR        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBCDIR_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTBMR_TBMIE         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBMIE_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTBMR_TBWOT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBWOT_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTBMR_TBSNAPS       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBSNAPS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTBMR_TBILD         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBILD_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTBMR_TBPWMIE       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBPWMIE_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTBMR_TBMRSU        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBMRSU_BIT*4u))))
#define GPTM0_BITBANDING_GPTMTBMR_TBPLO         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBPLO_BIT*4u))))

#define GPTM0_BITBANDING_TB_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM1 BITBANDING GPTMTBMR*/
#define GPTM1_BITBANDING_GPTMTBMR_TBCMR         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBCMR_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTBMR_TBAMS         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBAMS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTBMR_TBCDIR        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBCDIR_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTBMR_TBMIE         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBMIE_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTBMR_TBWOT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBWOT_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTBMR_TBSNAPS       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBSNAPS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTBMR_TBILD         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBILD_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTBMR_TBPWMIE       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBPWMIE_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTBMR_TBMRSU        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBMRSU_BIT*4u))))
#define GPTM1_BITBANDING_GPTMTBMR_TBPLO         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBPLO_BIT*4u))))

#define GPTM1_BITBANDING_TB_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM2 BITBANDING GPTMTBMR*/
#define GPTM2_BITBANDING_GPTMTBMR_TBCMR         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBCMR_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTBMR_TBAMS         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBAMS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTBMR_TBCDIR        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBCDIR_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTBMR_TBMIE         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBMIE_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTBMR_TBWOT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBWOT_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTBMR_TBSNAPS       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBSNAPS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTBMR_TBILD         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBILD_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTBMR_TBPWMIE       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBPWMIE_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTBMR_TBMRSU        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBMRSU_BIT*4u))))
#define GPTM2_BITBANDING_GPTMTBMR_TBPLO         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBPLO_BIT*4u))))

#define GPTM2_BITBANDING_TB_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM3 BITBANDING GPTMTBMR*/
#define GPTM3_BITBANDING_GPTMTBMR_TBCMR         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBCMR_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTBMR_TBAMS         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBAMS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTBMR_TBCDIR        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBCDIR_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTBMR_TBMIE         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBMIE_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTBMR_TBWOT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBWOT_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTBMR_TBSNAPS       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBSNAPS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTBMR_TBILD         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBILD_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTBMR_TBPWMIE       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBPWMIE_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTBMR_TBMRSU        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBMRSU_BIT*4u))))
#define GPTM3_BITBANDING_GPTMTBMR_TBPLO         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBPLO_BIT*4u))))

#define GPTM3_BITBANDING_TB_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM4 BITBANDING GPTMTBMR*/
#define GPTM4_BITBANDING_GPTMTBMR_TBCMR         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBCMR_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTBMR_TBAMS         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBAMS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTBMR_TBCDIR        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBCDIR_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTBMR_TBMIE         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBMIE_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTBMR_TBWOT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBWOT_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTBMR_TBSNAPS       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBSNAPS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTBMR_TBILD         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBILD_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTBMR_TBPWMIE       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBPWMIE_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTBMR_TBMRSU        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBMRSU_BIT*4u))))
#define GPTM4_BITBANDING_GPTMTBMR_TBPLO         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBPLO_BIT*4u))))

#define GPTM4_BITBANDING_TB_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM5 BITBANDING GPTMTBMR*/
#define GPTM5_BITBANDING_GPTMTBMR_TBCMR         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBCMR_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTBMR_TBAMS         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBAMS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTBMR_TBCDIR        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBCDIR_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTBMR_TBMIE         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBMIE_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTBMR_TBWOT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBWOT_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTBMR_TBSNAPS       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBSNAPS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTBMR_TBILD         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBILD_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTBMR_TBPWMIE       (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBPWMIE_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTBMR_TBMRSU        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBMRSU_BIT*4u))))
#define GPTM5_BITBANDING_GPTMTBMR_TBPLO         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBMR_OFFSET)*32u)+(GPTM_GPTMTBMR_R_TBPLO_BIT*4u))))

#define GPTM5_BITBANDING_TB_GPTMTnMR_TnCMR      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnMR_TnAMS      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnMR_TnCDIR     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnMR_TnMIE      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnMR_TnWOT      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnMR_TnSNAPS    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnMR_TnILD      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnMR_TnPWMIE    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnMR_TnMRSU     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnMR_TnPLO      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMR_OFFSET)*32u)+(GPTM_TB_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM0 BITBANDING GPTMTBMR*/
#define GPWTM0_BITBANDING_GPTMTBMR_TBCMR        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBCMR_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTBMR_TBAMS        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBAMS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTBMR_TBCDIR       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBCDIR_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTBMR_TBMIE        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBMIE_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTBMR_TBWOT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBWOT_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTBMR_TBSNAPS      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBSNAPS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTBMR_TBILD        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBILD_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTBMR_TBPWMIE      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBPWMIE_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTBMR_TBMRSU       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBMRSU_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMTBMR_TBPLO        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBPLO_BIT*4u))))

#define GPWTM0_BITBANDING_TB_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM1 BITBANDING GPTMTBMR*/
#define GPWTM1_BITBANDING_GPTMTBMR_TBCMR        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBCMR_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTBMR_TBAMS        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBAMS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTBMR_TBCDIR       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBCDIR_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTBMR_TBMIE        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBMIE_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTBMR_TBWOT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBWOT_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTBMR_TBSNAPS      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBSNAPS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTBMR_TBILD        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBILD_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTBMR_TBPWMIE      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBPWMIE_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTBMR_TBMRSU       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBMRSU_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMTBMR_TBPLO        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBPLO_BIT*4u))))

#define GPWTM1_BITBANDING_TB_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM2 BITBANDING GPTMTBMR*/
#define GPWTM2_BITBANDING_GPTMTBMR_TBCMR        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBCMR_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTBMR_TBAMS        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBAMS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTBMR_TBCDIR       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBCDIR_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTBMR_TBMIE        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBMIE_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTBMR_TBWOT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBWOT_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTBMR_TBSNAPS      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBSNAPS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTBMR_TBILD        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBILD_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTBMR_TBPWMIE      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBPWMIE_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTBMR_TBMRSU       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBMRSU_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMTBMR_TBPLO        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBPLO_BIT*4u))))

#define GPWTM2_BITBANDING_TB_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM3 BITBANDING GPTMTBMR*/
#define GPWTM3_BITBANDING_GPTMTBMR_TBCMR        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBCMR_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTBMR_TBAMS        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBAMS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTBMR_TBCDIR       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBCDIR_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTBMR_TBMIE        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBMIE_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTBMR_TBWOT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBWOT_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTBMR_TBSNAPS      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBSNAPS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTBMR_TBILD        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBILD_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTBMR_TBPWMIE      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBPWMIE_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTBMR_TBMRSU       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBMRSU_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMTBMR_TBPLO        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBPLO_BIT*4u))))

#define GPWTM3_BITBANDING_TB_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM4 BITBANDING GPTMTBMR*/
#define GPWTM4_BITBANDING_GPTMTBMR_TBCMR        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBCMR_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTBMR_TBAMS        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBAMS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTBMR_TBCDIR       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBCDIR_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTBMR_TBMIE        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBMIE_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTBMR_TBWOT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBWOT_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTBMR_TBSNAPS      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBSNAPS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTBMR_TBILD        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBILD_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTBMR_TBPWMIE      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBPWMIE_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTBMR_TBMRSU       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBMRSU_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMTBMR_TBPLO        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBPLO_BIT*4u))))

#define GPWTM4_BITBANDING_TB_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnPLO_BIT*4u))))

/* GPTM5 BITBANDING GPTMTBMR*/
#define GPWTM5_BITBANDING_GPTMTBMR_TBCMR        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBCMR_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTBMR_TBAMS        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBAMS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTBMR_TBCDIR       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBCDIR_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTBMR_TBMIE        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBMIE_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTBMR_TBWOT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBWOT_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTBMR_TBSNAPS      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBSNAPS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTBMR_TBILD        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBILD_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTBMR_TBPWMIE      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBPWMIE_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTBMR_TBMRSU       (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBMRSU_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMTBMR_TBPLO        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBMR_OFFSET)*32u)+(GPWTM_GPTMTBMR_R_TBPLO_BIT*4u))))

#define GPWTM5_BITBANDING_TB_GPTMTnMR_TnCMR     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnCMR_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnMR_TnAMS     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnAMS_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnMR_TnCDIR    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnCDIR_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnMR_TnMIE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnMIE_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnMR_TnWOT     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnWOT_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnMR_TnSNAPS   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnSNAPS_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnMR_TnILD     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnILD_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnMR_TnPWMIE   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnPWMIE_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnMR_TnMRSU    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnMRSU_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnMR_TnPLO     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnMR_R_TnPLO_BIT*4u))))


/******************************************************************************************
************************************ 4 GPTMCTL *********************************************
******************************************************************************************/

/* GPTM0 GPTMCTL*/
#define GPTM0_BITBANDING_GPTMCTL            (((BITBANDING_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMCTL_OFFSET)*32u))))
#define GPTM0_GPTMCTL                       (((GPTMCTL_TypeDef*)(GPTM0_BASE + GPTM_GPTMCTL_OFFSET )))
#define GPTM0_GPTMCTL_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMCTL_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnCTL       (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPTM0_TA_GPTMTnCTL                  (((TA_GPTMCTL_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnCTL_OFFSET )))
#define GPTM0_TA_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnCTL_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnCTL       (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnCTL                  (((TB_GPTMCTL_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnCTL_OFFSET )))
#define GPTM0_TB_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnCTL_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMTnCTL       (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPTM0_TW_GPTMTnCTL                  (((TW_GPTMCTL_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMTnCTL_OFFSET )))
#define GPTM0_TW_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMTnCTL_OFFSET)))

/* GPTM1 GPTMCTL*/
#define GPTM1_BITBANDING_GPTMCTL            (((BITBANDING_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMCTL_OFFSET)*32u))))
#define GPTM1_GPTMCTL                       (((GPTMCTL_TypeDef*)(GPTM1_BASE + GPTM_GPTMCTL_OFFSET )))
#define GPTM1_GPTMCTL_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMCTL_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnCTL       (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnCTL                  (((TA_GPTMCTL_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnCTL_OFFSET )))
#define GPTM1_TA_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnCTL_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnCTL       (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnCTL                  (((TB_GPTMCTL_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnCTL_OFFSET )))
#define GPTM1_TB_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnCTL_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnCTL       (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnCTL                  (((TW_GPTMCTL_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnCTL_OFFSET )))
#define GPTM1_TW_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnCTL_OFFSET)))

/* GPTM2 GPTMCTL*/
#define GPTM2_BITBANDING_GPTMCTL            (((BITBANDING_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMCTL_OFFSET)*32u))))
#define GPTM2_GPTMCTL                       (((GPTMCTL_TypeDef*)(GPTM2_BASE + GPTM_GPTMCTL_OFFSET )))
#define GPTM2_GPTMCTL_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMCTL_OFFSET)))

#define GPTM2_BITBANDING_TA_GPTMTnCTL       (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPTM2_TA_GPTMTnCTL                  (((TA_GPTMCTL_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnCTL_OFFSET )))
#define GPTM2_TA_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnCTL_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnCTL       (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnCTL                  (((TB_GPTMCTL_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnCTL_OFFSET )))
#define GPTM2_TB_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnCTL_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMTnCTL       (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPTM2_TW_GPTMTnCTL                  (((TW_GPTMCTL_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMTnCTL_OFFSET )))
#define GPTM2_TW_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMTnCTL_OFFSET)))

/* GPTM3 GPTMCTL*/
#define GPTM3_BITBANDING_GPTMCTL            (((BITBANDING_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMCTL_OFFSET)*32u))))
#define GPTM3_GPTMCTL                       (((GPTMCTL_TypeDef*)(GPTM3_BASE + GPTM_GPTMCTL_OFFSET )))
#define GPTM3_GPTMCTL_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMCTL_OFFSET)))

#define GPTM3_BITBANDING_TA_GPTMTnCTL       (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPTM3_TA_GPTMTnCTL                  (((TA_GPTMCTL_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnCTL_OFFSET )))
#define GPTM3_TA_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnCTL_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnCTL       (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnCTL                  (((TB_GPTMCTL_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnCTL_OFFSET )))
#define GPTM3_TB_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnCTL_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMTnCTL       (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPTM3_TW_GPTMTnCTL                  (((TW_GPTMCTL_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMTnCTL_OFFSET )))
#define GPTM3_TW_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMTnCTL_OFFSET)))

/* GPTM4 GPTMCTL*/
#define GPTM4_BITBANDING_GPTMCTL            (((BITBANDING_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMCTL_OFFSET)*32u))))
#define GPTM4_GPTMCTL                       (((GPTMCTL_TypeDef*)(GPTM4_BASE + GPTM_GPTMCTL_OFFSET )))
#define GPTM4_GPTMCTL_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMCTL_OFFSET)))

#define GPTM4_BITBANDING_TA_GPTMTnCTL       (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPTM4_TA_GPTMTnCTL                  (((TA_GPTMCTL_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnCTL_OFFSET )))
#define GPTM4_TA_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnCTL_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnCTL       (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnCTL                  (((TB_GPTMCTL_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnCTL_OFFSET )))
#define GPTM4_TB_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnCTL_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMTnCTL       (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPTM4_TW_GPTMTnCTL                  (((TW_GPTMCTL_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMTnCTL_OFFSET )))
#define GPTM4_TW_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMTnCTL_OFFSET)))

/* GPTM5 GPTMCTL*/
#define GPTM5_BITBANDING_GPTMCTL            (((BITBANDING_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMCTL_OFFSET)*32u))))
#define GPTM5_GPTMCTL                       (((GPTMCTL_TypeDef*)(GPTM5_BASE + GPTM_GPTMCTL_OFFSET )))
#define GPTM5_GPTMCTL_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMCTL_OFFSET)))

#define GPTM5_BITBANDING_TA_GPTMTnCTL       (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPTM5_TA_GPTMTnCTL                  (((TA_GPTMCTL_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnCTL_OFFSET )))
#define GPTM5_TA_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnCTL_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnCTL       (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnCTL                  (((TB_GPTMCTL_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnCTL_OFFSET )))
#define GPTM5_TB_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnCTL_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMTnCTL       (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPTM5_TW_GPTMTnCTL                  (((TW_GPTMCTL_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMTnCTL_OFFSET )))
#define GPTM5_TW_GPTMTnCTL_R                (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMTnCTL_OFFSET)))

/* GPWTM0 GPTMCTL*/
#define GPWTM0_BITBANDING_GPTMCTL           (((BITBANDING_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u))))
#define GPWTM0_GPTMCTL                      (((GPTMCTL_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMCTL_OFFSET )))
#define GPWTM0_GPTMCTL_R                    (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMCTL_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnCTL      (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnCTL                 (((TA_GPTMCTL_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnCTL_OFFSET )))
#define GPWTM0_TA_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnCTL_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnCTL      (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnCTL                 (((TB_GPTMCTL_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnCTL_OFFSET )))
#define GPWTM0_TB_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnCTL_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnCTL      (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnCTL                 (((TW_GPTMCTL_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnCTL_OFFSET )))
#define GPWTM0_TW_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnCTL_OFFSET)))

/* GPWTM1 GPTMCTL*/
#define GPWTM1_BITBANDING_GPTMCTL           (((BITBANDING_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u))))
#define GPWTM1_GPTMCTL                      (((GPTMCTL_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMCTL_OFFSET )))
#define GPWTM1_GPTMCTL_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMCTL_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnCTL      (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnCTL                 (((TA_GPTMCTL_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnCTL_OFFSET )))
#define GPWTM1_TA_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnCTL_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnCTL      (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnCTL                 (((TB_GPTMCTL_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnCTL_OFFSET )))
#define GPWTM1_TB_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnCTL_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnCTL      (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnCTL                 (((TW_GPTMCTL_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnCTL_OFFSET )))
#define GPWTM1_TW_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnCTL_OFFSET)))

/* GPWTM1 GPTMCTL*/
#define GPWTM1_BITBANDING_GPTMCTL           (((BITBANDING_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u))))
#define GPWTM1_GPTMCTL                      (((GPTMCTL_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMCTL_OFFSET )))
#define GPWTM1_GPTMCTL_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMCTL_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnCTL      (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnCTL                 (((TA_GPTMCTL_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnCTL_OFFSET )))
#define GPWTM1_TA_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnCTL_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnCTL      (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnCTL                 (((TB_GPTMCTL_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnCTL_OFFSET )))
#define GPWTM1_TB_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnCTL_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnCTL      (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnCTL                 (((TW_GPTMCTL_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnCTL_OFFSET )))
#define GPWTM1_TW_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnCTL_OFFSET)))

/* GPWTM2 GPTMCTL*/
#define GPWTM2_BITBANDING_GPTMCTL           (((BITBANDING_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u))))
#define GPWTM2_GPTMCTL                      (((GPTMCTL_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMCTL_OFFSET )))
#define GPWTM2_GPTMCTL_R                    (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMCTL_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnCTL      (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnCTL                 (((TA_GPTMCTL_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnCTL_OFFSET )))
#define GPWTM2_TA_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnCTL_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnCTL      (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnCTL                 (((TB_GPTMCTL_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnCTL_OFFSET )))
#define GPWTM2_TB_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnCTL_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnCTL      (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnCTL                 (((TW_GPTMCTL_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnCTL_OFFSET )))
#define GPWTM2_TW_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnCTL_OFFSET)))

/* GPWTM3 GPTMCTL*/
#define GPWTM3_BITBANDING_GPTMCTL           (((BITBANDING_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u))))
#define GPWTM3_GPTMCTL                      (((GPTMCTL_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMCTL_OFFSET )))
#define GPWTM3_GPTMCTL_R                    (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMCTL_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnCTL      (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnCTL                 (((TA_GPTMCTL_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnCTL_OFFSET )))
#define GPWTM3_TA_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnCTL_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnCTL      (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnCTL                 (((TB_GPTMCTL_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnCTL_OFFSET )))
#define GPWTM3_TB_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnCTL_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnCTL      (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnCTL                 (((TW_GPTMCTL_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnCTL_OFFSET )))
#define GPWTM3_TW_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnCTL_OFFSET)))

/* GPWTM4 GPTMCTL*/
#define GPWTM4_BITBANDING_GPTMCTL           (((BITBANDING_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u))))
#define GPWTM4_GPTMCTL                      (((GPTMCTL_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMCTL_OFFSET )))
#define GPWTM4_GPTMCTL_R                    (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMCTL_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnCTL      (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnCTL                 (((TA_GPTMCTL_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnCTL_OFFSET )))
#define GPWTM4_TA_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnCTL_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnCTL      (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnCTL                 (((TB_GPTMCTL_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnCTL_OFFSET )))
#define GPWTM4_TB_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnCTL_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnCTL      (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnCTL                 (((TW_GPTMCTL_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnCTL_OFFSET )))
#define GPWTM4_TW_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnCTL_OFFSET)))

/* GPWTM5 GPTMCTL*/
#define GPWTM5_BITBANDING_GPTMCTL           (((BITBANDING_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u))))
#define GPWTM5_GPTMCTL                      (((GPTMCTL_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMCTL_OFFSET )))
#define GPWTM5_GPTMCTL_R                    (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMCTL_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnCTL      (((BITBANDING_TA_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnCTL                 (((TA_GPTMCTL_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnCTL_OFFSET )))
#define GPWTM5_TA_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnCTL_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnCTL      (((BITBANDING_TB_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnCTL                 (((TB_GPTMCTL_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnCTL_OFFSET )))
#define GPWTM5_TB_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnCTL_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnCTL      (((BITBANDING_TW_GPTMCTL_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnCTL                 (((TW_GPTMCTL_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnCTL_OFFSET )))
#define GPWTM5_TW_GPTMTnCTL_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnCTL_OFFSET)))


/*----------*/
#define GPTM_GPTMCTL_R_TAEN_MASK            ((uint32_t)0x00000001u)
#define GPTM_GPTMCTL_R_TAEN_BIT             (0u)
#define GPTM_GPTMCTL_R_TAEN_DIS             ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_R_TAEN_EN              ((uint32_t)0x00000001u)

#define GPTM_GPTMCTL_TAEN_MASK              ((uint32_t)0x00000001u)
#define GPTM_GPTMCTL_TAEN_DIS               ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_TAEN_EN                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMCTL_R_TASTALL_MASK         ((uint32_t)0x00000002u)
#define GPTM_GPTMCTL_R_TASTALL_BIT          (1u)
#define GPTM_GPTMCTL_R_TASTALL_CONTINUE     ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_R_TASTALL_FREEZE       ((uint32_t)0x00000002u)

#define GPTM_GPTMCTL_TASTALL_MASK           ((uint32_t)0x00000001u)
#define GPTM_GPTMCTL_TASTALL_CONTINUE       ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_TASTALL_FREEZE         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMCTL_R_TAEVENT_MASK         ((uint32_t)0x0000000Cu)
#define GPTM_GPTMCTL_R_TAEVENT_BIT          (2u)
#define GPTM_GPTMCTL_R_TAEVENT_POS          ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_R_TAEVENT_NEG          ((uint32_t)0x00000004u)
#define GPTM_GPTMCTL_R_TAEVENT_BOTH         ((uint32_t)0x0000000Cu)

#define GPTM_GPTMCTL_TAEVENT_MASK           ((uint32_t)0x00000003u)
#define GPTM_GPTMCTL_TAEVENT_NEG            ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_TAEVENT_POS            ((uint32_t)0x00000001u)
#define GPTM_GPTMCTL_TAEVENT_BOTH           ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMCTL_R_RTCEN_MASK           ((uint32_t)0x00000010u)
#define GPTM_GPTMCTL_R_RTCEN_BIT            (4u)
#define GPTM_GPTMCTL_R_RTCEN_CONTINUE       ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_R_RTCEN_FREEZE         ((uint32_t)0x00000010u)

#define GPTM_GPTMCTL_RTCEN_MASK             ((uint32_t)0x00000001u)
#define GPTM_GPTMCTL_RTCEN_CONTINUE         ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_RTCEN_FREEZE           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMCTL_R_TAOTE_MASK           ((uint32_t)0x00000020u)
#define GPTM_GPTMCTL_R_TAOTE_BIT            (5u)
#define GPTM_GPTMCTL_R_TAOTE_DIS            ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_R_TAOTE_EN             ((uint32_t)0x00000020u)

#define GPTM_GPTMCTL_TAOTE_MASK             ((uint32_t)0x00000001u)
#define GPTM_GPTMCTL_TAOTE_DIS              ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_TAOTE_EN               ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMCTL_R_TAPWML_MASK          ((uint32_t)0x00000040u)
#define GPTM_GPTMCTL_R_TAPWML_BIT           (6u)
#define GPTM_GPTMCTL_R_TAPWML_NA            ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_R_TAPWML_INV           ((uint32_t)0x00000040u)

#define GPTM_GPTMCTL_TAPWML_MASK            ((uint32_t)0x00000001u)
#define GPTM_GPTMCTL_TAPWML_NA              ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_TAPWML_INV             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMCTL_R_TBEN_MASK            ((uint32_t)0x00000100u)
#define GPTM_GPTMCTL_R_TBEN_BIT             (8u)
#define GPTM_GPTMCTL_R_TBEN_DIS             ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_R_TBEN_EN              ((uint32_t)0x00000100u)

#define GPTM_GPTMCTL_TBEN_MASK              ((uint32_t)0x00000001u)
#define GPTM_GPTMCTL_TBEN_DIS               ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_TBEN_EN                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMCTL_R_TBSTALL_MASK         ((uint32_t)0x00000200u)
#define GPTM_GPTMCTL_R_TBSTALL_BIT          (9u)
#define GPTM_GPTMCTL_R_TBSTALL_CONTINUE     ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_R_TBSTALL_FREEZE       ((uint32_t)0x00000200u)

#define GPTM_GPTMCTL_TBSTALL_MASK           ((uint32_t)0x00000001u)
#define GPTM_GPTMCTL_TBSTALL_CONTINUE       ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_TBSTALL_FREEZE         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMCTL_R_TBEVENT_MASK         ((uint32_t)0x00000C00u)
#define GPTM_GPTMCTL_R_TBEVENT_BIT          (10u)
#define GPTM_GPTMCTL_R_TBEVENT_POS          ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_R_TBEVENT_NEG          ((uint32_t)0x00000400u)
#define GPTM_GPTMCTL_R_TBEVENT_BOTH         ((uint32_t)0x00000C00u)

#define GPTM_GPTMCTL_TBEVENT_MASK           ((uint32_t)0x00000003u)
#define GPTM_GPTMCTL_TBEVENT_NEG            ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_TBEVENT_POS            ((uint32_t)0x00000001u)
#define GPTM_GPTMCTL_TBEVENT_BOTH           ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMCTL_R_TBOTE_MASK           ((uint32_t)0x00002000u)
#define GPTM_GPTMCTL_R_TBOTE_BIT            (13u)
#define GPTM_GPTMCTL_R_TBOTE_DIS            ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_R_TBOTE_EN             ((uint32_t)0x00002000u)

#define GPTM_GPTMCTL_TBOTE_MASK             ((uint32_t)0x00000001u)
#define GPTM_GPTMCTL_TBOTE_DIS              ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_TBOTE_EN               ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMCTL_R_TBPWML_MASK          ((uint32_t)0x00004000u)
#define GPTM_GPTMCTL_R_TBPWML_BIT           (14u)
#define GPTM_GPTMCTL_R_TBPWML_NA            ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_R_TBPWML_INV           ((uint32_t)0x00004000u)

#define GPTM_GPTMCTL_TBPWML_MASK            ((uint32_t)0x00000001u)
#define GPTM_GPTMCTL_TBPWML_NA              ((uint32_t)0x00000000u)
#define GPTM_GPTMCTL_TBPWML_INV             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnCTL_R_TnEN_MASK       ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnCTL_R_TnEN_BIT        (0u)
#define GPTM_TA_GPTMTnCTL_R_TnEN_DIS        ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnCTL_R_TnEN_EN         ((uint32_t)0x00000001u)

#define GPTM_TA_GPTMTnCTL_TnEN_MASK         ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnCTL_TnEN_DIS          ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnCTL_TnEN_EN           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnCTL_R_TnSTALL_MASK    ((uint32_t)0x00000002u)
#define GPTM_TA_GPTMTnCTL_R_TnSTALL_BIT     (1u)
#define GPTM_TA_GPTMTnCTL_R_TnSTALL_CONTINUE    ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnCTL_R_TnSTALL_FREEZE  ((uint32_t)0x00000002u)

#define GPTM_TA_GPTMTnCTL_TnSTALL_MASK      ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnCTL_TnSTALL_CONTINUE  ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnCTL_TnSTALL_FREEZE    ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnCTL_R_TnEVENT_MASK    ((uint32_t)0x0000000Cu)
#define GPTM_TA_GPTMTnCTL_R_TnEVENT_BIT     (2u)
#define GPTM_TA_GPTMTnCTL_R_TnEVENT_POS     ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnCTL_R_TnEVENT_NEG     ((uint32_t)0x00000004u)
#define GPTM_TA_GPTMTnCTL_R_TnEVENT_BOTH    ((uint32_t)0x0000000Cu)

#define GPTM_TA_GPTMTnCTL_TnEVENT_MASK      ((uint32_t)0x00000003u)
#define GPTM_TA_GPTMTnCTL_TnEVENT_NEG       ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnCTL_TnEVENT_POS       ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnCTL_TnEVENT_BOTH      ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnCTL_R_TnOTE_MASK      ((uint32_t)0x00000020u)
#define GPTM_TA_GPTMTnCTL_R_TnOTE_BIT       (5u)
#define GPTM_TA_GPTMTnCTL_R_TnOTE_DIS       ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnCTL_R_TnOTE_EN        ((uint32_t)0x00000020u)

#define GPTM_TA_GPTMTnCTL_TnOTE_MASK        ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnCTL_TnOTE_DIS         ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnCTL_TnOTE_EN          ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnCTL_R_TnPWML_MASK     ((uint32_t)0x00000040u)
#define GPTM_TA_GPTMTnCTL_R_TnPWML_BIT      (6u)
#define GPTM_TA_GPTMTnCTL_R_TnPWML_NA       ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnCTL_R_TnPWML_INV      ((uint32_t)0x00000040u)

#define GPTM_TA_GPTMTnCTL_TnPWML_MASK       ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnCTL_TnPWML_NA         ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnCTL_TnPWML_INV        ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPTM_TB_GPTMTnCTL_R_TnEN_MASK            ((uint32_t)0x00000100u)
#define GPTM_TB_GPTMTnCTL_R_TnEN_BIT             (8u)
#define GPTM_TB_GPTMTnCTL_R_TnEN_DIS             ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnCTL_R_TnEN_EN              ((uint32_t)0x00000100u)

#define GPTM_TB_GPTMTnCTL_TnEN_MASK              ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnCTL_TnEN_DIS               ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnCTL_TnEN_EN                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnCTL_R_TnSTALL_MASK         ((uint32_t)0x00000200u)
#define GPTM_TB_GPTMTnCTL_R_TnSTALL_BIT          (9u)
#define GPTM_TB_GPTMTnCTL_R_TnSTALL_CONTINUE     ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnCTL_R_TnSTALL_FREEZE       ((uint32_t)0x00000200u)

#define GPTM_TB_GPTMTnCTL_TnSTALL_MASK           ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnCTL_TnSTALL_CONTINUE       ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnCTL_TnSTALL_FREEZE         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnCTL_R_TnEVENT_MASK         ((uint32_t)0x00000C00u)
#define GPTM_TB_GPTMTnCTL_R_TnEVENT_BIT          (10u)
#define GPTM_TB_GPTMTnCTL_R_TnEVENT_POS          ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnCTL_R_TnEVENT_NEG          ((uint32_t)0x00000400u)
#define GPTM_TB_GPTMTnCTL_R_TnEVENT_BOTH         ((uint32_t)0x00000C00u)

#define GPTM_TB_GPTMTnCTL_TnEVENT_MASK           ((uint32_t)0x00000003u)
#define GPTM_TB_GPTMTnCTL_TnEVENT_NEG            ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnCTL_TnEVENT_POS            ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnCTL_TnEVENT_BOTH           ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnCTL_R_TnOTE_MASK           ((uint32_t)0x00002000u)
#define GPTM_TB_GPTMTnCTL_R_TnOTE_BIT            (13u)
#define GPTM_TB_GPTMTnCTL_R_TnOTE_DIS            ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnCTL_R_TnOTE_EN             ((uint32_t)0x00002000u)

#define GPTM_TB_GPTMTnCTL_TnOTE_MASK             ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnCTL_TnOTE_DIS              ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnCTL_TnOTE_EN               ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnCTL_R_TnPWML_MASK          ((uint32_t)0x00004000u)
#define GPTM_TB_GPTMTnCTL_R_TnPWML_BIT           (14u)
#define GPTM_TB_GPTMTnCTL_R_TnPWML_NA            ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnCTL_R_TnPWML_INV           ((uint32_t)0x00004000u)

#define GPTM_TB_GPTMTnCTL_TnPWML_MASK            ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnCTL_TnPWML_NA              ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnCTL_TnPWML_INV             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnCTL_R_TnEN_MASK       ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnCTL_R_TnEN_BIT        (0u)
#define GPTM_TW_GPTMTnCTL_R_TnEN_DIS        ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnCTL_R_TnEN_EN         ((uint32_t)0x00000001u)

#define GPTM_TW_GPTMTnCTL_TnEN_MASK         ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnCTL_TnEN_DIS          ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnCTL_TnEN_EN           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnCTL_R_TnSTALL_MASK    ((uint32_t)0x00000002u)
#define GPTM_TW_GPTMTnCTL_R_TnSTALL_BIT     (1u)
#define GPTM_TW_GPTMTnCTL_R_TnSTALL_CONTINUE    ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnCTL_R_TnSTALL_FREEZE  ((uint32_t)0x00000002u)

#define GPTM_TW_GPTMTnCTL_TnSTALL_MASK      ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnCTL_TnSTALL_CONTINUE  ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnCTL_TnSTALL_FREEZE    ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnCTL_R_TnEVENT_MASK    ((uint32_t)0x0000000Cu)
#define GPTM_TW_GPTMTnCTL_R_TnEVENT_BIT     (2u)
#define GPTM_TW_GPTMTnCTL_R_TnEVENT_POS     ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnCTL_R_TnEVENT_NEG     ((uint32_t)0x00000004u)
#define GPTM_TW_GPTMTnCTL_R_TnEVENT_BOTH    ((uint32_t)0x0000000Cu)

#define GPTM_TW_GPTMTnCTL_TnEVENT_MASK      ((uint32_t)0x00000003u)
#define GPTM_TW_GPTMTnCTL_TnEVENT_NEG       ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnCTL_TnEVENT_POS       ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnCTL_TnEVENT_BOTH      ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnCTL_R_RTCEN_MASK      ((uint32_t)0x00000010u)
#define GPTM_TW_GPTMTnCTL_R_RTCEN_BIT       (4u)
#define GPTM_TW_GPTMTnCTL_R_RTCEN_DIS       ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnCTL_R_RTCEN_EN        ((uint32_t)0x00000010u)

#define GPTM_TW_GPTMTnCTL_RTCEN_MASK        ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnCTL_RTCEN_DIS         ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnCTL_RTCEN_EN          ((uint32_t)0x00000001u)
/*----------*/
/*----------*/
#define GPTM_TW_GPTMTnCTL_R_TnOTE_MASK      ((uint32_t)0x00000020u)
#define GPTM_TW_GPTMTnCTL_R_TnOTE_BIT       (5u)
#define GPTM_TW_GPTMTnCTL_R_TnOTE_DIS       ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnCTL_R_TnOTE_EN        ((uint32_t)0x00000020u)

#define GPTM_TW_GPTMTnCTL_TnOTE_MASK        ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnCTL_TnOTE_DIS         ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnCTL_TnOTE_EN          ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnCTL_R_TnPWML_MASK     ((uint32_t)0x00000040u)
#define GPTM_TW_GPTMTnCTL_R_TnPWML_BIT      (6u)
#define GPTM_TW_GPTMTnCTL_R_TnPWML_NA       ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnCTL_R_TnPWML_INV      ((uint32_t)0x00000040u)

#define GPTM_TW_GPTMTnCTL_TnPWML_MASK       ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnCTL_TnPWML_NA         ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnCTL_TnPWML_INV        ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPWTM_GPTMCTL_R_TAEN_MASK            ((uint32_t)0x00000001u)
#define GPWTM_GPTMCTL_R_TAEN_BIT             (0u)
#define GPWTM_GPTMCTL_R_TAEN_DIS             ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_R_TAEN_EN              ((uint32_t)0x00000001u)

#define GPWTM_GPTMCTL_TAEN_MASK              ((uint32_t)0x00000001u)
#define GPWTM_GPTMCTL_TAEN_DIS               ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_TAEN_EN                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMCTL_R_TASTALL_MASK         ((uint32_t)0x00000002u)
#define GPWTM_GPTMCTL_R_TASTALL_BIT          (1u)
#define GPWTM_GPTMCTL_R_TASTALL_CONTINUE     ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_R_TASTALL_FREEZE       ((uint32_t)0x00000002u)

#define GPWTM_GPTMCTL_TASTALL_MASK           ((uint32_t)0x00000001u)
#define GPWTM_GPTMCTL_TASTALL_CONTINUE       ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_TASTALL_FREEZE         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMCTL_R_TAEVENT_MASK         ((uint32_t)0x0000000Cu)
#define GPWTM_GPTMCTL_R_TAEVENT_BIT          (2u)
#define GPWTM_GPTMCTL_R_TAEVENT_POS          ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_R_TAEVENT_NEG          ((uint32_t)0x00000004u)
#define GPWTM_GPTMCTL_R_TAEVENT_BOTH         ((uint32_t)0x0000000Cu)

#define GPWTM_GPTMCTL_TAEVENT_MASK           ((uint32_t)0x00000003u)
#define GPWTM_GPTMCTL_TAEVENT_NEG            ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_TAEVENT_POS            ((uint32_t)0x00000001u)
#define GPWTM_GPTMCTL_TAEVENT_BOTH           ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPWTM_GPTMCTL_R_RTCEN_MASK           ((uint32_t)0x00000010u)
#define GPWTM_GPTMCTL_R_RTCEN_BIT            (4u)
#define GPWTM_GPTMCTL_R_RTCEN_CONTINUE       ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_R_RTCEN_FREEZE         ((uint32_t)0x00000010u)

#define GPWTM_GPTMCTL_RTCEN_MASK             ((uint32_t)0x00000001u)
#define GPWTM_GPTMCTL_RTCEN_CONTINUE         ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_RTCEN_FREEZE           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMCTL_R_TAOTE_MASK           ((uint32_t)0x00000020u)
#define GPWTM_GPTMCTL_R_TAOTE_BIT            (5u)
#define GPWTM_GPTMCTL_R_TAOTE_DIS            ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_R_TAOTE_EN             ((uint32_t)0x00000020u)

#define GPWTM_GPTMCTL_TAOTE_MASK             ((uint32_t)0x00000001u)
#define GPWTM_GPTMCTL_TAOTE_DIS              ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_TAOTE_EN               ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMCTL_R_TAPWML_MASK          ((uint32_t)0x00000040u)
#define GPWTM_GPTMCTL_R_TAPWML_BIT           (6u)
#define GPWTM_GPTMCTL_R_TAPWML_NA            ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_R_TAPWML_INV           ((uint32_t)0x00000040u)

#define GPWTM_GPTMCTL_TAPWML_MASK            ((uint32_t)0x00000001u)
#define GPWTM_GPTMCTL_TAPWML_NA              ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_TAPWML_INV             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMCTL_R_TBEN_MASK            ((uint32_t)0x00000100u)
#define GPWTM_GPTMCTL_R_TBEN_BIT             (8u)
#define GPWTM_GPTMCTL_R_TBEN_DIS             ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_R_TBEN_EN              ((uint32_t)0x00000100u)

#define GPWTM_GPTMCTL_TBEN_MASK              ((uint32_t)0x00000001u)
#define GPWTM_GPTMCTL_TBEN_DIS               ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_TBEN_EN                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMCTL_R_TBSTALL_MASK         ((uint32_t)0x00000200u)
#define GPWTM_GPTMCTL_R_TBSTALL_BIT          (9u)
#define GPWTM_GPTMCTL_R_TBSTALL_CONTINUE     ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_R_TBSTALL_FREEZE       ((uint32_t)0x00000200u)

#define GPWTM_GPTMCTL_TBSTALL_MASK           ((uint32_t)0x00000001u)
#define GPWTM_GPTMCTL_TBSTALL_CONTINUE       ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_TBSTALL_FREEZE         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMCTL_R_TBEVENT_MASK         ((uint32_t)0x00000C00u)
#define GPWTM_GPTMCTL_R_TBEVENT_BIT          (10u)
#define GPWTM_GPTMCTL_R_TBEVENT_POS          ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_R_TBEVENT_NEG          ((uint32_t)0x00000400u)
#define GPWTM_GPTMCTL_R_TBEVENT_BOTH         ((uint32_t)0x00000C00u)

#define GPWTM_GPTMCTL_TBEVENT_MASK           ((uint32_t)0x00000003u)
#define GPWTM_GPTMCTL_TBEVENT_NEG            ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_TBEVENT_POS            ((uint32_t)0x00000001u)
#define GPWTM_GPTMCTL_TBEVENT_BOTH           ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPWTM_GPTMCTL_R_TBOTE_MASK           ((uint32_t)0x00002000u)
#define GPWTM_GPTMCTL_R_TBOTE_BIT            (13u)
#define GPWTM_GPTMCTL_R_TBOTE_DIS            ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_R_TBOTE_EN             ((uint32_t)0x00002000u)

#define GPWTM_GPTMCTL_TBOTE_MASK             ((uint32_t)0x00000001u)
#define GPWTM_GPTMCTL_TBOTE_DIS              ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_TBOTE_EN               ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMCTL_R_TBPWML_MASK          ((uint32_t)0x00004000u)
#define GPWTM_GPTMCTL_R_TBPWML_BIT           (14u)
#define GPWTM_GPTMCTL_R_TBPWML_NA            ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_R_TBPWML_INV           ((uint32_t)0x00004000u)

#define GPWTM_GPTMCTL_TBPWML_MASK            ((uint32_t)0x00000001u)
#define GPWTM_GPTMCTL_TBPWML_NA              ((uint32_t)0x00000000u)
#define GPWTM_GPTMCTL_TBPWML_INV             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnCTL_R_TnEN_MASK       ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnCTL_R_TnEN_BIT        (0u)
#define GPWTM_TA_GPTMTnCTL_R_TnEN_DIS        ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnCTL_R_TnEN_EN         ((uint32_t)0x00000001u)

#define GPWTM_TA_GPTMTnCTL_TnEN_MASK         ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnCTL_TnEN_DIS          ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnCTL_TnEN_EN           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnCTL_R_TnSTALL_MASK    ((uint32_t)0x00000002u)
#define GPWTM_TA_GPTMTnCTL_R_TnSTALL_BIT     (1u)
#define GPWTM_TA_GPTMTnCTL_R_TnSTALL_CONTINUE    ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnCTL_R_TnSTALL_FREEZE  ((uint32_t)0x00000002u)

#define GPWTM_TA_GPTMTnCTL_TnSTALL_MASK      ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnCTL_TnSTALL_CONTINUE  ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnCTL_TnSTALL_FREEZE    ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnCTL_R_TnEVENT_MASK    ((uint32_t)0x0000000Cu)
#define GPWTM_TA_GPTMTnCTL_R_TnEVENT_BIT     (2u)
#define GPWTM_TA_GPTMTnCTL_R_TnEVENT_POS     ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnCTL_R_TnEVENT_NEG     ((uint32_t)0x00000004u)
#define GPWTM_TA_GPTMTnCTL_R_TnEVENT_BOTH    ((uint32_t)0x0000000Cu)

#define GPWTM_TA_GPTMTnCTL_TnEVENT_MASK      ((uint32_t)0x00000003u)
#define GPWTM_TA_GPTMTnCTL_TnEVENT_NEG       ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnCTL_TnEVENT_POS       ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnCTL_TnEVENT_BOTH      ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnCTL_R_TnOTE_MASK      ((uint32_t)0x00000020u)
#define GPWTM_TA_GPTMTnCTL_R_TnOTE_BIT       (5u)
#define GPWTM_TA_GPTMTnCTL_R_TnOTE_DIS       ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnCTL_R_TnOTE_EN        ((uint32_t)0x00000020u)

#define GPWTM_TA_GPTMTnCTL_TnOTE_MASK        ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnCTL_TnOTE_DIS         ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnCTL_TnOTE_EN          ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnCTL_R_TnPWML_MASK     ((uint32_t)0x00000040u)
#define GPWTM_TA_GPTMTnCTL_R_TnPWML_BIT      (6u)
#define GPWTM_TA_GPTMTnCTL_R_TnPWML_NA       ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnCTL_R_TnPWML_INV      ((uint32_t)0x00000040u)

#define GPWTM_TA_GPTMTnCTL_TnPWML_MASK       ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnCTL_TnPWML_NA         ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnCTL_TnPWML_INV        ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPWTM_TB_GPTMTnCTL_R_TnEN_MASK            ((uint32_t)0x00000100u)
#define GPWTM_TB_GPTMTnCTL_R_TnEN_BIT             (8u)
#define GPWTM_TB_GPTMTnCTL_R_TnEN_DIS             ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnCTL_R_TnEN_EN              ((uint32_t)0x00000100u)

#define GPWTM_TB_GPTMTnCTL_TnEN_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnCTL_TnEN_DIS               ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnCTL_TnEN_EN                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnCTL_R_TnSTALL_MASK         ((uint32_t)0x00000200u)
#define GPWTM_TB_GPTMTnCTL_R_TnSTALL_BIT          (9u)
#define GPWTM_TB_GPTMTnCTL_R_TnSTALL_CONTINUE     ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnCTL_R_TnSTALL_FREEZE       ((uint32_t)0x00000200u)

#define GPWTM_TB_GPTMTnCTL_TnSTALL_MASK           ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnCTL_TnSTALL_CONTINUE       ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnCTL_TnSTALL_FREEZE         ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnCTL_R_TnEVENT_MASK         ((uint32_t)0x00000C00u)
#define GPWTM_TB_GPTMTnCTL_R_TnEVENT_BIT          (10u)
#define GPWTM_TB_GPTMTnCTL_R_TnEVENT_POS          ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnCTL_R_TnEVENT_NEG          ((uint32_t)0x00000400u)
#define GPWTM_TB_GPTMTnCTL_R_TnEVENT_BOTH         ((uint32_t)0x00000C00u)

#define GPWTM_TB_GPTMTnCTL_TnEVENT_MASK           ((uint32_t)0x00000003u)
#define GPWTM_TB_GPTMTnCTL_TnEVENT_NEG            ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnCTL_TnEVENT_POS            ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnCTL_TnEVENT_BOTH           ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnCTL_R_TnOTE_MASK           ((uint32_t)0x00002000u)
#define GPWTM_TB_GPTMTnCTL_R_TnOTE_BIT            (13u)
#define GPWTM_TB_GPTMTnCTL_R_TnOTE_DIS            ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnCTL_R_TnOTE_EN             ((uint32_t)0x00002000u)

#define GPWTM_TB_GPTMTnCTL_TnOTE_MASK             ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnCTL_TnOTE_DIS              ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnCTL_TnOTE_EN               ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnCTL_R_TnPWML_MASK          ((uint32_t)0x00004000u)
#define GPWTM_TB_GPTMTnCTL_R_TnPWML_BIT           (14u)
#define GPWTM_TB_GPTMTnCTL_R_TnPWML_NA            ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnCTL_R_TnPWML_INV           ((uint32_t)0x00004000u)

#define GPWTM_TB_GPTMTnCTL_TnPWML_MASK            ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnCTL_TnPWML_NA              ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnCTL_TnPWML_INV             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnCTL_R_TnEN_MASK       ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnCTL_R_TnEN_BIT        (0u)
#define GPWTM_TW_GPTMTnCTL_R_TnEN_DIS        ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnCTL_R_TnEN_EN         ((uint32_t)0x00000001u)

#define GPWTM_TW_GPTMTnCTL_TnEN_MASK         ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnCTL_TnEN_DIS          ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnCTL_TnEN_EN           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnCTL_R_TnSTALL_MASK    ((uint32_t)0x00000002u)
#define GPWTM_TW_GPTMTnCTL_R_TnSTALL_BIT     (1u)
#define GPWTM_TW_GPTMTnCTL_R_TnSTALL_CONTINUE    ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnCTL_R_TnSTALL_FREEZE  ((uint32_t)0x00000002u)

#define GPWTM_TW_GPTMTnCTL_TnSTALL_MASK      ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnCTL_TnSTALL_CONTINUE  ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnCTL_TnSTALL_FREEZE    ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnCTL_R_TnEVENT_MASK    ((uint32_t)0x0000000Cu)
#define GPWTM_TW_GPTMTnCTL_R_TnEVENT_BIT     (2u)
#define GPWTM_TW_GPTMTnCTL_R_TnEVENT_POS     ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnCTL_R_TnEVENT_NEG     ((uint32_t)0x00000004u)
#define GPWTM_TW_GPTMTnCTL_R_TnEVENT_BOTH    ((uint32_t)0x0000000Cu)

#define GPWTM_TW_GPTMTnCTL_TnEVENT_MASK      ((uint32_t)0x00000003u)
#define GPWTM_TW_GPTMTnCTL_TnEVENT_NEG       ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnCTL_TnEVENT_POS       ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnCTL_TnEVENT_BOTH      ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnCTL_R_RTCEN_MASK      ((uint32_t)0x00000010u)
#define GPWTM_TW_GPTMTnCTL_R_RTCEN_BIT       (4u)
#define GPWTM_TW_GPTMTnCTL_R_RTCEN_DIS       ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnCTL_R_RTCEN_EN        ((uint32_t)0x00000010u)

#define GPWTM_TW_GPTMTnCTL_RTCEN_MASK        ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnCTL_RTCEN_DIS         ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnCTL_RTCEN_EN          ((uint32_t)0x00000001u)
/*----------*/
/*----------*/
#define GPWTM_TW_GPTMTnCTL_R_TnOTE_MASK      ((uint32_t)0x00000020u)
#define GPWTM_TW_GPTMTnCTL_R_TnOTE_BIT       (5u)
#define GPWTM_TW_GPTMTnCTL_R_TnOTE_DIS       ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnCTL_R_TnOTE_EN        ((uint32_t)0x00000020u)

#define GPWTM_TW_GPTMTnCTL_TnOTE_MASK        ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnCTL_TnOTE_DIS         ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnCTL_TnOTE_EN          ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnCTL_R_TnPWML_MASK     ((uint32_t)0x00000040u)
#define GPWTM_TW_GPTMTnCTL_R_TnPWML_BIT      (6u)
#define GPWTM_TW_GPTMTnCTL_R_TnPWML_NA       ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnCTL_R_TnPWML_INV      ((uint32_t)0x00000040u)

#define GPWTM_TW_GPTMTnCTL_TnPWML_MASK       ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnCTL_TnPWML_NA         ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnCTL_TnPWML_INV        ((uint32_t)0x00000001u)
/*----------*/


/* GPTM0 BITBANDING GPTMCTL*/
#define GPTM0_BITBANDING_GPTMCTL_TAEN           (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAEN_BIT*4u))))
#define GPTM0_BITBANDING_GPTMCTL_TASTALL        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TASTALL_BIT*4u))))
#define GPTM0_BITBANDING_GPTMCTL_RTCEN          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_RTCEN_BIT*4u))))
#define GPTM0_BITBANDING_GPTMCTL_TAOTE          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAOTE_BIT*4u))))
#define GPTM0_BITBANDING_GPTMCTL_TAPWML         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAPWML_BIT*4u))))
#define GPTM0_BITBANDING_GPTMCTL_TBEN           (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBEN_BIT*4u))))
#define GPTM0_BITBANDING_GPTMCTL_TBSTALL        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBSTALL_BIT*4u))))
#define GPTM0_BITBANDING_GPTMCTL_TBOTE          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBOTE_BIT*4u))))
#define GPTM0_BITBANDING_GPTMCTL_TBPWML         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBPWML_BIT*4u))))

#define GPTM0_BITBANDING_TA_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPTM0_BITBANDING_TB_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPTM0_BITBANDING_TW_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnCTL_RTCEN     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_RTCEN_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnPWML_BIT*4u))))

/* GPTM1 BITBANDING GPTMCTL*/
#define GPTM1_BITBANDING_GPTMCTL_TAEN           (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAEN_BIT*4u))))
#define GPTM1_BITBANDING_GPTMCTL_TASTALL        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TASTALL_BIT*4u))))
#define GPTM1_BITBANDING_GPTMCTL_RTCEN          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_RTCEN_BIT*4u))))
#define GPTM1_BITBANDING_GPTMCTL_TAOTE          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAOTE_BIT*4u))))
#define GPTM1_BITBANDING_GPTMCTL_TAPWML         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAPWML_BIT*4u))))
#define GPTM1_BITBANDING_GPTMCTL_TBEN           (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBEN_BIT*4u))))
#define GPTM1_BITBANDING_GPTMCTL_TBSTALL        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBSTALL_BIT*4u))))
#define GPTM1_BITBANDING_GPTMCTL_TBOTE          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBOTE_BIT*4u))))
#define GPTM1_BITBANDING_GPTMCTL_TBPWML         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBPWML_BIT*4u))))

#define GPTM1_BITBANDING_TA_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPTM1_BITBANDING_TB_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPTM1_BITBANDING_TW_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnCTL_RTCEN     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_RTCEN_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnPWML_BIT*4u))))

/* GPTM2 BITBANDING GPTMCTL*/
#define GPTM2_BITBANDING_GPTMCTL_TAEN           (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAEN_BIT*4u))))
#define GPTM2_BITBANDING_GPTMCTL_TASTALL        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TASTALL_BIT*4u))))
#define GPTM2_BITBANDING_GPTMCTL_RTCEN          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_RTCEN_BIT*4u))))
#define GPTM2_BITBANDING_GPTMCTL_TAOTE          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAOTE_BIT*4u))))
#define GPTM2_BITBANDING_GPTMCTL_TAPWML         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAPWML_BIT*4u))))
#define GPTM2_BITBANDING_GPTMCTL_TBEN           (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBEN_BIT*4u))))
#define GPTM2_BITBANDING_GPTMCTL_TBSTALL        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBSTALL_BIT*4u))))
#define GPTM2_BITBANDING_GPTMCTL_TBOTE          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBOTE_BIT*4u))))
#define GPTM2_BITBANDING_GPTMCTL_TBPWML         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBPWML_BIT*4u))))

#define GPTM2_BITBANDING_TA_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPTM2_BITBANDING_TB_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPTM2_BITBANDING_TW_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnCTL_RTCEN     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_RTCEN_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnPWML_BIT*4u))))

/* GPTM3 BITBANDING GPTMCTL*/
#define GPTM3_BITBANDING_GPTMCTL_TAEN           (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAEN_BIT*4u))))
#define GPTM3_BITBANDING_GPTMCTL_TASTALL        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TASTALL_BIT*4u))))
#define GPTM3_BITBANDING_GPTMCTL_RTCEN          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_RTCEN_BIT*4u))))
#define GPTM3_BITBANDING_GPTMCTL_TAOTE          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAOTE_BIT*4u))))
#define GPTM3_BITBANDING_GPTMCTL_TAPWML         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAPWML_BIT*4u))))
#define GPTM3_BITBANDING_GPTMCTL_TBEN           (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBEN_BIT*4u))))
#define GPTM3_BITBANDING_GPTMCTL_TBSTALL        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBSTALL_BIT*4u))))
#define GPTM3_BITBANDING_GPTMCTL_TBOTE          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBOTE_BIT*4u))))
#define GPTM3_BITBANDING_GPTMCTL_TBPWML         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBPWML_BIT*4u))))

#define GPTM3_BITBANDING_TA_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPTM3_BITBANDING_TB_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPTM3_BITBANDING_TW_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnCTL_RTCEN     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_RTCEN_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnPWML_BIT*4u))))

/* GPTM4 BITBANDING GPTMCTL*/
#define GPTM4_BITBANDING_GPTMCTL_TAEN           (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAEN_BIT*4u))))
#define GPTM4_BITBANDING_GPTMCTL_TASTALL        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TASTALL_BIT*4u))))
#define GPTM4_BITBANDING_GPTMCTL_RTCEN          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_RTCEN_BIT*4u))))
#define GPTM4_BITBANDING_GPTMCTL_TAOTE          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAOTE_BIT*4u))))
#define GPTM4_BITBANDING_GPTMCTL_TAPWML         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAPWML_BIT*4u))))
#define GPTM4_BITBANDING_GPTMCTL_TBEN           (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBEN_BIT*4u))))
#define GPTM4_BITBANDING_GPTMCTL_TBSTALL        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBSTALL_BIT*4u))))
#define GPTM4_BITBANDING_GPTMCTL_TBOTE          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBOTE_BIT*4u))))
#define GPTM4_BITBANDING_GPTMCTL_TBPWML         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBPWML_BIT*4u))))

#define GPTM4_BITBANDING_TA_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPTM4_BITBANDING_TB_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPTM4_BITBANDING_TW_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnCTL_RTCEN     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_RTCEN_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnPWML_BIT*4u))))

/* GPTM5 BITBANDING GPTMCTL*/
#define GPTM5_BITBANDING_GPTMCTL_TAEN           (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAEN_BIT*4u))))
#define GPTM5_BITBANDING_GPTMCTL_TASTALL        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TASTALL_BIT*4u))))
#define GPTM5_BITBANDING_GPTMCTL_RTCEN          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_RTCEN_BIT*4u))))
#define GPTM5_BITBANDING_GPTMCTL_TAOTE          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAOTE_BIT*4u))))
#define GPTM5_BITBANDING_GPTMCTL_TAPWML         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TAPWML_BIT*4u))))
#define GPTM5_BITBANDING_GPTMCTL_TBEN           (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBEN_BIT*4u))))
#define GPTM5_BITBANDING_GPTMCTL_TBSTALL        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBSTALL_BIT*4u))))
#define GPTM5_BITBANDING_GPTMCTL_TBOTE          (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBOTE_BIT*4u))))
#define GPTM5_BITBANDING_GPTMCTL_TBPWML         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMCTL_OFFSET)*32u)+(GPTM_GPTMCTL_R_TBPWML_BIT*4u))))

#define GPTM5_BITBANDING_TA_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPTM_TA_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPTM5_BITBANDING_TB_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPTM_TB_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPTM5_BITBANDING_TW_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnCTL_RTCEN     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_RTCEN_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPTM_TW_GPTMTnCTL_R_TnPWML_BIT*4u))))

/* GPWTM0 BITBANDING GPTMCTL*/
#define GPWTM0_BITBANDING_GPTMCTL_TAEN           (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAEN_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMCTL_TASTALL        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TASTALL_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMCTL_RTCEN          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_RTCEN_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMCTL_TAOTE          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAOTE_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMCTL_TAPWML         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAPWML_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMCTL_TBEN           (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBEN_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMCTL_TBSTALL        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBSTALL_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMCTL_TBOTE          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBOTE_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMCTL_TBPWML         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBPWML_BIT*4u))))

#define GPWTM0_BITBANDING_TA_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPWTM0_BITBANDING_TB_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPWTM0_BITBANDING_TW_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnCTL_RTCEN     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_RTCEN_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnPWML_BIT*4u))))

/* GPWTM1 BITBANDING GPTMCTL*/
#define GPWTM1_BITBANDING_GPTMCTL_TAEN           (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAEN_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMCTL_TASTALL        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TASTALL_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMCTL_RTCEN          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_RTCEN_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMCTL_TAOTE          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAOTE_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMCTL_TAPWML         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAPWML_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMCTL_TBEN           (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBEN_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMCTL_TBSTALL        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBSTALL_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMCTL_TBOTE          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBOTE_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMCTL_TBPWML         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBPWML_BIT*4u))))

#define GPWTM1_BITBANDING_TA_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPWTM1_BITBANDING_TB_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPWTM1_BITBANDING_TW_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnCTL_RTCEN     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_RTCEN_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnPWML_BIT*4u))))

/* GPWTM2 BITBANDING GPTMCTL*/
#define GPWTM2_BITBANDING_GPTMCTL_TAEN           (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAEN_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMCTL_TASTALL        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TASTALL_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMCTL_RTCEN          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_RTCEN_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMCTL_TAOTE          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAOTE_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMCTL_TAPWML         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAPWML_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMCTL_TBEN           (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBEN_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMCTL_TBSTALL        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBSTALL_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMCTL_TBOTE          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBOTE_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMCTL_TBPWML         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBPWML_BIT*4u))))

#define GPWTM2_BITBANDING_TA_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPWTM2_BITBANDING_TB_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPWTM2_BITBANDING_TW_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnCTL_RTCEN     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_RTCEN_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnPWML_BIT*4u))))

/* GPWTM3 BITBANDING GPTMCTL*/
#define GPWTM3_BITBANDING_GPTMCTL_TAEN           (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAEN_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMCTL_TASTALL        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TASTALL_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMCTL_RTCEN          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_RTCEN_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMCTL_TAOTE          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAOTE_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMCTL_TAPWML         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAPWML_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMCTL_TBEN           (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBEN_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMCTL_TBSTALL        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBSTALL_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMCTL_TBOTE          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBOTE_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMCTL_TBPWML         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBPWML_BIT*4u))))

#define GPWTM3_BITBANDING_TA_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPWTM3_BITBANDING_TB_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPWTM3_BITBANDING_TW_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnCTL_RTCEN     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_RTCEN_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnPWML_BIT*4u))))

/* GPWTM4 BITBANDING GPTMCTL*/
#define GPWTM4_BITBANDING_GPTMCTL_TAEN           (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAEN_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMCTL_TASTALL        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TASTALL_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMCTL_RTCEN          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_RTCEN_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMCTL_TAOTE          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAOTE_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMCTL_TAPWML         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAPWML_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMCTL_TBEN           (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBEN_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMCTL_TBSTALL        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBSTALL_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMCTL_TBOTE          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBOTE_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMCTL_TBPWML         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBPWML_BIT*4u))))

#define GPWTM4_BITBANDING_TA_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPWTM4_BITBANDING_TB_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPWTM4_BITBANDING_TW_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnCTL_RTCEN     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_RTCEN_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnPWML_BIT*4u))))

/* GPWTM5 BITBANDING GPTMCTL*/
#define GPWTM5_BITBANDING_GPTMCTL_TAEN           (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAEN_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMCTL_TASTALL        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TASTALL_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMCTL_RTCEN          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_RTCEN_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMCTL_TAOTE          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAOTE_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMCTL_TAPWML         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TAPWML_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMCTL_TBEN           (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBEN_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMCTL_TBSTALL        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBSTALL_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMCTL_TBOTE          (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBOTE_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMCTL_TBPWML         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMCTL_OFFSET)*32u)+(GPWTM_GPTMCTL_R_TBPWML_BIT*4u))))

#define GPWTM5_BITBANDING_TA_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TA_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPWTM5_BITBANDING_TB_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TB_GPTMTnCTL_R_TnPWML_BIT*4u))))

#define GPWTM5_BITBANDING_TW_GPTMTnCTL_TnEN      (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnEN_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnCTL_TnSTALL   (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnSTALL_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnCTL_RTCEN     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_RTCEN_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnCTL_TnOTE     (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnOTE_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnCTL_TnPWML    (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnCTL_OFFSET)*32u)+(GPWTM_TW_GPTMTnCTL_R_TnPWML_BIT*4u))))



/******************************************************************************************
************************************ 5 GPTMSYNC *********************************************
******************************************************************************************/

/* GPTM0 GPTMSYNC*/
#define GPTM0_BITBANDING_GPTMSYNC           (((BITBANDING_GPTMSYNC_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMSYNC_OFFSET)*32u))))
#define GPTM0_GPTMSYNC                      (((GPTMSYNC_TypeDef*)(GPTM0_BASE + GPTM_GPTMSYNC_OFFSET )))
#define GPTM0_GPTMSYNC_R                    (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMSYNC_OFFSET)))

#define GPTM0_BITBANDING_CTL_GPTMSYNC       (((BITBANDING_GPTMSYNC_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_CTL_GPTMSYNC_OFFSET)*32u))))
#define GPTM0_CTL_GPTMSYNC                  (((GPTMSYNC_TypeDef*)(GPTM0_BASE + GPTM_CTL_GPTMSYNC_OFFSET )))
#define GPTM0_CTL_GPTMSYNC_R                (*((volatile uint32_t *)(GPTM0_BASE +GPTM_CTL_GPTMSYNC_OFFSET)))

/*----------*/
#define GPTM_GPTMSYNC_R_SYNCT0_MASK        ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_R_SYNCT0_BIT         (0u)
#define GPTM_GPTMSYNC_R_SYNCT0_NA          ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_R_SYNCT0_TA          ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_R_SYNCT0_TB          ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_R_SYNCT0_BOTH        ((uint32_t)0x00000003u)

#define GPTM_GPTMSYNC_SYNCT0_MASK          ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_SYNCT0_NA            ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_SYNCT0_TA            ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_SYNCT0_TB            ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_SYNCT0_BOTH          ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMSYNC_R_SYNCT1_MASK        ((uint32_t)0x0000000Cu)
#define GPTM_GPTMSYNC_R_SYNCT1_BIT         (2u)
#define GPTM_GPTMSYNC_R_SYNCT1_NA          ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_R_SYNCT1_TA          ((uint32_t)0x00000004u)
#define GPTM_GPTMSYNC_R_SYNCT1_TB          ((uint32_t)0x00000008u)
#define GPTM_GPTMSYNC_R_SYNCT1_BOTH        ((uint32_t)0x0000000Cu)

#define GPTM_GPTMSYNC_SYNCT1_MASK          ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_SYNCT1_NA            ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_SYNCT1_TA            ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_SYNCT1_TB            ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_SYNCT1_BOTH          ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMSYNC_R_SYNCT2_MASK        ((uint32_t)0x00000030u)
#define GPTM_GPTMSYNC_R_SYNCT2_BIT         (4u)
#define GPTM_GPTMSYNC_R_SYNCT2_NA          ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_R_SYNCT2_TA          ((uint32_t)0x00000010u)
#define GPTM_GPTMSYNC_R_SYNCT2_TB          ((uint32_t)0x00000020u)
#define GPTM_GPTMSYNC_R_SYNCT2_BOTH        ((uint32_t)0x00000030u)

#define GPTM_GPTMSYNC_SYNCT2_MASK          ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_SYNCT2_NA            ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_SYNCT2_TA            ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_SYNCT2_TB            ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_SYNCT2_BOTH          ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMSYNC_R_SYNCT3_MASK        ((uint32_t)0x000000C0u)
#define GPTM_GPTMSYNC_R_SYNCT3_BIT         (6u)
#define GPTM_GPTMSYNC_R_SYNCT3_NA          ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_R_SYNCT3_TA          ((uint32_t)0x00000040u)
#define GPTM_GPTMSYNC_R_SYNCT3_TB          ((uint32_t)0x00000080u)
#define GPTM_GPTMSYNC_R_SYNCT3_BOTH        ((uint32_t)0x000000C0u)

#define GPTM_GPTMSYNC_SYNCT3_MASK          ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_SYNCT3_NA            ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_SYNCT3_TA            ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_SYNCT3_TB            ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_SYNCT3_BOTH          ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMSYNC_R_SYNCT4_MASK        ((uint32_t)0x00000300u)
#define GPTM_GPTMSYNC_R_SYNCT4_BIT         (8u)
#define GPTM_GPTMSYNC_R_SYNCT4_NA          ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_R_SYNCT4_TA          ((uint32_t)0x00000100u)
#define GPTM_GPTMSYNC_R_SYNCT4_TB          ((uint32_t)0x00000200u)
#define GPTM_GPTMSYNC_R_SYNCT4_BOTH        ((uint32_t)0x00000300u)

#define GPTM_GPTMSYNC_SYNCT4_MASK          ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_SYNCT4_NA            ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_SYNCT4_TA            ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_SYNCT4_TB            ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_SYNCT4_BOTH          ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMSYNC_R_SYNCT5_MASK        ((uint32_t)0x00000C00u)
#define GPTM_GPTMSYNC_R_SYNCT5_BIT         (10u)
#define GPTM_GPTMSYNC_R_SYNCT5_NA          ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_R_SYNCT5_TA          ((uint32_t)0x00000400u)
#define GPTM_GPTMSYNC_R_SYNCT5_TB          ((uint32_t)0x00000800u)
#define GPTM_GPTMSYNC_R_SYNCT5_BOTH        ((uint32_t)0x00000C00u)

#define GPTM_GPTMSYNC_SYNCT5_MASK          ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_SYNCT5_NA            ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_SYNCT5_TA            ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_SYNCT5_TB            ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_SYNCT5_BOTH          ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMSYNC_R_SYNCWT0_MASK       ((uint32_t)0x00003000u)
#define GPTM_GPTMSYNC_R_SYNCWT0_BIT        (12u)
#define GPTM_GPTMSYNC_R_SYNCWT0_NA         ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_R_SYNCWT0_TA         ((uint32_t)0x00001000u)
#define GPTM_GPTMSYNC_R_SYNCWT0_TB         ((uint32_t)0x00002000u)
#define GPTM_GPTMSYNC_R_SYNCWT0_BOTH       ((uint32_t)0x00003000u)

#define GPTM_GPTMSYNC_SYNCWT0_MASK         ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_SYNCWT0_NA           ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_SYNCWT0_TA           ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_SYNCWT0_TB           ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_SYNCWT0_BOTH         ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMSYNC_R_SYNCWT1_MASK       ((uint32_t)0x0000C000u)
#define GPTM_GPTMSYNC_R_SYNCWT1_BIT        (14u)
#define GPTM_GPTMSYNC_R_SYNCWT1_NA         ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_R_SYNCWT1_TA         ((uint32_t)0x00004000u)
#define GPTM_GPTMSYNC_R_SYNCWT1_TB         ((uint32_t)0x00008000u)
#define GPTM_GPTMSYNC_R_SYNCWT1_BOTH       ((uint32_t)0x0000C000u)

#define GPTM_GPTMSYNC_SYNCWT1_MASK         ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_SYNCWT1_NA           ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_SYNCWT1_TA           ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_SYNCWT1_TB           ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_SYNCWT1_BOTH         ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMSYNC_R_SYNCWT2_MASK       ((uint32_t)0x00030000u)
#define GPTM_GPTMSYNC_R_SYNCWT2_BIT        (16u)
#define GPTM_GPTMSYNC_R_SYNCWT2_NA         ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_R_SYNCWT2_TA         ((uint32_t)0x00010000u)
#define GPTM_GPTMSYNC_R_SYNCWT2_TB         ((uint32_t)0x00020000u)
#define GPTM_GPTMSYNC_R_SYNCWT2_BOTH       ((uint32_t)0x00030000u)

#define GPTM_GPTMSYNC_SYNCWT2_MASK         ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_SYNCWT2_NA           ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_SYNCWT2_TA           ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_SYNCWT2_TB           ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_SYNCWT2_BOTH         ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMSYNC_R_SYNCWT3_MASK       ((uint32_t)0x000C0000u)
#define GPTM_GPTMSYNC_R_SYNCWT3_BIT        (18u)
#define GPTM_GPTMSYNC_R_SYNCWT3_NA         ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_R_SYNCWT3_TA         ((uint32_t)0x00040000u)
#define GPTM_GPTMSYNC_R_SYNCWT3_TB         ((uint32_t)0x00080000u)
#define GPTM_GPTMSYNC_R_SYNCWT3_BOTH       ((uint32_t)0x000C0000u)

#define GPTM_GPTMSYNC_SYNCWT3_MASK         ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_SYNCWT3_NA           ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_SYNCWT3_TA           ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_SYNCWT3_TB           ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_SYNCWT3_BOTH         ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMSYNC_R_SYNCWT4_MASK       ((uint32_t)0x0030000u)
#define GPTM_GPTMSYNC_R_SYNCWT4_BIT        (20u)
#define GPTM_GPTMSYNC_R_SYNCWT4_NA         ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_R_SYNCWT4_TA         ((uint32_t)0x00100000u)
#define GPTM_GPTMSYNC_R_SYNCWT4_TB         ((uint32_t)0x00200000u)
#define GPTM_GPTMSYNC_R_SYNCWT4_BOTH       ((uint32_t)0x00300000u)

#define GPTM_GPTMSYNC_SYNCWT4_MASK         ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_SYNCWT4_NA           ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_SYNCWT4_TA           ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_SYNCWT4_TB           ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_SYNCWT4_BOTH         ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_GPTMSYNC_R_SYNCWT5_MASK       ((uint32_t)0x00C00000u)
#define GPTM_GPTMSYNC_R_SYNCWT5_BIT        (22u)
#define GPTM_GPTMSYNC_R_SYNCWT5_NA         ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_R_SYNCWT5_TA         ((uint32_t)0x00400000u)
#define GPTM_GPTMSYNC_R_SYNCWT5_TB         ((uint32_t)0x00800000u)
#define GPTM_GPTMSYNC_R_SYNCWT5_BOTH       ((uint32_t)0x00C00000u)

#define GPTM_GPTMSYNC_SYNCWT5_MASK         ((uint32_t)0x00000003u)
#define GPTM_GPTMSYNC_SYNCWT5_NA           ((uint32_t)0x00000000u)
#define GPTM_GPTMSYNC_SYNCWT5_TA           ((uint32_t)0x00000001u)
#define GPTM_GPTMSYNC_SYNCWT5_TB           ((uint32_t)0x00000002u)
#define GPTM_GPTMSYNC_SYNCWT5_BOTH         ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMSYNC_R_SYNCT0_MASK      ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT0_BIT       (0u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT0_NA        ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT0_TA        ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT0_TB        ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT0_BOTH      ((uint32_t)0x00000003u)

#define GPTM_CTL_GPTMSYNC_SYNCT0_MASK        ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_SYNCT0_NA          ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_SYNCT0_TA          ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_SYNCT0_TB          ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_SYNCT0_BOTH        ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMSYNC_R_SYNCT1_MASK      ((uint32_t)0x0000000Cu)
#define GPTM_CTL_GPTMSYNC_R_SYNCT1_BIT       (2u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT1_NA        ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT1_TA        ((uint32_t)0x00000004u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT1_TB        ((uint32_t)0x00000008u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT1_BOTH      ((uint32_t)0x0000000Cu)

#define GPTM_CTL_GPTMSYNC_SYNCT1_MASK        ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_SYNCT1_NA          ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_SYNCT1_TA          ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_SYNCT1_TB          ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_SYNCT1_BOTH        ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMSYNC_R_SYNCT2_MASK      ((uint32_t)0x00000030u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT2_BIT       (4u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT2_NA        ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT2_TA        ((uint32_t)0x00000010u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT2_TB        ((uint32_t)0x00000020u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT2_BOTH      ((uint32_t)0x00000030u)

#define GPTM_CTL_GPTMSYNC_SYNCT2_MASK        ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_SYNCT2_NA          ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_SYNCT2_TA          ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_SYNCT2_TB          ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_SYNCT2_BOTH        ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMSYNC_R_SYNCT3_MASK      ((uint32_t)0x000000C0u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT3_BIT       (6u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT3_NA        ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT3_TA        ((uint32_t)0x00000040u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT3_TB        ((uint32_t)0x00000080u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT3_BOTH      ((uint32_t)0x000000C0u)

#define GPTM_CTL_GPTMSYNC_SYNCT3_MASK        ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_SYNCT3_NA          ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_SYNCT3_TA          ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_SYNCT3_TB          ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_SYNCT3_BOTH        ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMSYNC_R_SYNCT4_MASK      ((uint32_t)0x00000300u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT4_BIT       (8u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT4_NA        ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT4_TA        ((uint32_t)0x00000100u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT4_TB        ((uint32_t)0x00000200u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT4_BOTH      ((uint32_t)0x00000300u)

#define GPTM_CTL_GPTMSYNC_SYNCT4_MASK        ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_SYNCT4_NA          ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_SYNCT4_TA          ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_SYNCT4_TB          ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_SYNCT4_BOTH        ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMSYNC_R_SYNCT5_MASK      ((uint32_t)0x00000C00u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT5_BIT       (10u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT5_NA        ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT5_TA        ((uint32_t)0x00000400u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT5_TB        ((uint32_t)0x00000800u)
#define GPTM_CTL_GPTMSYNC_R_SYNCT5_BOTH      ((uint32_t)0x00000C00u)

#define GPTM_CTL_GPTMSYNC_SYNCT5_MASK        ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_SYNCT5_NA          ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_SYNCT5_TA          ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_SYNCT5_TB          ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_SYNCT5_BOTH        ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMSYNC_R_SYNCWT0_MASK      ((uint32_t)0x00003000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT0_BIT       (12u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT0_NA        ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT0_TA        ((uint32_t)0x00001000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT0_TB        ((uint32_t)0x00002000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT0_BOTH      ((uint32_t)0x00003000u)

#define GPTM_CTL_GPTMSYNC_SYNCWT0_MASK        ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_SYNCWT0_NA          ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_SYNCWT0_TA          ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_SYNCWT0_TB          ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_SYNCWT0_BOTH        ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMSYNC_R_SYNCWT1_MASK      ((uint32_t)0x0000C000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT1_BIT       (14u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT1_NA        ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT1_TA        ((uint32_t)0x00004000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT1_TB        ((uint32_t)0x00008000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT1_BOTH      ((uint32_t)0x0000C000u)

#define GPTM_CTL_GPTMSYNC_SYNCWT1_MASK        ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_SYNCWT1_NA          ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_SYNCWT1_TA          ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_SYNCWT1_TB          ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_SYNCWT1_BOTH        ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMSYNC_R_SYNCWT2_MASK      ((uint32_t)0x00030000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT2_BIT       (16u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT2_NA        ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT2_TA        ((uint32_t)0x00010000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT2_TB        ((uint32_t)0x00020000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT2_BOTH      ((uint32_t)0x00030000u)

#define GPTM_CTL_GPTMSYNC_SYNCWT2_MASK        ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_SYNCWT2_NA          ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_SYNCWT2_TA          ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_SYNCWT2_TB          ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_SYNCWT2_BOTH        ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMSYNC_R_SYNCWT3_MASK      ((uint32_t)0x000C0000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT3_BIT       (18u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT3_NA        ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT3_TA        ((uint32_t)0x00040000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT3_TB        ((uint32_t)0x00080000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT3_BOTH      ((uint32_t)0x000C0000u)

#define GPTM_CTL_GPTMSYNC_SYNCWT3_MASK        ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_SYNCWT3_NA          ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_SYNCWT3_TA          ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_SYNCWT3_TB          ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_SYNCWT3_BOTH        ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMSYNC_R_SYNCWT4_MASK      ((uint32_t)0x0030000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT4_BIT       (20u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT4_NA        ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT4_TA        ((uint32_t)0x00100000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT4_TB        ((uint32_t)0x00200000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT4_BOTH      ((uint32_t)0x00300000u)

#define GPTM_CTL_GPTMSYNC_SYNCWT4_MASK        ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_SYNCWT4_NA          ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_SYNCWT4_TA          ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_SYNCWT4_TB          ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_SYNCWT4_BOTH        ((uint32_t)0x00000003u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMSYNC_R_SYNCWT5_MASK      ((uint32_t)0x00C00000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT5_BIT       (22u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT5_NA        ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT5_TA        ((uint32_t)0x00400000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT5_TB        ((uint32_t)0x00800000u)
#define GPTM_CTL_GPTMSYNC_R_SYNCWT5_BOTH      ((uint32_t)0x00C00000u)

#define GPTM_CTL_GPTMSYNC_SYNCWT5_MASK        ((uint32_t)0x00000003u)
#define GPTM_CTL_GPTMSYNC_SYNCWT5_NA          ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMSYNC_SYNCWT5_TA          ((uint32_t)0x00000001u)
#define GPTM_CTL_GPTMSYNC_SYNCWT5_TB          ((uint32_t)0x00000002u)
#define GPTM_CTL_GPTMSYNC_SYNCWT5_BOTH        ((uint32_t)0x00000003u)
/*----------*/

/******************************************************************************************
************************************ 6 GPTMIMR *********************************************
******************************************************************************************/

/* GPTM0 GPTMIMR*/
#define GPTM0_BITBANDING_GPTMIMR            (((BITBANDING_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMIMR_OFFSET)*32u))))
#define GPTM0_GPTMIMR                       (((GPTMIMR_TypeDef*)(GPTM0_BASE + GPTM_GPTMIMR_OFFSET )))
#define GPTM0_GPTMIMR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMIMR_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnIMR       (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPTM0_TA_GPTMTnIMR                  (((TA_GPTMIMR_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnIMR_OFFSET )))
#define GPTM0_TA_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnIMR_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnIMR       (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnIMR                  (((TB_GPTMIMR_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnIMR_OFFSET )))
#define GPTM0_TB_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnIMR_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMTnIMR       (((BITBANDING_TW_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPTM0_TW_GPTMTnIMR                  (((TW_GPTMIMR_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMTnIMR_OFFSET )))
#define GPTM0_TW_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMTnIMR_OFFSET)))

/* GPTM1 GPTMIMR*/
#define GPTM1_BITBANDING_GPTMIMR            (((BITBANDING_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMIMR_OFFSET)*32u))))
#define GPTM1_GPTMIMR                       (((GPTMIMR_TypeDef*)(GPTM1_BASE + GPTM_GPTMIMR_OFFSET )))
#define GPTM1_GPTMIMR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMIMR_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnIMR       (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnIMR                  (((TA_GPTMIMR_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnIMR_OFFSET )))
#define GPTM1_TA_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnIMR_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnIMR       (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnIMR                  (((TB_GPTMIMR_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnIMR_OFFSET )))
#define GPTM1_TB_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnIMR_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnIMR       (((BITBANDING_TW_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnIMR                  (((TW_GPTMIMR_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnIMR_OFFSET )))
#define GPTM1_TW_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnIMR_OFFSET)))

/* GPTM1 GPTMIMR*/
#define GPTM1_BITBANDING_GPTMIMR            (((BITBANDING_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMIMR_OFFSET)*32u))))
#define GPTM1_GPTMIMR                       (((GPTMIMR_TypeDef*)(GPTM1_BASE + GPTM_GPTMIMR_OFFSET )))
#define GPTM1_GPTMIMR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMIMR_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnIMR       (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnIMR                  (((TA_GPTMIMR_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnIMR_OFFSET )))
#define GPTM1_TA_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnIMR_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnIMR       (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnIMR                  (((TB_GPTMIMR_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnIMR_OFFSET )))
#define GPTM1_TB_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnIMR_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnIMR       (((BITBANDING_TW_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnIMR                  (((TW_GPTMIMR_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnIMR_OFFSET )))
#define GPTM1_TW_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnIMR_OFFSET)))

/* GPTM2 GPTMIMR*/
#define GPTM2_BITBANDING_GPTMIMR            (((BITBANDING_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMIMR_OFFSET)*32u))))
#define GPTM2_GPTMIMR                       (((GPTMIMR_TypeDef*)(GPTM2_BASE + GPTM_GPTMIMR_OFFSET )))
#define GPTM2_GPTMIMR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMIMR_OFFSET)))

#define GPTM2_BITBANDING_TA_GPTMTnIMR       (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPTM2_TA_GPTMTnIMR                  (((TA_GPTMIMR_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnIMR_OFFSET )))
#define GPTM2_TA_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnIMR_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnIMR       (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnIMR                  (((TB_GPTMIMR_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnIMR_OFFSET )))
#define GPTM2_TB_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnIMR_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMTnIMR       (((BITBANDING_TW_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPTM2_TW_GPTMTnIMR                  (((TW_GPTMIMR_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMTnIMR_OFFSET )))
#define GPTM2_TW_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMTnIMR_OFFSET)))

/* GPTM3 GPTMIMR*/
#define GPTM3_BITBANDING_GPTMIMR            (((BITBANDING_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMIMR_OFFSET)*32u))))
#define GPTM3_GPTMIMR                       (((GPTMIMR_TypeDef*)(GPTM3_BASE + GPTM_GPTMIMR_OFFSET )))
#define GPTM3_GPTMIMR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMIMR_OFFSET)))

#define GPTM3_BITBANDING_TA_GPTMTnIMR       (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPTM3_TA_GPTMTnIMR                  (((TA_GPTMIMR_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnIMR_OFFSET )))
#define GPTM3_TA_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnIMR_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnIMR       (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnIMR                  (((TB_GPTMIMR_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnIMR_OFFSET )))
#define GPTM3_TB_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnIMR_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMTnIMR       (((BITBANDING_TW_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPTM3_TW_GPTMTnIMR                  (((TW_GPTMIMR_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMTnIMR_OFFSET )))
#define GPTM3_TW_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMTnIMR_OFFSET)))

/* GPTM4 GPTMIMR*/
#define GPTM4_BITBANDING_GPTMIMR            (((BITBANDING_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMIMR_OFFSET)*32u))))
#define GPTM4_GPTMIMR                       (((GPTMIMR_TypeDef*)(GPTM4_BASE + GPTM_GPTMIMR_OFFSET )))
#define GPTM4_GPTMIMR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMIMR_OFFSET)))

#define GPTM4_BITBANDING_TA_GPTMTnIMR       (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPTM4_TA_GPTMTnIMR                  (((TA_GPTMIMR_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnIMR_OFFSET )))
#define GPTM4_TA_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnIMR_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnIMR       (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnIMR                  (((TB_GPTMIMR_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnIMR_OFFSET )))
#define GPTM4_TB_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnIMR_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMTnIMR       (((BITBANDING_TW_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPTM4_TW_GPTMTnIMR                  (((TW_GPTMIMR_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMTnIMR_OFFSET )))
#define GPTM4_TW_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMTnIMR_OFFSET)))

/* GPTM5 GPTMIMR*/
#define GPTM5_BITBANDING_GPTMIMR            (((BITBANDING_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMIMR_OFFSET)*32u))))
#define GPTM5_GPTMIMR                       (((GPTMIMR_TypeDef*)(GPTM5_BASE + GPTM_GPTMIMR_OFFSET )))
#define GPTM5_GPTMIMR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMIMR_OFFSET)))

#define GPTM5_BITBANDING_TA_GPTMTnIMR       (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPTM5_TA_GPTMTnIMR                  (((TA_GPTMIMR_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnIMR_OFFSET )))
#define GPTM5_TA_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnIMR_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnIMR       (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnIMR                  (((TB_GPTMIMR_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnIMR_OFFSET )))
#define GPTM5_TB_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnIMR_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMTnIMR       (((BITBANDING_TW_GPTMIMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPTM5_TW_GPTMTnIMR                  (((TW_GPTMIMR_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMTnIMR_OFFSET )))
#define GPTM5_TW_GPTMTnIMR_R                (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMTnIMR_OFFSET)))

/* GPWTM0 GPTMIMR*/
#define GPWTM0_BITBANDING_GPTMIMR           (((BITBANDING_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u))))
#define GPWTM0_GPTMIMR                      (((GPTMIMR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMIMR_OFFSET )))
#define GPWTM0_GPTMIMR_R                    (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMIMR_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnIMR      (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnIMR                 (((TA_GPTMIMR_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnIMR_OFFSET )))
#define GPWTM0_TA_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnIMR_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnIMR      (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnIMR                 (((TB_GPTMIMR_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnIMR_OFFSET )))
#define GPWTM0_TB_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnIMR_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnIMR      (((BITBANDING_TW_GPWTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnIMR                 (((TW_GPWTMIMR_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnIMR_OFFSET )))
#define GPWTM0_TW_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnIMR_OFFSET)))

/* GPWTM1 GPTMIMR*/
#define GPWTM1_BITBANDING_GPTMIMR           (((BITBANDING_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u))))
#define GPWTM1_GPTMIMR                      (((GPTMIMR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMIMR_OFFSET )))
#define GPWTM1_GPTMIMR_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMIMR_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnIMR      (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnIMR                 (((TA_GPTMIMR_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnIMR_OFFSET )))
#define GPWTM1_TA_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnIMR_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnIMR      (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnIMR                 (((TB_GPTMIMR_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnIMR_OFFSET )))
#define GPWTM1_TB_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnIMR_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnIMR      (((BITBANDING_TW_GPWTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnIMR                 (((TW_GPWTMIMR_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnIMR_OFFSET )))
#define GPWTM1_TW_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnIMR_OFFSET)))

/* GPWTM1 GPTMIMR*/
#define GPWTM1_BITBANDING_GPTMIMR           (((BITBANDING_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u))))
#define GPWTM1_GPTMIMR                      (((GPTMIMR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMIMR_OFFSET )))
#define GPWTM1_GPTMIMR_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMIMR_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnIMR      (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnIMR                 (((TA_GPTMIMR_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnIMR_OFFSET )))
#define GPWTM1_TA_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnIMR_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnIMR      (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnIMR                 (((TB_GPTMIMR_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnIMR_OFFSET )))
#define GPWTM1_TB_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnIMR_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnIMR      (((BITBANDING_TW_GPWTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnIMR                 (((TW_GPWTMIMR_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnIMR_OFFSET )))
#define GPWTM1_TW_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnIMR_OFFSET)))

/* GPWTM2 GPTMIMR*/
#define GPWTM2_BITBANDING_GPTMIMR           (((BITBANDING_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u))))
#define GPWTM2_GPTMIMR                      (((GPTMIMR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMIMR_OFFSET )))
#define GPWTM2_GPTMIMR_R                    (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMIMR_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnIMR      (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnIMR                 (((TA_GPTMIMR_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnIMR_OFFSET )))
#define GPWTM2_TA_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnIMR_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnIMR      (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnIMR                 (((TB_GPTMIMR_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnIMR_OFFSET )))
#define GPWTM2_TB_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnIMR_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnIMR      (((BITBANDING_TW_GPWTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnIMR                 (((TW_GPWTMIMR_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnIMR_OFFSET )))
#define GPWTM2_TW_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnIMR_OFFSET)))

/* GPWTM3 GPTMIMR*/
#define GPWTM3_BITBANDING_GPTMIMR           (((BITBANDING_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u))))
#define GPWTM3_GPTMIMR                      (((GPTMIMR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMIMR_OFFSET )))
#define GPWTM3_GPTMIMR_R                    (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMIMR_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnIMR      (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnIMR                 (((TA_GPTMIMR_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnIMR_OFFSET )))
#define GPWTM3_TA_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnIMR_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnIMR      (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnIMR                 (((TB_GPTMIMR_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnIMR_OFFSET )))
#define GPWTM3_TB_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnIMR_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnIMR      (((BITBANDING_TW_GPWTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnIMR                 (((TW_GPWTMIMR_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnIMR_OFFSET )))
#define GPWTM3_TW_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnIMR_OFFSET)))

/* GPWTM4 GPTMIMR*/
#define GPWTM4_BITBANDING_GPTMIMR           (((BITBANDING_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u))))
#define GPWTM4_GPTMIMR                      (((GPTMIMR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMIMR_OFFSET )))
#define GPWTM4_GPTMIMR_R                    (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMIMR_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnIMR      (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnIMR                 (((TA_GPTMIMR_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnIMR_OFFSET )))
#define GPWTM4_TA_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnIMR_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnIMR      (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnIMR                 (((TB_GPTMIMR_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnIMR_OFFSET )))
#define GPWTM4_TB_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnIMR_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnIMR      (((BITBANDING_TW_GPWTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnIMR                 (((TW_GPWTMIMR_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnIMR_OFFSET )))
#define GPWTM4_TW_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnIMR_OFFSET)))

/* GPWTM5 GPTMIMR*/
#define GPWTM5_BITBANDING_GPTMIMR           (((BITBANDING_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u))))
#define GPWTM5_GPTMIMR                      (((GPTMIMR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMIMR_OFFSET )))
#define GPWTM5_GPTMIMR_R                    (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMIMR_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnIMR      (((BITBANDING_TA_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnIMR                 (((TA_GPTMIMR_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnIMR_OFFSET )))
#define GPWTM5_TA_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnIMR_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnIMR      (((BITBANDING_TB_GPTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnIMR                 (((TB_GPTMIMR_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnIMR_OFFSET )))
#define GPWTM5_TB_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnIMR_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnIMR      (((BITBANDING_TW_GPWTMIMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnIMR                 (((TW_GPWTMIMR_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnIMR_OFFSET )))
#define GPWTM5_TW_GPTMTnIMR_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnIMR_OFFSET)))

/*----------*/
#define GPTM_GPTMIMR_R_TATOIM_MASK              ((uint32_t)0x00000001u)
#define GPTM_GPTMIMR_R_TATOIM_BIT               (0u)
#define GPTM_GPTMIMR_R_TATOIM_DIS               ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_R_TATOIM_EN                ((uint32_t)0x00000001u)

#define GPTM_GPTMIMR_TATOIM_MASK                ((uint32_t)0x00000001u)
#define GPTM_GPTMIMR_TATOIM_DIS                 ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_TATOIM_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMIMR_R_CAMIM_MASK               ((uint32_t)0x00000002u)
#define GPTM_GPTMIMR_R_CAMIM_BIT                (1u)
#define GPTM_GPTMIMR_R_CAMIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_R_CAMIM_EN                 ((uint32_t)0x00000002u)

#define GPTM_GPTMIMR_CAMIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_GPTMIMR_CAMIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_CAMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMIMR_R_CAEIM_MASK               ((uint32_t)0x00000004u)
#define GPTM_GPTMIMR_R_CAEIM_BIT                (2u)
#define GPTM_GPTMIMR_R_CAEIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_R_CAEIM_EN                 ((uint32_t)0x00000004u)

#define GPTM_GPTMIMR_CAEIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_GPTMIMR_CAEIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_CAEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMIMR_R_RTCIM_MASK               ((uint32_t)0x00000008u)
#define GPTM_GPTMIMR_R_RTCIM_BIT                (3u)
#define GPTM_GPTMIMR_R_RTCIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_R_RTCIM_EN                 ((uint32_t)0x00000008u)

#define GPTM_GPTMIMR_RTCIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_GPTMIMR_RTCIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_RTCIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMIMR_R_TAMIM_MASK               ((uint32_t)0x00000010u)
#define GPTM_GPTMIMR_R_TAMIM_BIT                (4u)
#define GPTM_GPTMIMR_R_TAMIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_R_TAMIM_EN                 ((uint32_t)0x00000010u)

#define GPTM_GPTMIMR_TAMIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_GPTMIMR_TAMIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_TAMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMIMR_R_TBTOIM_MASK              ((uint32_t)0x00000100u)
#define GPTM_GPTMIMR_R_TBTOIM_BIT               (8u)
#define GPTM_GPTMIMR_R_TBTOIM_DIS               ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_R_TBTOIM_EN                ((uint32_t)0x00000100u)

#define GPTM_GPTMIMR_TBTOIM_MASK                ((uint32_t)0x00000001u)
#define GPTM_GPTMIMR_TBTOIM_DIS                 ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_TBTOIM_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMIMR_R_CBMIM_MASK               ((uint32_t)0x00000200u)
#define GPTM_GPTMIMR_R_CBMIM_BIT                (9u)
#define GPTM_GPTMIMR_R_CBMIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_R_CBMIM_EN                 ((uint32_t)0x00000200u)

#define GPTM_GPTMIMR_CBMIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_GPTMIMR_CBMIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_CBMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMIMR_R_CBEIM_MASK               ((uint32_t)0x00000400u)
#define GPTM_GPTMIMR_R_CBEIM_BIT                (10u)
#define GPTM_GPTMIMR_R_CBEIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_R_CBEIM_EN                 ((uint32_t)0x00000400u)

#define GPTM_GPTMIMR_CBEIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_GPTMIMR_CBEIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_CBEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMIMR_R_TBMIM_MASK               ((uint32_t)0x00000800u)
#define GPTM_GPTMIMR_R_TBMIM_BIT                (11u)
#define GPTM_GPTMIMR_R_TBMIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_R_TBMIM_EN                 ((uint32_t)0x00000800u)

#define GPTM_GPTMIMR_TBMIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_GPTMIMR_TBMIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_TBMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMIMR_R_WUEIM_MASK               ((uint32_t)0x00010000u)
#define GPTM_GPTMIMR_R_WUEIM_BIT                (16u)
#define GPTM_GPTMIMR_R_WUEIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_R_WUEIM_EN                 ((uint32_t)0x00010000u)

#define GPTM_GPTMIMR_WUEIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_GPTMIMR_WUEIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_GPTMIMR_WUEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPTM_TA_GPTMTnIMR_R_TnTOIM_MASK              ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnIMR_R_TnTOIM_BIT               (0u)
#define GPTM_TA_GPTMTnIMR_R_TnTOIM_DIS               ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnIMR_R_TnTOIM_EN                ((uint32_t)0x00000001u)

#define GPTM_TA_GPTMTnIMR_TnTOIM_MASK                ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnIMR_TnTOIM_DIS                 ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnIMR_TnTOIM_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnIMR_R_CnMIM_MASK               ((uint32_t)0x00000002u)
#define GPTM_TA_GPTMTnIMR_R_CnMIM_BIT                (1u)
#define GPTM_TA_GPTMTnIMR_R_CnMIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnIMR_R_CnMIM_EN                 ((uint32_t)0x00000002u)

#define GPTM_TA_GPTMTnIMR_CnMIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnIMR_CnMIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnIMR_CnMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnIMR_R_CnEIM_MASK               ((uint32_t)0x00000004u)
#define GPTM_TA_GPTMTnIMR_R_CnEIM_BIT                (2u)
#define GPTM_TA_GPTMTnIMR_R_CnEIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnIMR_R_CnEIM_EN                 ((uint32_t)0x00000004u)

#define GPTM_TA_GPTMTnIMR_CnEIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnIMR_CnEIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnIMR_CnEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnIMR_R_TnMIM_MASK               ((uint32_t)0x00000010u)
#define GPTM_TA_GPTMTnIMR_R_TnMIM_BIT                (4u)
#define GPTM_TA_GPTMTnIMR_R_TnMIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnIMR_R_TnMIM_EN                 ((uint32_t)0x00000010u)

#define GPTM_TA_GPTMTnIMR_TnMIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnIMR_TnMIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnIMR_TnMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnIMR_R_TnTOIM_MASK              ((uint32_t)0x00000100u)
#define GPTM_TB_GPTMTnIMR_R_TnTOIM_BIT               (8u)
#define GPTM_TB_GPTMTnIMR_R_TnTOIM_DIS               ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnIMR_R_TnTOIM_EN                ((uint32_t)0x00000100u)

#define GPTM_TB_GPTMTnIMR_TnTOIM_MASK                ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnIMR_TnTOIM_DIS                 ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnIMR_TnTOIM_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnIMR_R_CnMIM_MASK               ((uint32_t)0x00000200u)
#define GPTM_TB_GPTMTnIMR_R_CnMIM_BIT                (9u)
#define GPTM_TB_GPTMTnIMR_R_CnMIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnIMR_R_CnMIM_EN                 ((uint32_t)0x00000200u)

#define GPTM_TB_GPTMTnIMR_CnMIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnIMR_CnMIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnIMR_CnMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnIMR_R_CnEIM_MASK               ((uint32_t)0x00000400u)
#define GPTM_TB_GPTMTnIMR_R_CnEIM_BIT                (10u)
#define GPTM_TB_GPTMTnIMR_R_CnEIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnIMR_R_CnEIM_EN                 ((uint32_t)0x00000400u)

#define GPTM_TB_GPTMTnIMR_CnEIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnIMR_CnEIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnIMR_CnEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnIMR_R_TnMIM_MASK               ((uint32_t)0x00000800u)
#define GPTM_TB_GPTMTnIMR_R_TnMIM_BIT                (11u)
#define GPTM_TB_GPTMTnIMR_R_TnMIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnIMR_R_TnMIM_EN                 ((uint32_t)0x00000800u)

#define GPTM_TB_GPTMTnIMR_TnMIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnIMR_TnMIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnIMR_TnMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnIMR_R_TnTOIM_MASK              ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnIMR_R_TnTOIM_BIT               (0u)
#define GPTM_TW_GPTMTnIMR_R_TnTOIM_DIS               ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnIMR_R_TnTOIM_EN                ((uint32_t)0x00000001u)

#define GPTM_TW_GPTMTnIMR_TnTOIM_MASK                ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnIMR_TnTOIM_DIS                 ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnIMR_TnTOIM_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnIMR_R_CnMIM_MASK               ((uint32_t)0x00000002u)
#define GPTM_TW_GPTMTnIMR_R_CnMIM_BIT                (1u)
#define GPTM_TW_GPTMTnIMR_R_CnMIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnIMR_R_CnMIM_EN                 ((uint32_t)0x00000002u)

#define GPTM_TW_GPTMTnIMR_CnMIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnIMR_CnMIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnIMR_CnMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnIMR_R_CnEIM_MASK               ((uint32_t)0x00000004u)
#define GPTM_TW_GPTMTnIMR_R_CnEIM_BIT                (2u)
#define GPTM_TW_GPTMTnIMR_R_CnEIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnIMR_R_CnEIM_EN                 ((uint32_t)0x00000004u)

#define GPTM_TW_GPTMTnIMR_CnEIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnIMR_CnEIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnIMR_CnEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnIMR_R_RTCIM_MASK               ((uint32_t)0x00000008u)
#define GPTM_TW_GPTMTnIMR_R_RTCIM_BIT                (3u)
#define GPTM_TW_GPTMTnIMR_R_RTCIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnIMR_R_RTCIM_EN                 ((uint32_t)0x00000008u)

#define GPTM_TW_GPTMTnIMR_RTCIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnIMR_RTCIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnIMR_RTCIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnIMR_R_TnMIM_MASK               ((uint32_t)0x00000010u)
#define GPTM_TW_GPTMTnIMR_R_TnMIM_BIT                (4u)
#define GPTM_TW_GPTMTnIMR_R_TnMIM_DIS                ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnIMR_R_TnMIM_EN                 ((uint32_t)0x00000010u)

#define GPTM_TW_GPTMTnIMR_TnMIM_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnIMR_TnMIM_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnIMR_TnMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMIMR_R_TATOIM_MASK              ((uint32_t)0x00000001u)
#define GPWTM_GPTMIMR_R_TATOIM_BIT               (0u)
#define GPWTM_GPTMIMR_R_TATOIM_DIS               ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_R_TATOIM_EN                ((uint32_t)0x00000001u)

#define GPWTM_GPTMIMR_TATOIM_MASK                ((uint32_t)0x00000001u)
#define GPWTM_GPTMIMR_TATOIM_DIS                 ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_TATOIM_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMIMR_R_CAMIM_MASK               ((uint32_t)0x00000002u)
#define GPWTM_GPTMIMR_R_CAMIM_BIT                (1u)
#define GPWTM_GPTMIMR_R_CAMIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_R_CAMIM_EN                 ((uint32_t)0x00000002u)

#define GPWTM_GPTMIMR_CAMIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_GPTMIMR_CAMIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_CAMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMIMR_R_CAEIM_MASK               ((uint32_t)0x00000004u)
#define GPWTM_GPTMIMR_R_CAEIM_BIT                (2u)
#define GPWTM_GPTMIMR_R_CAEIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_R_CAEIM_EN                 ((uint32_t)0x00000004u)

#define GPWTM_GPTMIMR_CAEIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_GPTMIMR_CAEIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_CAEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMIMR_R_RTCIM_MASK               ((uint32_t)0x00000008u)
#define GPWTM_GPTMIMR_R_RTCIM_BIT                (3u)
#define GPWTM_GPTMIMR_R_RTCIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_R_RTCIM_EN                 ((uint32_t)0x00000008u)

#define GPWTM_GPTMIMR_RTCIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_GPTMIMR_RTCIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_RTCIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMIMR_R_TAMIM_MASK               ((uint32_t)0x00000010u)
#define GPWTM_GPTMIMR_R_TAMIM_BIT                (4u)
#define GPWTM_GPTMIMR_R_TAMIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_R_TAMIM_EN                 ((uint32_t)0x00000010u)

#define GPWTM_GPTMIMR_TAMIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_GPTMIMR_TAMIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_TAMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMIMR_R_TBTOIM_MASK              ((uint32_t)0x00000100u)
#define GPWTM_GPTMIMR_R_TBTOIM_BIT               (8u)
#define GPWTM_GPTMIMR_R_TBTOIM_DIS               ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_R_TBTOIM_EN                ((uint32_t)0x00000100u)

#define GPWTM_GPTMIMR_TBTOIM_MASK                ((uint32_t)0x00000001u)
#define GPWTM_GPTMIMR_TBTOIM_DIS                 ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_TBTOIM_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMIMR_R_CBMIM_MASK               ((uint32_t)0x00000200u)
#define GPWTM_GPTMIMR_R_CBMIM_BIT                (9u)
#define GPWTM_GPTMIMR_R_CBMIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_R_CBMIM_EN                 ((uint32_t)0x00000200u)

#define GPWTM_GPTMIMR_CBMIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_GPTMIMR_CBMIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_CBMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMIMR_R_CBEIM_MASK               ((uint32_t)0x00000400u)
#define GPWTM_GPTMIMR_R_CBEIM_BIT                (10u)
#define GPWTM_GPTMIMR_R_CBEIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_R_CBEIM_EN                 ((uint32_t)0x00000400u)

#define GPWTM_GPTMIMR_CBEIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_GPTMIMR_CBEIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_CBEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMIMR_R_TBMIM_MASK               ((uint32_t)0x00000800u)
#define GPWTM_GPTMIMR_R_TBMIM_BIT                (11u)
#define GPWTM_GPTMIMR_R_TBMIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_R_TBMIM_EN                 ((uint32_t)0x00000800u)

#define GPWTM_GPTMIMR_TBMIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_GPTMIMR_TBMIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_TBMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMIMR_R_WUEIM_MASK               ((uint32_t)0x00010000u)
#define GPWTM_GPTMIMR_R_WUEIM_BIT                (16u)
#define GPWTM_GPTMIMR_R_WUEIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_R_WUEIM_EN                 ((uint32_t)0x00010000u)

#define GPWTM_GPTMIMR_WUEIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_GPTMIMR_WUEIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_GPTMIMR_WUEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPWTM_TA_GPTMTnIMR_R_TnTOIM_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnIMR_R_TnTOIM_BIT               (0u)
#define GPWTM_TA_GPTMTnIMR_R_TnTOIM_DIS               ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnIMR_R_TnTOIM_EN                ((uint32_t)0x00000001u)

#define GPWTM_TA_GPTMTnIMR_TnTOIM_MASK                ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnIMR_TnTOIM_DIS                 ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnIMR_TnTOIM_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnIMR_R_CnMIM_MASK               ((uint32_t)0x00000002u)
#define GPWTM_TA_GPTMTnIMR_R_CnMIM_BIT                (1u)
#define GPWTM_TA_GPTMTnIMR_R_CnMIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnIMR_R_CnMIM_EN                 ((uint32_t)0x00000002u)

#define GPWTM_TA_GPTMTnIMR_CnMIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnIMR_CnMIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnIMR_CnMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnIMR_R_CnEIM_MASK               ((uint32_t)0x00000004u)
#define GPWTM_TA_GPTMTnIMR_R_CnEIM_BIT                (2u)
#define GPWTM_TA_GPTMTnIMR_R_CnEIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnIMR_R_CnEIM_EN                 ((uint32_t)0x00000004u)

#define GPWTM_TA_GPTMTnIMR_CnEIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnIMR_CnEIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnIMR_CnEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnIMR_R_TnMIM_MASK               ((uint32_t)0x00000010u)
#define GPWTM_TA_GPTMTnIMR_R_TnMIM_BIT                (4u)
#define GPWTM_TA_GPTMTnIMR_R_TnMIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnIMR_R_TnMIM_EN                 ((uint32_t)0x00000010u)

#define GPWTM_TA_GPTMTnIMR_TnMIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnIMR_TnMIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnIMR_TnMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnIMR_R_TnTOIM_MASK              ((uint32_t)0x00000100u)
#define GPWTM_TB_GPTMTnIMR_R_TnTOIM_BIT               (8u)
#define GPWTM_TB_GPTMTnIMR_R_TnTOIM_DIS               ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnIMR_R_TnTOIM_EN                ((uint32_t)0x00000100u)

#define GPWTM_TB_GPTMTnIMR_TnTOIM_MASK                ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnIMR_TnTOIM_DIS                 ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnIMR_TnTOIM_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnIMR_R_CnMIM_MASK               ((uint32_t)0x00000200u)
#define GPWTM_TB_GPTMTnIMR_R_CnMIM_BIT                (9u)
#define GPWTM_TB_GPTMTnIMR_R_CnMIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnIMR_R_CnMIM_EN                 ((uint32_t)0x00000200u)

#define GPWTM_TB_GPTMTnIMR_CnMIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnIMR_CnMIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnIMR_CnMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnIMR_R_CnEIM_MASK               ((uint32_t)0x00000400u)
#define GPWTM_TB_GPTMTnIMR_R_CnEIM_BIT                (10u)
#define GPWTM_TB_GPTMTnIMR_R_CnEIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnIMR_R_CnEIM_EN                 ((uint32_t)0x00000400u)

#define GPWTM_TB_GPTMTnIMR_CnEIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnIMR_CnEIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnIMR_CnEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnIMR_R_TnMIM_MASK               ((uint32_t)0x00000800u)
#define GPWTM_TB_GPTMTnIMR_R_TnMIM_BIT                (11u)
#define GPWTM_TB_GPTMTnIMR_R_TnMIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnIMR_R_TnMIM_EN                 ((uint32_t)0x00000800u)

#define GPWTM_TB_GPTMTnIMR_TnMIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnIMR_TnMIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnIMR_TnMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnIMR_R_TnTOIM_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnIMR_R_TnTOIM_BIT               (0u)
#define GPWTM_TW_GPTMTnIMR_R_TnTOIM_DIS               ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnIMR_R_TnTOIM_EN                ((uint32_t)0x00000001u)

#define GPWTM_TW_GPTMTnIMR_TnTOIM_MASK                ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnIMR_TnTOIM_DIS                 ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnIMR_TnTOIM_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnIMR_R_CnMIM_MASK               ((uint32_t)0x00000002u)
#define GPWTM_TW_GPTMTnIMR_R_CnMIM_BIT                (1u)
#define GPWTM_TW_GPTMTnIMR_R_CnMIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnIMR_R_CnMIM_EN                 ((uint32_t)0x00000002u)

#define GPWTM_TW_GPTMTnIMR_CnMIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnIMR_CnMIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnIMR_CnMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnIMR_R_CnEIM_MASK               ((uint32_t)0x00000004u)
#define GPWTM_TW_GPTMTnIMR_R_CnEIM_BIT                (2u)
#define GPWTM_TW_GPTMTnIMR_R_CnEIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnIMR_R_CnEIM_EN                 ((uint32_t)0x00000004u)

#define GPWTM_TW_GPTMTnIMR_CnEIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnIMR_CnEIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnIMR_CnEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnIMR_R_RTCIM_MASK               ((uint32_t)0x00000008u)
#define GPWTM_TW_GPTMTnIMR_R_RTCIM_BIT                (3u)
#define GPWTM_TW_GPTMTnIMR_R_RTCIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnIMR_R_RTCIM_EN                 ((uint32_t)0x00000008u)

#define GPWTM_TW_GPTMTnIMR_RTCIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnIMR_RTCIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnIMR_RTCIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnIMR_R_TnMIM_MASK               ((uint32_t)0x00000010u)
#define GPWTM_TW_GPTMTnIMR_R_TnMIM_BIT                (4u)
#define GPWTM_TW_GPTMTnIMR_R_TnMIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnIMR_R_TnMIM_EN                 ((uint32_t)0x00000010u)

#define GPWTM_TW_GPTMTnIMR_TnMIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnIMR_TnMIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnIMR_TnMIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnIMR_R_WUEIM_MASK               ((uint32_t)0x00010000u)
#define GPWTM_TW_GPTMTnIMR_R_WUEIM_BIT                (16u)
#define GPWTM_TW_GPTMTnIMR_R_WUEIM_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnIMR_R_WUEIM_EN                 ((uint32_t)0x00010000u)

#define GPWTM_TW_GPTMTnIMR_WUEIM_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnIMR_WUEIM_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnIMR_WUEIM_EN                   ((uint32_t)0x00000001u)
/*----------*/

/* GPTM0 BITBANDING GPTMIMR*/
#define GPTM0_BITBANDING_GPTMIMR_TATOIM             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TATOIM_BIT*4u))))
#define GPTM0_BITBANDING_GPTMIMR_CAMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CAMIM_BIT*4u))))
#define GPTM0_BITBANDING_GPTMIMR_CAEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CAEIM_BIT*4u))))
#define GPTM0_BITBANDING_GPTMIMR_RTCIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_RTCIM_BIT*4u))))
#define GPTM0_BITBANDING_GPTMIMR_TAMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TAMIM_BIT*4u))))
#define GPTM0_BITBANDING_GPTMIMR_TBTOIM             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TBTOIM_BIT*4u))))
#define GPTM0_BITBANDING_GPTMIMR_CBMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CBMIM_BIT*4u))))
#define GPTM0_BITBANDING_GPTMIMR_CBEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CBEIM_BIT*4u))))
#define GPTM0_BITBANDING_GPTMIMR_TBMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TBMIM_BIT*4u))))
#define GPTM0_BITBANDING_GPTMIMR_WUEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_WUEIM_BIT*4u))))

#define GPTM0_BITBANDING_TA_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPTM0_BITBANDING_TB_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPTM0_BITBANDING_TW_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnIMR_RTCIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_RTCIM_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_TnMIM_BIT*4u))))

/* GPTM1 BITBANDING GPTMIMR*/
#define GPTM1_BITBANDING_GPTMIMR_TATOIM             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TATOIM_BIT*4u))))
#define GPTM1_BITBANDING_GPTMIMR_CAMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CAMIM_BIT*4u))))
#define GPTM1_BITBANDING_GPTMIMR_CAEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CAEIM_BIT*4u))))
#define GPTM1_BITBANDING_GPTMIMR_RTCIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_RTCIM_BIT*4u))))
#define GPTM1_BITBANDING_GPTMIMR_TAMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TAMIM_BIT*4u))))
#define GPTM1_BITBANDING_GPTMIMR_TBTOIM             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TBTOIM_BIT*4u))))
#define GPTM1_BITBANDING_GPTMIMR_CBMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CBMIM_BIT*4u))))
#define GPTM1_BITBANDING_GPTMIMR_CBEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CBEIM_BIT*4u))))
#define GPTM1_BITBANDING_GPTMIMR_TBMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TBMIM_BIT*4u))))
#define GPTM1_BITBANDING_GPTMIMR_WUEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_WUEIM_BIT*4u))))

#define GPTM1_BITBANDING_TA_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPTM1_BITBANDING_TB_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPTM1_BITBANDING_TW_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnIMR_RTCIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_RTCIM_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_TnMIM_BIT*4u))))

/* GPTM2 BITBANDING GPTMIMR*/
#define GPTM2_BITBANDING_GPTMIMR_TATOIM             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TATOIM_BIT*4u))))
#define GPTM2_BITBANDING_GPTMIMR_CAMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CAMIM_BIT*4u))))
#define GPTM2_BITBANDING_GPTMIMR_CAEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CAEIM_BIT*4u))))
#define GPTM2_BITBANDING_GPTMIMR_RTCIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_RTCIM_BIT*4u))))
#define GPTM2_BITBANDING_GPTMIMR_TAMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TAMIM_BIT*4u))))
#define GPTM2_BITBANDING_GPTMIMR_TBTOIM             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TBTOIM_BIT*4u))))
#define GPTM2_BITBANDING_GPTMIMR_CBMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CBMIM_BIT*4u))))
#define GPTM2_BITBANDING_GPTMIMR_CBEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CBEIM_BIT*4u))))
#define GPTM2_BITBANDING_GPTMIMR_TBMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TBMIM_BIT*4u))))
#define GPTM2_BITBANDING_GPTMIMR_WUEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_WUEIM_BIT*4u))))

#define GPTM2_BITBANDING_TA_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPTM2_BITBANDING_TB_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPTM2_BITBANDING_TW_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnIMR_RTCIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_RTCIM_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_TnMIM_BIT*4u))))

/* GPTM3 BITBANDING GPTMIMR*/
#define GPTM3_BITBANDING_GPTMIMR_TATOIM             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TATOIM_BIT*4u))))
#define GPTM3_BITBANDING_GPTMIMR_CAMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CAMIM_BIT*4u))))
#define GPTM3_BITBANDING_GPTMIMR_CAEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CAEIM_BIT*4u))))
#define GPTM3_BITBANDING_GPTMIMR_RTCIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_RTCIM_BIT*4u))))
#define GPTM3_BITBANDING_GPTMIMR_TAMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TAMIM_BIT*4u))))
#define GPTM3_BITBANDING_GPTMIMR_TBTOIM             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TBTOIM_BIT*4u))))
#define GPTM3_BITBANDING_GPTMIMR_CBMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CBMIM_BIT*4u))))
#define GPTM3_BITBANDING_GPTMIMR_CBEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CBEIM_BIT*4u))))
#define GPTM3_BITBANDING_GPTMIMR_TBMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TBMIM_BIT*4u))))
#define GPTM3_BITBANDING_GPTMIMR_WUEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_WUEIM_BIT*4u))))

#define GPTM3_BITBANDING_TA_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPTM3_BITBANDING_TB_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPTM3_BITBANDING_TW_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnIMR_RTCIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_RTCIM_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_TnMIM_BIT*4u))))

/* GPTM4 BITBANDING GPTMIMR*/
#define GPTM4_BITBANDING_GPTMIMR_TATOIM             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TATOIM_BIT*4u))))
#define GPTM4_BITBANDING_GPTMIMR_CAMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CAMIM_BIT*4u))))
#define GPTM4_BITBANDING_GPTMIMR_CAEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CAEIM_BIT*4u))))
#define GPTM4_BITBANDING_GPTMIMR_RTCIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_RTCIM_BIT*4u))))
#define GPTM4_BITBANDING_GPTMIMR_TAMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TAMIM_BIT*4u))))
#define GPTM4_BITBANDING_GPTMIMR_TBTOIM             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TBTOIM_BIT*4u))))
#define GPTM4_BITBANDING_GPTMIMR_CBMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CBMIM_BIT*4u))))
#define GPTM4_BITBANDING_GPTMIMR_CBEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CBEIM_BIT*4u))))
#define GPTM4_BITBANDING_GPTMIMR_TBMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TBMIM_BIT*4u))))
#define GPTM4_BITBANDING_GPTMIMR_WUEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_WUEIM_BIT*4u))))

#define GPTM4_BITBANDING_TA_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPTM4_BITBANDING_TB_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPTM4_BITBANDING_TW_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnIMR_RTCIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_RTCIM_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_TnMIM_BIT*4u))))

/* GPTM5 BITBANDING GPTMIMR*/
#define GPTM5_BITBANDING_GPTMIMR_TATOIM             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TATOIM_BIT*4u))))
#define GPTM5_BITBANDING_GPTMIMR_CAMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CAMIM_BIT*4u))))
#define GPTM5_BITBANDING_GPTMIMR_CAEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CAEIM_BIT*4u))))
#define GPTM5_BITBANDING_GPTMIMR_RTCIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_RTCIM_BIT*4u))))
#define GPTM5_BITBANDING_GPTMIMR_TAMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TAMIM_BIT*4u))))
#define GPTM5_BITBANDING_GPTMIMR_TBTOIM             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TBTOIM_BIT*4u))))
#define GPTM5_BITBANDING_GPTMIMR_CBMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CBMIM_BIT*4u))))
#define GPTM5_BITBANDING_GPTMIMR_CBEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_CBEIM_BIT*4u))))
#define GPTM5_BITBANDING_GPTMIMR_TBMIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_TBMIM_BIT*4u))))
#define GPTM5_BITBANDING_GPTMIMR_WUEIM              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMIMR_OFFSET)*32u)+(GPTM_GPTMIMR_R_WUEIM_BIT*4u))))

#define GPTM5_BITBANDING_TA_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPTM_TA_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPTM5_BITBANDING_TB_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPTM_TB_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPTM5_BITBANDING_TW_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnIMR_RTCIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_RTCIM_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPTM_TW_GPTMTnIMR_R_TnMIM_BIT*4u))))

/* GPTM0 BITBANDING GPTMIMR*/
#define GPWTM0_BITBANDING_GPTMIMR_TATOIM             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TATOIM_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMIMR_CAMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CAMIM_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMIMR_CAEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CAEIM_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMIMR_RTCIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_RTCIM_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMIMR_TAMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TAMIM_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMIMR_TBTOIM             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TBTOIM_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMIMR_CBMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CBMIM_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMIMR_CBEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CBEIM_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMIMR_TBMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TBMIM_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMIMR_WUEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_WUEIM_BIT*4u))))

#define GPWTM0_BITBANDING_TA_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPWTM0_BITBANDING_TB_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPWTM0_BITBANDING_TW_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnIMR_RTCIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_RTCIM_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_TnMIM_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnIMR_WUEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_WUEIM_BIT*4u))))

/* GPTM0 BITBANDING GPTMIMR*/
#define GPWTM1_BITBANDING_GPTMIMR_TATOIM             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TATOIM_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMIMR_CAMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CAMIM_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMIMR_CAEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CAEIM_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMIMR_RTCIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_RTCIM_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMIMR_TAMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TAMIM_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMIMR_TBTOIM             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TBTOIM_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMIMR_CBMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CBMIM_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMIMR_CBEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CBEIM_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMIMR_TBMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TBMIM_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMIMR_WUEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_WUEIM_BIT*4u))))

#define GPWTM1_BITBANDING_TA_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPWTM1_BITBANDING_TB_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPWTM1_BITBANDING_TW_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnIMR_RTCIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_RTCIM_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_TnMIM_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnIMR_WUEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_WUEIM_BIT*4u))))

/* GPTM0 BITBANDING GPTMIMR*/
#define GPWTM2_BITBANDING_GPTMIMR_TATOIM             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TATOIM_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMIMR_CAMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CAMIM_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMIMR_CAEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CAEIM_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMIMR_RTCIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_RTCIM_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMIMR_TAMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TAMIM_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMIMR_TBTOIM             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TBTOIM_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMIMR_CBMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CBMIM_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMIMR_CBEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CBEIM_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMIMR_TBMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TBMIM_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMIMR_WUEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_WUEIM_BIT*4u))))

#define GPWTM2_BITBANDING_TA_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPWTM2_BITBANDING_TB_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPWTM2_BITBANDING_TW_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnIMR_RTCIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_RTCIM_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_TnMIM_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnIMR_WUEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_WUEIM_BIT*4u))))

/* GPTM0 BITBANDING GPTMIMR*/
#define GPWTM3_BITBANDING_GPTMIMR_TATOIM             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TATOIM_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMIMR_CAMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CAMIM_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMIMR_CAEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CAEIM_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMIMR_RTCIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_RTCIM_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMIMR_TAMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TAMIM_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMIMR_TBTOIM             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TBTOIM_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMIMR_CBMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CBMIM_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMIMR_CBEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CBEIM_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMIMR_TBMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TBMIM_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMIMR_WUEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_WUEIM_BIT*4u))))

#define GPWTM3_BITBANDING_TA_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPWTM3_BITBANDING_TB_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPWTM3_BITBANDING_TW_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnIMR_RTCIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_RTCIM_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_TnMIM_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnIMR_WUEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_WUEIM_BIT*4u))))

/* GPTM0 BITBANDING GPTMIMR*/
#define GPWTM4_BITBANDING_GPTMIMR_TATOIM             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TATOIM_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMIMR_CAMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CAMIM_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMIMR_CAEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CAEIM_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMIMR_RTCIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_RTCIM_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMIMR_TAMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TAMIM_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMIMR_TBTOIM             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TBTOIM_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMIMR_CBMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CBMIM_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMIMR_CBEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CBEIM_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMIMR_TBMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TBMIM_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMIMR_WUEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_WUEIM_BIT*4u))))

#define GPWTM4_BITBANDING_TA_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPWTM4_BITBANDING_TB_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPWTM4_BITBANDING_TW_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnIMR_RTCIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_RTCIM_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_TnMIM_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnIMR_WUEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_WUEIM_BIT*4u))))

/* GPTM0 BITBANDING GPTMIMR*/
#define GPWTM5_BITBANDING_GPTMIMR_TATOIM             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TATOIM_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMIMR_CAMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CAMIM_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMIMR_CAEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CAEIM_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMIMR_RTCIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_RTCIM_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMIMR_TAMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TAMIM_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMIMR_TBTOIM             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TBTOIM_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMIMR_CBMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CBMIM_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMIMR_CBEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_CBEIM_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMIMR_TBMIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_TBMIM_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMIMR_WUEIM              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMIMR_OFFSET)*32u)+(GPWTM_GPTMIMR_R_WUEIM_BIT*4u))))

#define GPWTM5_BITBANDING_TA_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TA_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPWTM5_BITBANDING_TB_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TB_GPTMTnIMR_R_TnMIM_BIT*4u))))

#define GPWTM5_BITBANDING_TW_GPTMTnIMR_TnTOIM        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_TnTOIM_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnIMR_CnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_CnMIM_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnIMR_RTCIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_RTCIM_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnIMR_CnEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_CnEIM_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnIMR_TnMIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_TnMIM_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnIMR_WUEIM         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnIMR_OFFSET)*32u)+(GPWTM_TW_GPTMTnIMR_R_WUEIM_BIT*4u))))


/******************************************************************************************
************************************ 7 GPTMRIS *********************************************
******************************************************************************************/

/* GPTM0 GPTMRIS*/
#define GPTM0_BITBANDING_GPTMRIS            (((BITBANDING_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRIS_OFFSET)*32u))))
#define GPTM0_GPTMRIS                       (((GPTMRIS_TypeDef*)(GPTM0_BASE + GPTM_GPTMRIS_OFFSET )))
#define GPTM0_GPTMRIS_R                     (*((volatile const uint32_t *)(GPTM0_BASE +GPTM_GPTMRIS_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnRIS       (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPTM0_TA_GPTMTnRIS                  (((TA_GPTMRIS_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnRIS_OFFSET )))
#define GPTM0_TA_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnRIS_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnRIS       (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnRIS                  (((TB_GPTMRIS_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnRIS_OFFSET )))
#define GPTM0_TB_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnRIS_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMTnRIS       (((BITBANDING_TW_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPTM0_TW_GPTMTnRIS                  (((TW_GPTMRIS_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMTnRIS_OFFSET )))
#define GPTM0_TW_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMTnRIS_OFFSET)))

/* GPTM1 GPTMRIS*/
#define GPTM1_BITBANDING_GPTMRIS            (((BITBANDING_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRIS_OFFSET)*32u))))
#define GPTM1_GPTMRIS                       (((GPTMRIS_TypeDef*)(GPTM1_BASE + GPTM_GPTMRIS_OFFSET )))
#define GPTM1_GPTMRIS_R                     (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_GPTMRIS_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnRIS       (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnRIS                  (((TA_GPTMRIS_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnRIS_OFFSET )))
#define GPTM1_TA_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnRIS_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnRIS       (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnRIS                  (((TB_GPTMRIS_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnRIS_OFFSET )))
#define GPTM1_TB_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnRIS_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnRIS       (((BITBANDING_TW_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnRIS                  (((TW_GPTMRIS_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnRIS_OFFSET )))
#define GPTM1_TW_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnRIS_OFFSET)))

/* GPTM1 GPTMRIS*/
#define GPTM1_BITBANDING_GPTMRIS            (((BITBANDING_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRIS_OFFSET)*32u))))
#define GPTM1_GPTMRIS                       (((GPTMRIS_TypeDef*)(GPTM1_BASE + GPTM_GPTMRIS_OFFSET )))
#define GPTM1_GPTMRIS_R                     (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_GPTMRIS_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnRIS       (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnRIS                  (((TA_GPTMRIS_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnRIS_OFFSET )))
#define GPTM1_TA_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnRIS_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnRIS       (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnRIS                  (((TB_GPTMRIS_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnRIS_OFFSET )))
#define GPTM1_TB_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnRIS_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnRIS       (((BITBANDING_TW_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnRIS                  (((TW_GPTMRIS_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnRIS_OFFSET )))
#define GPTM1_TW_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnRIS_OFFSET)))

/* GPTM2 GPTMRIS*/
#define GPTM2_BITBANDING_GPTMRIS            (((BITBANDING_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRIS_OFFSET)*32u))))
#define GPTM2_GPTMRIS                       (((GPTMRIS_TypeDef*)(GPTM2_BASE + GPTM_GPTMRIS_OFFSET )))
#define GPTM2_GPTMRIS_R                     (*((volatile const uint32_t *)(GPTM2_BASE +GPTM_GPTMRIS_OFFSET)))

#define GPTM2_BITBANDING_TA_GPTMTnRIS       (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPTM2_TA_GPTMTnRIS                  (((TA_GPTMRIS_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnRIS_OFFSET )))
#define GPTM2_TA_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnRIS_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnRIS       (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnRIS                  (((TB_GPTMRIS_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnRIS_OFFSET )))
#define GPTM2_TB_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnRIS_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMTnRIS       (((BITBANDING_TW_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPTM2_TW_GPTMTnRIS                  (((TW_GPTMRIS_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMTnRIS_OFFSET )))
#define GPTM2_TW_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMTnRIS_OFFSET)))

/* GPTM3 GPTMRIS*/
#define GPTM3_BITBANDING_GPTMRIS            (((BITBANDING_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRIS_OFFSET)*32u))))
#define GPTM3_GPTMRIS                       (((GPTMRIS_TypeDef*)(GPTM3_BASE + GPTM_GPTMRIS_OFFSET )))
#define GPTM3_GPTMRIS_R                     (*((volatile const uint32_t *)(GPTM3_BASE +GPTM_GPTMRIS_OFFSET)))

#define GPTM3_BITBANDING_TA_GPTMTnRIS       (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPTM3_TA_GPTMTnRIS                  (((TA_GPTMRIS_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnRIS_OFFSET )))
#define GPTM3_TA_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnRIS_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnRIS       (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnRIS                  (((TB_GPTMRIS_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnRIS_OFFSET )))
#define GPTM3_TB_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnRIS_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMTnRIS       (((BITBANDING_TW_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPTM3_TW_GPTMTnRIS                  (((TW_GPTMRIS_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMTnRIS_OFFSET )))
#define GPTM3_TW_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMTnRIS_OFFSET)))

/* GPTM4 GPTMRIS*/
#define GPTM4_BITBANDING_GPTMRIS            (((BITBANDING_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRIS_OFFSET)*32u))))
#define GPTM4_GPTMRIS                       (((GPTMRIS_TypeDef*)(GPTM4_BASE + GPTM_GPTMRIS_OFFSET )))
#define GPTM4_GPTMRIS_R                     (*((volatile const uint32_t *)(GPTM4_BASE +GPTM_GPTMRIS_OFFSET)))

#define GPTM4_BITBANDING_TA_GPTMTnRIS       (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPTM4_TA_GPTMTnRIS                  (((TA_GPTMRIS_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnRIS_OFFSET )))
#define GPTM4_TA_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnRIS_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnRIS       (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnRIS                  (((TB_GPTMRIS_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnRIS_OFFSET )))
#define GPTM4_TB_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnRIS_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMTnRIS       (((BITBANDING_TW_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPTM4_TW_GPTMTnRIS                  (((TW_GPTMRIS_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMTnRIS_OFFSET )))
#define GPTM4_TW_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMTnRIS_OFFSET)))

/* GPTM5 GPTMRIS*/
#define GPTM5_BITBANDING_GPTMRIS            (((BITBANDING_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRIS_OFFSET)*32u))))
#define GPTM5_GPTMRIS                       (((GPTMRIS_TypeDef*)(GPTM5_BASE + GPTM_GPTMRIS_OFFSET )))
#define GPTM5_GPTMRIS_R                     (*((volatile const uint32_t *)(GPTM5_BASE +GPTM_GPTMRIS_OFFSET)))

#define GPTM5_BITBANDING_TA_GPTMTnRIS       (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPTM5_TA_GPTMTnRIS                  (((TA_GPTMRIS_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnRIS_OFFSET )))
#define GPTM5_TA_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnRIS_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnRIS       (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnRIS                  (((TB_GPTMRIS_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnRIS_OFFSET )))
#define GPTM5_TB_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnRIS_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMTnRIS       (((BITBANDING_TW_GPTMRIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPTM5_TW_GPTMTnRIS                  (((TW_GPTMRIS_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMTnRIS_OFFSET )))
#define GPTM5_TW_GPTMTnRIS_R                (*((volatile const uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMTnRIS_OFFSET)))

/* GPWTM0 GPTMRIS*/
#define GPWTM0_BITBANDING_GPTMRIS           (((BITBANDING_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u))))
#define GPWTM0_GPTMRIS                      (((GPTMRIS_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMRIS_OFFSET )))
#define GPWTM0_GPTMRIS_R                    (*((volatile const uint32_t *)(GPWTM0_BASE +GPWTM_GPTMRIS_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnRIS      (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnRIS                 (((TA_GPTMRIS_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnRIS_OFFSET )))
#define GPWTM0_TA_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnRIS_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnRIS      (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnRIS                 (((TB_GPTMRIS_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnRIS_OFFSET )))
#define GPWTM0_TB_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnRIS_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnRIS      (((BITBANDING_TW_GPWTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnRIS                 (((TW_GPWTMRIS_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnRIS_OFFSET )))
#define GPWTM0_TW_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnRIS_OFFSET)))

/* GPWTM1 GPTMRIS*/
#define GPWTM1_BITBANDING_GPTMRIS           (((BITBANDING_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u))))
#define GPWTM1_GPTMRIS                      (((GPTMRIS_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMRIS_OFFSET )))
#define GPWTM1_GPTMRIS_R                    (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_GPTMRIS_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnRIS      (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnRIS                 (((TA_GPTMRIS_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnRIS_OFFSET )))
#define GPWTM1_TA_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnRIS_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnRIS      (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnRIS                 (((TB_GPTMRIS_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnRIS_OFFSET )))
#define GPWTM1_TB_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnRIS_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnRIS      (((BITBANDING_TW_GPWTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnRIS                 (((TW_GPWTMRIS_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnRIS_OFFSET )))
#define GPWTM1_TW_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnRIS_OFFSET)))

/* GPWTM1 GPTMRIS*/
#define GPWTM1_BITBANDING_GPTMRIS           (((BITBANDING_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u))))
#define GPWTM1_GPTMRIS                      (((GPTMRIS_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMRIS_OFFSET )))
#define GPWTM1_GPTMRIS_R                    (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_GPTMRIS_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnRIS      (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnRIS                 (((TA_GPTMRIS_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnRIS_OFFSET )))
#define GPWTM1_TA_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnRIS_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnRIS      (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnRIS                 (((TB_GPTMRIS_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnRIS_OFFSET )))
#define GPWTM1_TB_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnRIS_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnRIS      (((BITBANDING_TW_GPWTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnRIS                 (((TW_GPWTMRIS_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnRIS_OFFSET )))
#define GPWTM1_TW_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnRIS_OFFSET)))

/* GPWTM2 GPTMRIS*/
#define GPWTM2_BITBANDING_GPTMRIS           (((BITBANDING_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u))))
#define GPWTM2_GPTMRIS                      (((GPTMRIS_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMRIS_OFFSET )))
#define GPWTM2_GPTMRIS_R                    (*((volatile const uint32_t *)(GPWTM2_BASE +GPWTM_GPTMRIS_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnRIS      (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnRIS                 (((TA_GPTMRIS_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnRIS_OFFSET )))
#define GPWTM2_TA_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnRIS_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnRIS      (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnRIS                 (((TB_GPTMRIS_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnRIS_OFFSET )))
#define GPWTM2_TB_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnRIS_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnRIS      (((BITBANDING_TW_GPWTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnRIS                 (((TW_GPWTMRIS_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnRIS_OFFSET )))
#define GPWTM2_TW_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnRIS_OFFSET)))

/* GPWTM3 GPTMRIS*/
#define GPWTM3_BITBANDING_GPTMRIS           (((BITBANDING_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u))))
#define GPWTM3_GPTMRIS                      (((GPTMRIS_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMRIS_OFFSET )))
#define GPWTM3_GPTMRIS_R                    (*((volatile const uint32_t *)(GPWTM3_BASE +GPWTM_GPTMRIS_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnRIS      (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnRIS                 (((TA_GPTMRIS_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnRIS_OFFSET )))
#define GPWTM3_TA_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnRIS_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnRIS      (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnRIS                 (((TB_GPTMRIS_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnRIS_OFFSET )))
#define GPWTM3_TB_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnRIS_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnRIS      (((BITBANDING_TW_GPWTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnRIS                 (((TW_GPWTMRIS_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnRIS_OFFSET )))
#define GPWTM3_TW_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnRIS_OFFSET)))

/* GPWTM4 GPTMRIS*/
#define GPWTM4_BITBANDING_GPTMRIS           (((BITBANDING_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u))))
#define GPWTM4_GPTMRIS                      (((GPTMRIS_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMRIS_OFFSET )))
#define GPWTM4_GPTMRIS_R                    (*((volatile const uint32_t *)(GPWTM4_BASE +GPWTM_GPTMRIS_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnRIS      (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnRIS                 (((TA_GPTMRIS_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnRIS_OFFSET )))
#define GPWTM4_TA_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnRIS_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnRIS      (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnRIS                 (((TB_GPTMRIS_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnRIS_OFFSET )))
#define GPWTM4_TB_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnRIS_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnRIS      (((BITBANDING_TW_GPWTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnRIS                 (((TW_GPWTMRIS_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnRIS_OFFSET )))
#define GPWTM4_TW_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnRIS_OFFSET)))

/* GPWTM5 GPTMRIS*/
#define GPWTM5_BITBANDING_GPTMRIS           (((BITBANDING_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u))))
#define GPWTM5_GPTMRIS                      (((GPTMRIS_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMRIS_OFFSET )))
#define GPWTM5_GPTMRIS_R                    (*((volatile const uint32_t *)(GPWTM5_BASE +GPWTM_GPTMRIS_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnRIS      (((BITBANDING_TA_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnRIS                 (((TA_GPTMRIS_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnRIS_OFFSET )))
#define GPWTM5_TA_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnRIS_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnRIS      (((BITBANDING_TB_GPTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnRIS                 (((TB_GPTMRIS_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnRIS_OFFSET )))
#define GPWTM5_TB_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnRIS_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnRIS      (((BITBANDING_TW_GPWTMRIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnRIS                 (((TW_GPWTMRIS_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnRIS_OFFSET )))
#define GPWTM5_TW_GPTMTnRIS_R               (*((volatile const uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnRIS_OFFSET)))

/*----------*/
#define GPTM_GPTMRIS_R_TATORIS_MASK                 ((uint32_t)0x00000001u)
#define GPTM_GPTMRIS_R_TATORIS_BIT                  (0u)
#define GPTM_GPTMRIS_R_TATORIS_NOACTIVE             ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_R_TATORIS_ACTIVE               ((uint32_t)0x00000001u)

#define GPTM_GPTMRIS_TATORIS_MASK                   ((uint32_t)0x00000001u)
#define GPTM_GPTMRIS_TATORIS_NOACTIVE               ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_TATORIS_ACTIVE                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMRIS_R_CAMRIS_MASK                  ((uint32_t)0x00000002u)
#define GPTM_GPTMRIS_R_CAMRIS_BIT                   (1u)
#define GPTM_GPTMRIS_R_CAMRIS_NOACTIVE              ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_R_CAMRIS_ACTIVE                ((uint32_t)0x00000002u)

#define GPTM_GPTMRIS_CAMRIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMRIS_CAMRIS_NOACTIVE                ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_CAMRIS_ACTIVE                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMRIS_R_CAERIS_MASK                  ((uint32_t)0x00000004u)
#define GPTM_GPTMRIS_R_CAERIS_BIT                   (2u)
#define GPTM_GPTMRIS_R_CAERIS_NOACTIVE              ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_R_CAERIS_ACTIVE                ((uint32_t)0x00000004u)

#define GPTM_GPTMRIS_CAERIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMRIS_CAERIS_NOACTIVE                ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_CAERIS_ACTIVE                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMRIS_R_RTCRIS_MASK                  ((uint32_t)0x00000008u)
#define GPTM_GPTMRIS_R_RTCRIS_BIT                   (3u)
#define GPTM_GPTMRIS_R_RTCRIS_NOACTIVE              ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_R_RTCRIS_ACTIVE                ((uint32_t)0x00000008u)

#define GPTM_GPTMRIS_RTCRIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMRIS_RTCRIS_NOACTIVE                ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_RTCRIS_ACTIVE                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMRIS_R_TAMRIS_MASK                  ((uint32_t)0x00000010u)
#define GPTM_GPTMRIS_R_TAMRIS_BIT                   (4u)
#define GPTM_GPTMRIS_R_TAMRIS_NOACTIVE              ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_R_TAMRIS_ACTIVE                ((uint32_t)0x00000010u)

#define GPTM_GPTMRIS_TAMRIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMRIS_TAMRIS_NOACTIVE                ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_TAMRIS_ACTIVE                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMRIS_R_TBTORIS_MASK                 ((uint32_t)0x00000100u)
#define GPTM_GPTMRIS_R_TBTORIS_BIT                  (8u)
#define GPTM_GPTMRIS_R_TBTORIS_NOACTIVE             ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_R_TBTORIS_ACTIVE               ((uint32_t)0x00000100u)

#define GPTM_GPTMRIS_TBTORIS_MASK                   ((uint32_t)0x00000001u)
#define GPTM_GPTMRIS_TBTORIS_NOACTIVE               ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_TBTORIS_ACTIVE                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMRIS_R_CBMRIS_MASK                  ((uint32_t)0x00000200u)
#define GPTM_GPTMRIS_R_CBMRIS_BIT                   (9u)
#define GPTM_GPTMRIS_R_CBMRIS_NOACTIVE              ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_R_CBMRIS_ACTIVE                ((uint32_t)0x00000200u)

#define GPTM_GPTMRIS_CBMRIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMRIS_CBMRIS_NOACTIVE                ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_CBMRIS_ACTIVE                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMRIS_R_CBERIS_MASK                  ((uint32_t)0x00000400u)
#define GPTM_GPTMRIS_R_CBERIS_BIT                   (10u)
#define GPTM_GPTMRIS_R_CBERIS_NOACTIVE              ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_R_CBERIS_ACTIVE                ((uint32_t)0x00000400u)

#define GPTM_GPTMRIS_CBERIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMRIS_CBERIS_NOACTIVE                ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_CBERIS_ACTIVE                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMRIS_R_TBMRIS_MASK                  ((uint32_t)0x00000800u)
#define GPTM_GPTMRIS_R_TBMRIS_BIT                   (11u)
#define GPTM_GPTMRIS_R_TBMRIS_NOACTIVE              ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_R_TBMRIS_ACTIVE                ((uint32_t)0x00000800u)

#define GPTM_GPTMRIS_TBMRIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMRIS_TBMRIS_NOACTIVE                ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_TBMRIS_ACTIVE                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMRIS_R_WUERIS_MASK                  ((uint32_t)0x00010000u)
#define GPTM_GPTMRIS_R_WUERIS_BIT                   (16u)
#define GPTM_GPTMRIS_R_WUERIS_NOACTIVE              ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_R_WUERIS_ACTIVE                ((uint32_t)0x00010000u)

#define GPTM_GPTMRIS_WUERIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMRIS_WUERIS_NOACTIVE                ((uint32_t)0x00000000u)
#define GPTM_GPTMRIS_WUERIS_ACTIVE                  ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPTM_TA_GPTMTnRIS_R_TnTORIS_MASK            ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnRIS_R_TnTORIS_BIT             (0u)
#define GPTM_TA_GPTMTnRIS_R_TnTORIS_NOACTIVE        ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnRIS_R_TnTORIS_ACTIVE          ((uint32_t)0x00000001u)

#define GPTM_TA_GPTMTnRIS_TnTORIS_MASK              ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnRIS_TnTORIS_NOACTIVE          ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnRIS_TnTORIS_ACTIVE            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnRIS_R_CnMRIS_MASK             ((uint32_t)0x00000002u)
#define GPTM_TA_GPTMTnRIS_R_CnMRIS_BIT              (1u)
#define GPTM_TA_GPTMTnRIS_R_CnMRIS_NOACTIVE         ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnRIS_R_CnMRIS_ACTIVE           ((uint32_t)0x00000002u)

#define GPTM_TA_GPTMTnRIS_CnMRIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnRIS_CnMRIS_NOACTIVE           ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnRIS_CnMRIS_ACTIVE             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnRIS_R_CnERIS_MASK             ((uint32_t)0x00000004u)
#define GPTM_TA_GPTMTnRIS_R_CnERIS_BIT              (2u)
#define GPTM_TA_GPTMTnRIS_R_CnERIS_NOACTIVE         ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnRIS_R_CnERIS_ACTIVE           ((uint32_t)0x00000004u)

#define GPTM_TA_GPTMTnRIS_CnERIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnRIS_CnERIS_NOACTIVE           ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnRIS_CnERIS_ACTIVE             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnRIS_R_TnMRIS_MASK             ((uint32_t)0x00000010u)
#define GPTM_TA_GPTMTnRIS_R_TnMRIS_BIT              (4u)
#define GPTM_TA_GPTMTnRIS_R_TnMRIS_NOACTIVE         ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnRIS_R_TnMRIS_ACTIVE           ((uint32_t)0x00000010u)

#define GPTM_TA_GPTMTnRIS_TnMRIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnRIS_TnMRIS_NOACTIVE           ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnRIS_TnMRIS_ACTIVE             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnRIS_R_TnTORIS_MASK              ((uint32_t)0x00000100u)
#define GPTM_TB_GPTMTnRIS_R_TnTORIS_BIT               (8u)
#define GPTM_TB_GPTMTnRIS_R_TnTORIS_DIS               ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnRIS_R_TnTORIS_EN                ((uint32_t)0x00000100u)

#define GPTM_TB_GPTMTnRIS_TnTORIS_MASK                ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnRIS_TnTORIS_DIS                 ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnRIS_TnTORIS_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnRIS_R_CnMRIS_MASK               ((uint32_t)0x00000200u)
#define GPTM_TB_GPTMTnRIS_R_CnMRIS_BIT                (9u)
#define GPTM_TB_GPTMTnRIS_R_CnMRIS_DIS                ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnRIS_R_CnMRIS_EN                 ((uint32_t)0x00000200u)

#define GPTM_TB_GPTMTnRIS_CnMRIS_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnRIS_CnMRIS_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnRIS_CnMRIS_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnRIS_R_CnERIS_MASK               ((uint32_t)0x00000400u)
#define GPTM_TB_GPTMTnRIS_R_CnERIS_BIT                (10u)
#define GPTM_TB_GPTMTnRIS_R_CnERIS_DIS                ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnRIS_R_CnERIS_EN                 ((uint32_t)0x00000400u)

#define GPTM_TB_GPTMTnRIS_CnERIS_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnRIS_CnERIS_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnRIS_CnERIS_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnRIS_R_TnMRIS_MASK               ((uint32_t)0x00000800u)
#define GPTM_TB_GPTMTnRIS_R_TnMRIS_BIT                (11u)
#define GPTM_TB_GPTMTnRIS_R_TnMRIS_DIS                ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnRIS_R_TnMRIS_EN                 ((uint32_t)0x00000800u)

#define GPTM_TB_GPTMTnRIS_TnMRIS_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnRIS_TnMRIS_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnRIS_TnMRIS_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnRIS_R_TnTORIS_MASK            ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnRIS_R_TnTORIS_BIT             (0u)
#define GPTM_TW_GPTMTnRIS_R_TnTORIS_NOACTIVE        ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnRIS_R_TnTORIS_ACTIVE          ((uint32_t)0x00000001u)

#define GPTM_TW_GPTMTnRIS_TnTORIS_MASK              ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnRIS_TnTORIS_NOACTIVE          ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnRIS_TnTORIS_ACTIVE            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnRIS_R_CnMRIS_MASK             ((uint32_t)0x00000002u)
#define GPTM_TW_GPTMTnRIS_R_CnMRIS_BIT              (1u)
#define GPTM_TW_GPTMTnRIS_R_CnMRIS_NOACTIVE         ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnRIS_R_CnMRIS_ACTIVE           ((uint32_t)0x00000002u)

#define GPTM_TW_GPTMTnRIS_CnMRIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnRIS_CnMRIS_NOACTIVE           ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnRIS_CnMRIS_ACTIVE             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnRIS_R_CnERIS_MASK             ((uint32_t)0x00000004u)
#define GPTM_TW_GPTMTnRIS_R_CnERIS_BIT              (2u)
#define GPTM_TW_GPTMTnRIS_R_CnERIS_NOACTIVE         ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnRIS_R_CnERIS_ACTIVE           ((uint32_t)0x00000004u)

#define GPTM_TW_GPTMTnRIS_CnERIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnRIS_CnERIS_NOACTIVE           ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnRIS_CnERIS_ACTIVE             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnRIS_R_RTCRIS_MASK             ((uint32_t)0x00000008u)
#define GPTM_TW_GPTMTnRIS_R_RTCRIS_BIT              (3u)
#define GPTM_TW_GPTMTnRIS_R_RTCRIS_NOACTIVE         ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnRIS_R_RTCRIS_ACTIVE           ((uint32_t)0x00000008u)

#define GPTM_TW_GPTMTnRIS_RTCRIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnRIS_RTCRIS_NOACTIVE           ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnRIS_RTCRIS_ACTIVE             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnRIS_R_TnMRIS_MASK             ((uint32_t)0x00000010u)
#define GPTM_TW_GPTMTnRIS_R_TnMRIS_BIT              (4u)
#define GPTM_TW_GPTMTnRIS_R_TnMRIS_NOACTIVE         ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnRIS_R_TnMRIS_ACTIVE           ((uint32_t)0x00000010u)

#define GPTM_TW_GPTMTnRIS_TnMRIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnRIS_TnMRIS_NOACTIVE           ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnRIS_TnMRIS_ACTIVE             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMRIS_R_TATORIS_MASK                ((uint32_t)0x00000001u)
#define GPWTM_GPTMRIS_R_TATORIS_BIT                 (0u)
#define GPWTM_GPTMRIS_R_TATORIS_NOACTIVE            ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_R_TATORIS_ACTIVE              ((uint32_t)0x00000001u)

#define GPWTM_GPTMRIS_TATORIS_MASK                  ((uint32_t)0x00000001u)
#define GPWTM_GPTMRIS_TATORIS_NOACTIVE              ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_TATORIS_ACTIVE                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMRIS_R_CAMRIS_MASK                 ((uint32_t)0x00000002u)
#define GPWTM_GPTMRIS_R_CAMRIS_BIT                  (1u)
#define GPWTM_GPTMRIS_R_CAMRIS_NOACTIVE             ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_R_CAMRIS_ACTIVE               ((uint32_t)0x00000002u)

#define GPWTM_GPTMRIS_CAMRIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMRIS_CAMRIS_NOACTIVE               ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_CAMRIS_ACTIVE                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMRIS_R_CAERIS_MASK                 ((uint32_t)0x00000004u)
#define GPWTM_GPTMRIS_R_CAERIS_BIT                  (2u)
#define GPWTM_GPTMRIS_R_CAERIS_NOACTIVE             ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_R_CAERIS_ACTIVE               ((uint32_t)0x00000004u)

#define GPWTM_GPTMRIS_CAERIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMRIS_CAERIS_NOACTIVE               ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_CAERIS_ACTIVE                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMRIS_R_RTCRIS_MASK                 ((uint32_t)0x00000008u)
#define GPWTM_GPTMRIS_R_RTCRIS_BIT                  (3u)
#define GPWTM_GPTMRIS_R_RTCRIS_NOACTIVE             ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_R_RTCRIS_ACTIVE               ((uint32_t)0x00000008u)

#define GPWTM_GPTMRIS_RTCRIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMRIS_RTCRIS_NOACTIVE               ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_RTCRIS_ACTIVE                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMRIS_R_TAMRIS_MASK                 ((uint32_t)0x00000010u)
#define GPWTM_GPTMRIS_R_TAMRIS_BIT                  (4u)
#define GPWTM_GPTMRIS_R_TAMRIS_NOACTIVE             ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_R_TAMRIS_ACTIVE               ((uint32_t)0x00000010u)

#define GPWTM_GPTMRIS_TAMRIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMRIS_TAMRIS_NOACTIVE               ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_TAMRIS_ACTIVE                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMRIS_R_TBTORIS_MASK                ((uint32_t)0x00000100u)
#define GPWTM_GPTMRIS_R_TBTORIS_BIT                 (8u)
#define GPWTM_GPTMRIS_R_TBTORIS_NOACTIVE            ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_R_TBTORIS_ACTIVE              ((uint32_t)0x00000100u)

#define GPWTM_GPTMRIS_TBTORIS_MASK                  ((uint32_t)0x00000001u)
#define GPWTM_GPTMRIS_TBTORIS_NOACTIVE              ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_TBTORIS_ACTIVE                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMRIS_R_CBMRIS_MASK                 ((uint32_t)0x00000200u)
#define GPWTM_GPTMRIS_R_CBMRIS_BIT                  (9u)
#define GPWTM_GPTMRIS_R_CBMRIS_NOACTIVE             ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_R_CBMRIS_ACTIVE               ((uint32_t)0x00000200u)

#define GPWTM_GPTMRIS_CBMRIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMRIS_CBMRIS_NOACTIVE               ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_CBMRIS_ACTIVE                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMRIS_R_CBERIS_MASK                 ((uint32_t)0x00000400u)
#define GPWTM_GPTMRIS_R_CBERIS_BIT                  (10u)
#define GPWTM_GPTMRIS_R_CBERIS_NOACTIVE             ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_R_CBERIS_ACTIVE               ((uint32_t)0x00000400u)

#define GPWTM_GPTMRIS_CBERIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMRIS_CBERIS_NOACTIVE               ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_CBERIS_ACTIVE                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMRIS_R_TBMRIS_MASK                 ((uint32_t)0x00000800u)
#define GPWTM_GPTMRIS_R_TBMRIS_BIT                  (11u)
#define GPWTM_GPTMRIS_R_TBMRIS_NOACTIVE             ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_R_TBMRIS_ACTIVE               ((uint32_t)0x00000800u)

#define GPWTM_GPTMRIS_TBMRIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMRIS_TBMRIS_NOACTIVE               ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_TBMRIS_ACTIVE                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMRIS_R_WUERIS_MASK                 ((uint32_t)0x00010000u)
#define GPWTM_GPTMRIS_R_WUERIS_BIT                  (16u)
#define GPWTM_GPTMRIS_R_WUERIS_NOACTIVE             ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_R_WUERIS_ACTIVE               ((uint32_t)0x00010000u)

#define GPWTM_GPTMRIS_WUERIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMRIS_WUERIS_NOACTIVE               ((uint32_t)0x00000000u)
#define GPWTM_GPTMRIS_WUERIS_ACTIVE                 ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPWTM_TA_GPTMTnRIS_R_TnTORIS_MASK           ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnRIS_R_TnTORIS_BIT            (0u)
#define GPWTM_TA_GPTMTnRIS_R_TnTORIS_NOACTIVE       ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnRIS_R_TnTORIS_ACTIVE         ((uint32_t)0x00000001u)

#define GPWTM_TA_GPTMTnRIS_TnTORIS_MASK             ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnRIS_TnTORIS_NOACTIVE         ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnRIS_TnTORIS_ACTIVE           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnRIS_R_CnMRIS_MASK            ((uint32_t)0x00000002u)
#define GPWTM_TA_GPTMTnRIS_R_CnMRIS_BIT             (1u)
#define GPWTM_TA_GPTMTnRIS_R_CnMRIS_NOACTIVE        ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnRIS_R_CnMRIS_ACTIVE          ((uint32_t)0x00000002u)

#define GPWTM_TA_GPTMTnRIS_CnMRIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnRIS_CnMRIS_NOACTIVE          ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnRIS_CnMRIS_ACTIVE            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnRIS_R_CnERIS_MASK            ((uint32_t)0x00000004u)
#define GPWTM_TA_GPTMTnRIS_R_CnERIS_BIT             (2u)
#define GPWTM_TA_GPTMTnRIS_R_CnERIS_NOACTIVE        ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnRIS_R_CnERIS_ACTIVE          ((uint32_t)0x00000004u)

#define GPWTM_TA_GPTMTnRIS_CnERIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnRIS_CnERIS_NOACTIVE          ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnRIS_CnERIS_ACTIVE            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnRIS_R_TnMRIS_MASK            ((uint32_t)0x00000010u)
#define GPWTM_TA_GPTMTnRIS_R_TnMRIS_BIT             (4u)
#define GPWTM_TA_GPTMTnRIS_R_TnMRIS_NOACTIVE        ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnRIS_R_TnMRIS_ACTIVE          ((uint32_t)0x00000010u)

#define GPWTM_TA_GPTMTnRIS_TnMRIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnRIS_TnMRIS_NOACTIVE          ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnRIS_TnMRIS_ACTIVE            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnRIS_R_TnTORIS_MASK              ((uint32_t)0x00000100u)
#define GPWTM_TB_GPTMTnRIS_R_TnTORIS_BIT               (8u)
#define GPWTM_TB_GPTMTnRIS_R_TnTORIS_DIS               ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnRIS_R_TnTORIS_EN                ((uint32_t)0x00000100u)

#define GPWTM_TB_GPTMTnRIS_TnTORIS_MASK                ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnRIS_TnTORIS_DIS                 ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnRIS_TnTORIS_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnRIS_R_CnMRIS_MASK               ((uint32_t)0x00000200u)
#define GPWTM_TB_GPTMTnRIS_R_CnMRIS_BIT                (9u)
#define GPWTM_TB_GPTMTnRIS_R_CnMRIS_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnRIS_R_CnMRIS_EN                 ((uint32_t)0x00000200u)

#define GPWTM_TB_GPTMTnRIS_CnMRIS_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnRIS_CnMRIS_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnRIS_CnMRIS_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnRIS_R_CnERIS_MASK               ((uint32_t)0x00000400u)
#define GPWTM_TB_GPTMTnRIS_R_CnERIS_BIT                (10u)
#define GPWTM_TB_GPTMTnRIS_R_CnERIS_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnRIS_R_CnERIS_EN                 ((uint32_t)0x00000400u)

#define GPWTM_TB_GPTMTnRIS_CnERIS_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnRIS_CnERIS_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnRIS_CnERIS_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnRIS_R_TnMRIS_MASK               ((uint32_t)0x00000800u)
#define GPWTM_TB_GPTMTnRIS_R_TnMRIS_BIT                (11u)
#define GPWTM_TB_GPTMTnRIS_R_TnMRIS_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnRIS_R_TnMRIS_EN                 ((uint32_t)0x00000800u)

#define GPWTM_TB_GPTMTnRIS_TnMRIS_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnRIS_TnMRIS_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnRIS_TnMRIS_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnRIS_R_TnTORIS_MASK           ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnRIS_R_TnTORIS_BIT            (0u)
#define GPWTM_TW_GPTMTnRIS_R_TnTORIS_NOACTIVE       ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnRIS_R_TnTORIS_ACTIVE         ((uint32_t)0x00000001u)

#define GPWTM_TW_GPTMTnRIS_TnTORIS_MASK             ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnRIS_TnTORIS_NOACTIVE         ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnRIS_TnTORIS_ACTIVE           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnRIS_R_CnMRIS_MASK            ((uint32_t)0x00000002u)
#define GPWTM_TW_GPTMTnRIS_R_CnMRIS_BIT             (1u)
#define GPWTM_TW_GPTMTnRIS_R_CnMRIS_NOACTIVE        ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnRIS_R_CnMRIS_ACTIVE          ((uint32_t)0x00000002u)

#define GPWTM_TW_GPTMTnRIS_CnMRIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnRIS_CnMRIS_NOACTIVE          ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnRIS_CnMRIS_ACTIVE            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnRIS_R_CnERIS_MASK            ((uint32_t)0x00000004u)
#define GPWTM_TW_GPTMTnRIS_R_CnERIS_BIT             (2u)
#define GPWTM_TW_GPTMTnRIS_R_CnERIS_NOACTIVE        ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnRIS_R_CnERIS_ACTIVE          ((uint32_t)0x00000004u)

#define GPWTM_TW_GPTMTnRIS_CnERIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnRIS_CnERIS_NOACTIVE          ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnRIS_CnERIS_ACTIVE            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnRIS_R_RTCRIS_MASK            ((uint32_t)0x00000008u)
#define GPWTM_TW_GPTMTnRIS_R_RTCRIS_BIT             (3u)
#define GPWTM_TW_GPTMTnRIS_R_RTCRIS_NOACTIVE        ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnRIS_R_RTCRIS_ACTIVE          ((uint32_t)0x00000008u)

#define GPWTM_TW_GPTMTnRIS_RTCRIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnRIS_RTCRIS_NOACTIVE          ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnRIS_RTCRIS_ACTIVE            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnRIS_R_TnMRIS_MASK            ((uint32_t)0x00000010u)
#define GPWTM_TW_GPTMTnRIS_R_TnMRIS_BIT             (4u)
#define GPWTM_TW_GPTMTnRIS_R_TnMRIS_NOACTIVE        ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnRIS_R_TnMRIS_ACTIVE          ((uint32_t)0x00000010u)

#define GPWTM_TW_GPTMTnRIS_TnMRIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnRIS_TnMRIS_NOACTIVE          ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnRIS_TnMRIS_ACTIVE            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnRIS_R_WUERIS_MASK            ((uint32_t)0x00010000u)
#define GPWTM_TW_GPTMTnRIS_R_WUERIS_BIT             (16u)
#define GPWTM_TW_GPTMTnRIS_R_WUERIS_NOACTIVE        ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnRIS_R_WUERIS_ACTIVE          ((uint32_t)0x00010000u)

#define GPWTM_TW_GPTMTnRIS_WUERIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnRIS_WUERIS_NOACTIVE          ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnRIS_WUERIS_ACTIVE            ((uint32_t)0x00000001u)
/*----------*/

/* GPTM0 BITBANDING GPTMRIS*/
#define GPTM0_BITBANDING_GPTMRIS_TATORIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TATORIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMRIS_CAMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CAMRIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMRIS_CAERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CAERIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMRIS_RTCRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_RTCRIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMRIS_TAMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TAMRIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMRIS_TBTORIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TBTORIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMRIS_CBMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CBMRIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMRIS_CBERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CBERIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMRIS_TBMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TBMRIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMRIS_WUERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_WUERIS_BIT*4u))))

#define GPTM0_BITBANDING_TA_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPTM0_BITBANDING_TB_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPTM0_BITBANDING_TW_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnRIS_RTCRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_RTCRIS_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_TnMRIS_BIT*4u))))

/* GPTM1 BITBANDING GPTMRIS*/
#define GPTM1_BITBANDING_GPTMRIS_TATORIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TATORIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMRIS_CAMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CAMRIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMRIS_CAERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CAERIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMRIS_RTCRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_RTCRIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMRIS_TAMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TAMRIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMRIS_TBTORIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TBTORIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMRIS_CBMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CBMRIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMRIS_CBERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CBERIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMRIS_TBMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TBMRIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMRIS_WUERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_WUERIS_BIT*4u))))

#define GPTM1_BITBANDING_TA_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPTM1_BITBANDING_TB_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPTM1_BITBANDING_TW_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnRIS_RTCRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_RTCRIS_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_TnMRIS_BIT*4u))))

/* GPTM2 BITBANDING GPTMRIS*/
#define GPTM2_BITBANDING_GPTMRIS_TATORIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TATORIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMRIS_CAMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CAMRIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMRIS_CAERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CAERIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMRIS_RTCRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_RTCRIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMRIS_TAMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TAMRIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMRIS_TBTORIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TBTORIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMRIS_CBMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CBMRIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMRIS_CBERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CBERIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMRIS_TBMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TBMRIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMRIS_WUERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_WUERIS_BIT*4u))))

#define GPTM2_BITBANDING_TA_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPTM2_BITBANDING_TB_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPTM2_BITBANDING_TW_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnRIS_RTCRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_RTCRIS_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_TnMRIS_BIT*4u))))

/* GPTM3 BITBANDING GPTMRIS*/
#define GPTM3_BITBANDING_GPTMRIS_TATORIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TATORIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMRIS_CAMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CAMRIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMRIS_CAERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CAERIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMRIS_RTCRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_RTCRIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMRIS_TAMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TAMRIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMRIS_TBTORIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TBTORIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMRIS_CBMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CBMRIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMRIS_CBERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CBERIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMRIS_TBMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TBMRIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMRIS_WUERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_WUERIS_BIT*4u))))

#define GPTM3_BITBANDING_TA_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPTM3_BITBANDING_TB_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPTM3_BITBANDING_TW_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnRIS_RTCRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_RTCRIS_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_TnMRIS_BIT*4u))))

/* GPTM4 BITBANDING GPTMRIS*/
#define GPTM4_BITBANDING_GPTMRIS_TATORIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TATORIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMRIS_CAMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CAMRIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMRIS_CAERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CAERIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMRIS_RTCRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_RTCRIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMRIS_TAMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TAMRIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMRIS_TBTORIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TBTORIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMRIS_CBMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CBMRIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMRIS_CBERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CBERIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMRIS_TBMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TBMRIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMRIS_WUERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_WUERIS_BIT*4u))))

#define GPTM4_BITBANDING_TA_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPTM4_BITBANDING_TB_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPTM4_BITBANDING_TW_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnRIS_RTCRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_RTCRIS_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_TnMRIS_BIT*4u))))

/* GPTM5 BITBANDING GPTMRIS*/
#define GPTM5_BITBANDING_GPTMRIS_TATORIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TATORIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMRIS_CAMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CAMRIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMRIS_CAERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CAERIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMRIS_RTCRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_RTCRIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMRIS_TAMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TAMRIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMRIS_TBTORIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TBTORIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMRIS_CBMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CBMRIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMRIS_CBERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_CBERIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMRIS_TBMRIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_TBMRIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMRIS_WUERIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRIS_OFFSET)*32u)+(GPTM_GPTMRIS_R_WUERIS_BIT*4u))))

#define GPTM5_BITBANDING_TA_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPTM_TA_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPTM5_BITBANDING_TB_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPTM_TB_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPTM5_BITBANDING_TW_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnRIS_RTCRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_RTCRIS_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPTM_TW_GPTMTnRIS_R_TnMRIS_BIT*4u))))

/* GPTM0 BITBANDING GPTMRIS*/
#define GPWTM0_BITBANDING_GPTMRIS_TATORIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TATORIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMRIS_CAMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CAMRIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMRIS_CAERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CAERIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMRIS_RTCRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_RTCRIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMRIS_TAMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TAMRIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMRIS_TBTORIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TBTORIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMRIS_CBMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CBMRIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMRIS_CBERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CBERIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMRIS_TBMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TBMRIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMRIS_WUERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_WUERIS_BIT*4u))))

#define GPWTM0_BITBANDING_TA_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPWTM0_BITBANDING_TB_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPWTM0_BITBANDING_TW_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnRIS_RTCRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_RTCRIS_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_TnMRIS_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnRIS_WUERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_WUERIS_BIT*4u))))

/* GPTM0 BITBANDING GPTMRIS*/
#define GPWTM1_BITBANDING_GPTMRIS_TATORIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TATORIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMRIS_CAMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CAMRIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMRIS_CAERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CAERIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMRIS_RTCRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_RTCRIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMRIS_TAMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TAMRIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMRIS_TBTORIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TBTORIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMRIS_CBMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CBMRIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMRIS_CBERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CBERIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMRIS_TBMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TBMRIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMRIS_WUERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_WUERIS_BIT*4u))))

#define GPWTM1_BITBANDING_TA_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPWTM1_BITBANDING_TB_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPWTM1_BITBANDING_TW_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnRIS_RTCRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_RTCRIS_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_TnMRIS_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnRIS_WUERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_WUERIS_BIT*4u))))

/* GPTM0 BITBANDING GPTMRIS*/
#define GPWTM2_BITBANDING_GPTMRIS_TATORIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TATORIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMRIS_CAMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CAMRIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMRIS_CAERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CAERIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMRIS_RTCRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_RTCRIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMRIS_TAMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TAMRIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMRIS_TBTORIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TBTORIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMRIS_CBMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CBMRIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMRIS_CBERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CBERIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMRIS_TBMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TBMRIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMRIS_WUERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_WUERIS_BIT*4u))))

#define GPWTM2_BITBANDING_TA_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPWTM2_BITBANDING_TB_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPWTM2_BITBANDING_TW_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnRIS_RTCRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_RTCRIS_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_TnMRIS_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnRIS_WUERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_WUERIS_BIT*4u))))

/* GPTM0 BITBANDING GPTMRIS*/
#define GPWTM3_BITBANDING_GPTMRIS_TATORIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TATORIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMRIS_CAMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CAMRIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMRIS_CAERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CAERIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMRIS_RTCRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_RTCRIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMRIS_TAMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TAMRIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMRIS_TBTORIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TBTORIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMRIS_CBMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CBMRIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMRIS_CBERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CBERIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMRIS_TBMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TBMRIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMRIS_WUERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_WUERIS_BIT*4u))))

#define GPWTM3_BITBANDING_TA_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPWTM3_BITBANDING_TB_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPWTM3_BITBANDING_TW_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnRIS_RTCRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_RTCRIS_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_TnMRIS_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnRIS_WUERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_WUERIS_BIT*4u))))

/* GPTM0 BITBANDING GPTMRIS*/
#define GPWTM4_BITBANDING_GPTMRIS_TATORIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TATORIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMRIS_CAMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CAMRIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMRIS_CAERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CAERIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMRIS_RTCRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_RTCRIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMRIS_TAMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TAMRIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMRIS_TBTORIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TBTORIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMRIS_CBMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CBMRIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMRIS_CBERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CBERIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMRIS_TBMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TBMRIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMRIS_WUERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_WUERIS_BIT*4u))))

#define GPWTM4_BITBANDING_TA_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPWTM4_BITBANDING_TB_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPWTM4_BITBANDING_TW_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnRIS_RTCRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_RTCRIS_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_TnMRIS_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnRIS_WUERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_WUERIS_BIT*4u))))

/* GPTM0 BITBANDING GPTMRIS*/
#define GPWTM5_BITBANDING_GPTMRIS_TATORIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TATORIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMRIS_CAMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CAMRIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMRIS_CAERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CAERIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMRIS_RTCRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_RTCRIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMRIS_TAMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TAMRIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMRIS_TBTORIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TBTORIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMRIS_CBMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CBMRIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMRIS_CBERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_CBERIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMRIS_TBMRIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_TBMRIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMRIS_WUERIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRIS_OFFSET)*32u)+(GPWTM_GPTMRIS_R_WUERIS_BIT*4u))))

#define GPWTM5_BITBANDING_TA_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPWTM5_BITBANDING_TB_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnRIS_R_TnMRIS_BIT*4u))))

#define GPWTM5_BITBANDING_TW_GPTMTnRIS_TnTORIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_TnTORIS_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnRIS_CnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_CnMRIS_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnRIS_RTCRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_RTCRIS_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnRIS_CnERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_CnERIS_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnRIS_TnMRIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_TnMRIS_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnRIS_WUERIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnRIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnRIS_R_WUERIS_BIT*4u))))

/******************************************************************************************
************************************ 8 GPTMMIS *********************************************
******************************************************************************************/

/* GPTM0 GPTMMIS*/
#define GPTM0_BITBANDING_GPTMMIS            (((BITBANDING_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMMIS_OFFSET)*32u))))
#define GPTM0_GPTMMIS                       (((GPTMMIS_TypeDef*)(GPTM0_BASE + GPTM_GPTMMIS_OFFSET )))
#define GPTM0_GPTMMIS_R                     (*((volatile const uint32_t *)(GPTM0_BASE +GPTM_GPTMMIS_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnMIS       (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPTM0_TA_GPTMTnMIS                  (((TA_GPTMMIS_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnMIS_OFFSET )))
#define GPTM0_TA_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnMIS_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnMIS       (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnMIS                  (((TB_GPTMMIS_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnMIS_OFFSET )))
#define GPTM0_TB_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnMIS_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMTnMIS       (((BITBANDING_TW_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPTM0_TW_GPTMTnMIS                  (((TW_GPTMMIS_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMTnMIS_OFFSET )))
#define GPTM0_TW_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMTnMIS_OFFSET)))

/* GPTM1 GPTMMIS*/
#define GPTM1_BITBANDING_GPTMMIS            (((BITBANDING_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMMIS_OFFSET)*32u))))
#define GPTM1_GPTMMIS                       (((GPTMMIS_TypeDef*)(GPTM1_BASE + GPTM_GPTMMIS_OFFSET )))
#define GPTM1_GPTMMIS_R                     (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_GPTMMIS_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnMIS       (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnMIS                  (((TA_GPTMMIS_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnMIS_OFFSET )))
#define GPTM1_TA_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnMIS_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnMIS       (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnMIS                  (((TB_GPTMMIS_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnMIS_OFFSET )))
#define GPTM1_TB_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnMIS_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnMIS       (((BITBANDING_TW_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnMIS                  (((TW_GPTMMIS_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnMIS_OFFSET )))
#define GPTM1_TW_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnMIS_OFFSET)))

/* GPTM1 GPTMMIS*/
#define GPTM1_BITBANDING_GPTMMIS            (((BITBANDING_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMMIS_OFFSET)*32u))))
#define GPTM1_GPTMMIS                       (((GPTMMIS_TypeDef*)(GPTM1_BASE + GPTM_GPTMMIS_OFFSET )))
#define GPTM1_GPTMMIS_R                     (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_GPTMMIS_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnMIS       (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnMIS                  (((TA_GPTMMIS_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnMIS_OFFSET )))
#define GPTM1_TA_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnMIS_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnMIS       (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnMIS                  (((TB_GPTMMIS_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnMIS_OFFSET )))
#define GPTM1_TB_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnMIS_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnMIS       (((BITBANDING_TW_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnMIS                  (((TW_GPTMMIS_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnMIS_OFFSET )))
#define GPTM1_TW_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnMIS_OFFSET)))

/* GPTM2 GPTMMIS*/
#define GPTM2_BITBANDING_GPTMMIS            (((BITBANDING_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMMIS_OFFSET)*32u))))
#define GPTM2_GPTMMIS                       (((GPTMMIS_TypeDef*)(GPTM2_BASE + GPTM_GPTMMIS_OFFSET )))
#define GPTM2_GPTMMIS_R                     (*((volatile const uint32_t *)(GPTM2_BASE +GPTM_GPTMMIS_OFFSET)))

#define GPTM2_BITBANDING_TA_GPTMTnMIS       (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPTM2_TA_GPTMTnMIS                  (((TA_GPTMMIS_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnMIS_OFFSET )))
#define GPTM2_TA_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnMIS_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnMIS       (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnMIS                  (((TB_GPTMMIS_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnMIS_OFFSET )))
#define GPTM2_TB_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnMIS_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMTnMIS       (((BITBANDING_TW_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPTM2_TW_GPTMTnMIS                  (((TW_GPTMMIS_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMTnMIS_OFFSET )))
#define GPTM2_TW_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMTnMIS_OFFSET)))

/* GPTM3 GPTMMIS*/
#define GPTM3_BITBANDING_GPTMMIS            (((BITBANDING_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMMIS_OFFSET)*32u))))
#define GPTM3_GPTMMIS                       (((GPTMMIS_TypeDef*)(GPTM3_BASE + GPTM_GPTMMIS_OFFSET )))
#define GPTM3_GPTMMIS_R                     (*((volatile const uint32_t *)(GPTM3_BASE +GPTM_GPTMMIS_OFFSET)))

#define GPTM3_BITBANDING_TA_GPTMTnMIS       (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPTM3_TA_GPTMTnMIS                  (((TA_GPTMMIS_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnMIS_OFFSET )))
#define GPTM3_TA_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnMIS_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnMIS       (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnMIS                  (((TB_GPTMMIS_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnMIS_OFFSET )))
#define GPTM3_TB_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnMIS_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMTnMIS       (((BITBANDING_TW_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPTM3_TW_GPTMTnMIS                  (((TW_GPTMMIS_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMTnMIS_OFFSET )))
#define GPTM3_TW_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMTnMIS_OFFSET)))

/* GPTM4 GPTMMIS*/
#define GPTM4_BITBANDING_GPTMMIS            (((BITBANDING_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMMIS_OFFSET)*32u))))
#define GPTM4_GPTMMIS                       (((GPTMMIS_TypeDef*)(GPTM4_BASE + GPTM_GPTMMIS_OFFSET )))
#define GPTM4_GPTMMIS_R                     (*((volatile const uint32_t *)(GPTM4_BASE +GPTM_GPTMMIS_OFFSET)))

#define GPTM4_BITBANDING_TA_GPTMTnMIS       (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPTM4_TA_GPTMTnMIS                  (((TA_GPTMMIS_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnMIS_OFFSET )))
#define GPTM4_TA_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnMIS_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnMIS       (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnMIS                  (((TB_GPTMMIS_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnMIS_OFFSET )))
#define GPTM4_TB_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnMIS_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMTnMIS       (((BITBANDING_TW_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPTM4_TW_GPTMTnMIS                  (((TW_GPTMMIS_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMTnMIS_OFFSET )))
#define GPTM4_TW_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMTnMIS_OFFSET)))

/* GPTM5 GPTMMIS*/
#define GPTM5_BITBANDING_GPTMMIS            (((BITBANDING_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMMIS_OFFSET)*32u))))
#define GPTM5_GPTMMIS                       (((GPTMMIS_TypeDef*)(GPTM5_BASE + GPTM_GPTMMIS_OFFSET )))
#define GPTM5_GPTMMIS_R                     (*((volatile const uint32_t *)(GPTM5_BASE +GPTM_GPTMMIS_OFFSET)))

#define GPTM5_BITBANDING_TA_GPTMTnMIS       (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPTM5_TA_GPTMTnMIS                  (((TA_GPTMMIS_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnMIS_OFFSET )))
#define GPTM5_TA_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnMIS_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnMIS       (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnMIS                  (((TB_GPTMMIS_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnMIS_OFFSET )))
#define GPTM5_TB_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnMIS_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMTnMIS       (((BITBANDING_TW_GPTMMIS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPTM5_TW_GPTMTnMIS                  (((TW_GPTMMIS_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMTnMIS_OFFSET )))
#define GPTM5_TW_GPTMTnMIS_R                (*((volatile const uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMTnMIS_OFFSET)))

/* GPWTM0 GPTMMIS*/
#define GPWTM0_BITBANDING_GPTMMIS           (((BITBANDING_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u))))
#define GPWTM0_GPTMMIS                      (((GPTMMIS_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMMIS_OFFSET )))
#define GPWTM0_GPTMMIS_R                    (*((volatile const uint32_t *)(GPWTM0_BASE +GPWTM_GPTMMIS_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnMIS      (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnMIS                 (((TA_GPTMMIS_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnMIS_OFFSET )))
#define GPWTM0_TA_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnMIS_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnMIS      (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnMIS                 (((TB_GPTMMIS_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnMIS_OFFSET )))
#define GPWTM0_TB_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnMIS_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnMIS      (((BITBANDING_TW_GPWTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnMIS                 (((TW_GPWTMMIS_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnMIS_OFFSET )))
#define GPWTM0_TW_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnMIS_OFFSET)))

/* GPWTM1 GPTMMIS*/
#define GPWTM1_BITBANDING_GPTMMIS           (((BITBANDING_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u))))
#define GPWTM1_GPTMMIS                      (((GPTMMIS_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMMIS_OFFSET )))
#define GPWTM1_GPTMMIS_R                    (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_GPTMMIS_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnMIS      (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnMIS                 (((TA_GPTMMIS_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnMIS_OFFSET )))
#define GPWTM1_TA_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnMIS_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnMIS      (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnMIS                 (((TB_GPTMMIS_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnMIS_OFFSET )))
#define GPWTM1_TB_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnMIS_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnMIS      (((BITBANDING_TW_GPWTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnMIS                 (((TW_GPWTMMIS_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnMIS_OFFSET )))
#define GPWTM1_TW_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnMIS_OFFSET)))

/* GPWTM1 GPTMMIS*/
#define GPWTM1_BITBANDING_GPTMMIS           (((BITBANDING_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u))))
#define GPWTM1_GPTMMIS                      (((GPTMMIS_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMMIS_OFFSET )))
#define GPWTM1_GPTMMIS_R                    (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_GPTMMIS_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnMIS      (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnMIS                 (((TA_GPTMMIS_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnMIS_OFFSET )))
#define GPWTM1_TA_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnMIS_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnMIS      (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnMIS                 (((TB_GPTMMIS_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnMIS_OFFSET )))
#define GPWTM1_TB_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnMIS_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnMIS      (((BITBANDING_TW_GPWTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnMIS                 (((TW_GPWTMMIS_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnMIS_OFFSET )))
#define GPWTM1_TW_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnMIS_OFFSET)))

/* GPWTM2 GPTMMIS*/
#define GPWTM2_BITBANDING_GPTMMIS           (((BITBANDING_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u))))
#define GPWTM2_GPTMMIS                      (((GPTMMIS_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMMIS_OFFSET )))
#define GPWTM2_GPTMMIS_R                    (*((volatile const uint32_t *)(GPWTM2_BASE +GPWTM_GPTMMIS_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnMIS      (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnMIS                 (((TA_GPTMMIS_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnMIS_OFFSET )))
#define GPWTM2_TA_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnMIS_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnMIS      (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnMIS                 (((TB_GPTMMIS_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnMIS_OFFSET )))
#define GPWTM2_TB_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnMIS_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnMIS      (((BITBANDING_TW_GPWTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnMIS                 (((TW_GPWTMMIS_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnMIS_OFFSET )))
#define GPWTM2_TW_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnMIS_OFFSET)))

/* GPWTM3 GPTMMIS*/
#define GPWTM3_BITBANDING_GPTMMIS           (((BITBANDING_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u))))
#define GPWTM3_GPTMMIS                      (((GPTMMIS_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMMIS_OFFSET )))
#define GPWTM3_GPTMMIS_R                    (*((volatile const uint32_t *)(GPWTM3_BASE +GPWTM_GPTMMIS_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnMIS      (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnMIS                 (((TA_GPTMMIS_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnMIS_OFFSET )))
#define GPWTM3_TA_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnMIS_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnMIS      (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnMIS                 (((TB_GPTMMIS_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnMIS_OFFSET )))
#define GPWTM3_TB_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnMIS_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnMIS      (((BITBANDING_TW_GPWTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnMIS                 (((TW_GPWTMMIS_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnMIS_OFFSET )))
#define GPWTM3_TW_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnMIS_OFFSET)))

/* GPWTM4 GPTMMIS*/
#define GPWTM4_BITBANDING_GPTMMIS           (((BITBANDING_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u))))
#define GPWTM4_GPTMMIS                      (((GPTMMIS_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMMIS_OFFSET )))
#define GPWTM4_GPTMMIS_R                    (*((volatile const uint32_t *)(GPWTM4_BASE +GPWTM_GPTMMIS_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnMIS      (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnMIS                 (((TA_GPTMMIS_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnMIS_OFFSET )))
#define GPWTM4_TA_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnMIS_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnMIS      (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnMIS                 (((TB_GPTMMIS_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnMIS_OFFSET )))
#define GPWTM4_TB_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnMIS_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnMIS      (((BITBANDING_TW_GPWTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnMIS                 (((TW_GPWTMMIS_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnMIS_OFFSET )))
#define GPWTM4_TW_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnMIS_OFFSET)))

/* GPWTM5 GPTMMIS*/
#define GPWTM5_BITBANDING_GPTMMIS           (((BITBANDING_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u))))
#define GPWTM5_GPTMMIS                      (((GPTMMIS_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMMIS_OFFSET )))
#define GPWTM5_GPTMMIS_R                    (*((volatile const uint32_t *)(GPWTM5_BASE +GPWTM_GPTMMIS_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnMIS      (((BITBANDING_TA_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnMIS                 (((TA_GPTMMIS_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnMIS_OFFSET )))
#define GPWTM5_TA_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnMIS_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnMIS      (((BITBANDING_TB_GPTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnMIS                 (((TB_GPTMMIS_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnMIS_OFFSET )))
#define GPWTM5_TB_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnMIS_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnMIS      (((BITBANDING_TW_GPWTMMIS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnMIS                 (((TW_GPWTMMIS_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnMIS_OFFSET )))
#define GPWTM5_TW_GPTMTnMIS_R               (*((volatile const uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnMIS_OFFSET)))

/*----------*/
#define GPTM_GPTMMIS_R_TATOMIS_MASK                 ((uint32_t)0x00000001u)
#define GPTM_GPTMMIS_R_TATOMIS_BIT                  (0u)
#define GPTM_GPTMMIS_R_TATOMIS_NOOCCUR              ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_R_TATOMIS_OCCUR                ((uint32_t)0x00000001u)

#define GPTM_GPTMMIS_TATOMIS_MASK                   ((uint32_t)0x00000001u)
#define GPTM_GPTMMIS_TATOMIS_NOOCCUR                ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_TATOMIS_OCCUR                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMMIS_R_CAMMIS_MASK                  ((uint32_t)0x00000002u)
#define GPTM_GPTMMIS_R_CAMMIS_BIT                   (1u)
#define GPTM_GPTMMIS_R_CAMMIS_NOOCCUR               ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_R_CAMMIS_OCCUR                 ((uint32_t)0x00000002u)

#define GPTM_GPTMMIS_CAMMIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMMIS_CAMMIS_NOOCCUR                 ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_CAMMIS_OCCUR                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMMIS_R_CAEMIS_MASK                  ((uint32_t)0x00000004u)
#define GPTM_GPTMMIS_R_CAEMIS_BIT                   (2u)
#define GPTM_GPTMMIS_R_CAEMIS_NOOCCUR               ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_R_CAEMIS_OCCUR                 ((uint32_t)0x00000004u)

#define GPTM_GPTMMIS_CAEMIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMMIS_CAEMIS_NOOCCUR                 ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_CAEMIS_OCCUR                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMMIS_R_RTCMIS_MASK                  ((uint32_t)0x00000008u)
#define GPTM_GPTMMIS_R_RTCMIS_BIT                   (3u)
#define GPTM_GPTMMIS_R_RTCMIS_NOOCCUR               ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_R_RTCMIS_OCCUR                 ((uint32_t)0x00000008u)

#define GPTM_GPTMMIS_RTCMIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMMIS_RTCMIS_NOOCCUR                 ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_RTCMIS_OCCUR                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMMIS_R_TAMMIS_MASK                  ((uint32_t)0x00000010u)
#define GPTM_GPTMMIS_R_TAMMIS_BIT                   (4u)
#define GPTM_GPTMMIS_R_TAMMIS_NOOCCUR               ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_R_TAMMIS_OCCUR                 ((uint32_t)0x00000010u)

#define GPTM_GPTMMIS_TAMMIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMMIS_TAMMIS_NOOCCUR                 ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_TAMMIS_OCCUR                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMMIS_R_TBTOMIS_MASK                 ((uint32_t)0x00000100u)
#define GPTM_GPTMMIS_R_TBTOMIS_BIT                  (8u)
#define GPTM_GPTMMIS_R_TBTOMIS_NOOCCUR              ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_R_TBTOMIS_OCCUR                ((uint32_t)0x00000100u)

#define GPTM_GPTMMIS_TBTOMIS_MASK                   ((uint32_t)0x00000001u)
#define GPTM_GPTMMIS_TBTOMIS_NOOCCUR                ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_TBTOMIS_OCCUR                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMMIS_R_CBMMIS_MASK                  ((uint32_t)0x00000200u)
#define GPTM_GPTMMIS_R_CBMMIS_BIT                   (9u)
#define GPTM_GPTMMIS_R_CBMMIS_NOOCCUR               ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_R_CBMMIS_OCCUR                 ((uint32_t)0x00000200u)

#define GPTM_GPTMMIS_CBMMIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMMIS_CBMMIS_NOOCCUR                 ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_CBMMIS_OCCUR                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMMIS_R_CBEMIS_MASK                  ((uint32_t)0x00000400u)
#define GPTM_GPTMMIS_R_CBEMIS_BIT                   (10u)
#define GPTM_GPTMMIS_R_CBEMIS_NOOCCUR               ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_R_CBEMIS_OCCUR                 ((uint32_t)0x00000400u)

#define GPTM_GPTMMIS_CBEMIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMMIS_CBEMIS_NOOCCUR                 ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_CBEMIS_OCCUR                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMMIS_R_TBMMIS_MASK                  ((uint32_t)0x00000800u)
#define GPTM_GPTMMIS_R_TBMMIS_BIT                   (11u)
#define GPTM_GPTMMIS_R_TBMMIS_NOOCCUR               ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_R_TBMMIS_OCCUR                 ((uint32_t)0x00000800u)

#define GPTM_GPTMMIS_TBMMIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMMIS_TBMMIS_NOOCCUR                 ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_TBMMIS_OCCUR                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMMIS_R_WUEMIS_MASK                  ((uint32_t)0x00010000u)
#define GPTM_GPTMMIS_R_WUEMIS_BIT                   (16u)
#define GPTM_GPTMMIS_R_WUEMIS_NOOCCUR               ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_R_WUEMIS_OCCUR                 ((uint32_t)0x00010000u)

#define GPTM_GPTMMIS_WUEMIS_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMMIS_WUEMIS_NOOCCUR                 ((uint32_t)0x00000000u)
#define GPTM_GPTMMIS_WUEMIS_OCCUR                   ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPTM_TA_GPTMTnMIS_R_TnTOMIS_MASK            ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnMIS_R_TnTOMIS_BIT             (0u)
#define GPTM_TA_GPTMTnMIS_R_TnTOMIS_NOOCCUR         ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnMIS_R_TnTOMIS_OCCUR           ((uint32_t)0x00000001u)

#define GPTM_TA_GPTMTnMIS_TnTOMIS_MASK              ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnMIS_TnTOMIS_NOOCCUR           ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnMIS_TnTOMIS_OCCUR             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnMIS_R_CnMMIS_MASK             ((uint32_t)0x00000002u)
#define GPTM_TA_GPTMTnMIS_R_CnMMIS_BIT              (1u)
#define GPTM_TA_GPTMTnMIS_R_CnMMIS_NOOCCUR          ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnMIS_R_CnMMIS_OCCUR            ((uint32_t)0x00000002u)

#define GPTM_TA_GPTMTnMIS_CnMMIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnMIS_CnMMIS_NOOCCUR            ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnMIS_CnMMIS_OCCUR              ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnMIS_R_CnEMIS_MASK             ((uint32_t)0x00000004u)
#define GPTM_TA_GPTMTnMIS_R_CnEMIS_BIT              (2u)
#define GPTM_TA_GPTMTnMIS_R_CnEMIS_NOOCCUR          ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnMIS_R_CnEMIS_OCCUR            ((uint32_t)0x00000004u)

#define GPTM_TA_GPTMTnMIS_CnEMIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnMIS_CnEMIS_NOOCCUR            ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnMIS_CnEMIS_OCCUR              ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnMIS_R_TnMMIS_MASK             ((uint32_t)0x00000010u)
#define GPTM_TA_GPTMTnMIS_R_TnMMIS_BIT              (4u)
#define GPTM_TA_GPTMTnMIS_R_TnMMIS_NOOCCUR          ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnMIS_R_TnMMIS_OCCUR            ((uint32_t)0x00000010u)

#define GPTM_TA_GPTMTnMIS_TnMMIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnMIS_TnMMIS_NOOCCUR            ((uint32_t)0x00000000u)
#define GPTM_TA_GPTMTnMIS_TnMMIS_OCCUR              ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMIS_R_TnTOMIS_MASK              ((uint32_t)0x00000100u)
#define GPTM_TB_GPTMTnMIS_R_TnTOMIS_BIT               (8u)
#define GPTM_TB_GPTMTnMIS_R_TnTOMIS_DIS               ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMIS_R_TnTOMIS_EN                ((uint32_t)0x00000100u)

#define GPTM_TB_GPTMTnMIS_TnTOMIS_MASK                ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMIS_TnTOMIS_DIS                 ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMIS_TnTOMIS_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMIS_R_CnMMIS_MASK               ((uint32_t)0x00000200u)
#define GPTM_TB_GPTMTnMIS_R_CnMMIS_BIT                (9u)
#define GPTM_TB_GPTMTnMIS_R_CnMMIS_DIS                ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMIS_R_CnMMIS_EN                 ((uint32_t)0x00000200u)

#define GPTM_TB_GPTMTnMIS_CnMMIS_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMIS_CnMMIS_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMIS_CnMMIS_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMIS_R_CnEMIS_MASK               ((uint32_t)0x00000400u)
#define GPTM_TB_GPTMTnMIS_R_CnEMIS_BIT                (10u)
#define GPTM_TB_GPTMTnMIS_R_CnEMIS_DIS                ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMIS_R_CnEMIS_EN                 ((uint32_t)0x00000400u)

#define GPTM_TB_GPTMTnMIS_CnEMIS_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMIS_CnEMIS_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMIS_CnEMIS_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMIS_R_TnMMIS_MASK               ((uint32_t)0x00000800u)
#define GPTM_TB_GPTMTnMIS_R_TnMMIS_BIT                (11u)
#define GPTM_TB_GPTMTnMIS_R_TnMMIS_DIS                ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMIS_R_TnMMIS_EN                 ((uint32_t)0x00000800u)

#define GPTM_TB_GPTMTnMIS_TnMMIS_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnMIS_TnMMIS_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnMIS_TnMMIS_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnMIS_R_TnTOMIS_MASK            ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnMIS_R_TnTOMIS_BIT             (0u)
#define GPTM_TW_GPTMTnMIS_R_TnTOMIS_NOOCCUR         ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnMIS_R_TnTOMIS_OCCUR           ((uint32_t)0x00000001u)

#define GPTM_TW_GPTMTnMIS_TnTOMIS_MASK              ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnMIS_TnTOMIS_NOOCCUR           ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnMIS_TnTOMIS_OCCUR             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnMIS_R_CnMMIS_MASK             ((uint32_t)0x00000002u)
#define GPTM_TW_GPTMTnMIS_R_CnMMIS_BIT              (1u)
#define GPTM_TW_GPTMTnMIS_R_CnMMIS_NOOCCUR          ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnMIS_R_CnMMIS_OCCUR            ((uint32_t)0x00000002u)

#define GPTM_TW_GPTMTnMIS_CnMMIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnMIS_CnMMIS_NOOCCUR            ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnMIS_CnMMIS_OCCUR              ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnMIS_R_CnEMIS_MASK             ((uint32_t)0x00000004u)
#define GPTM_TW_GPTMTnMIS_R_CnEMIS_BIT              (2u)
#define GPTM_TW_GPTMTnMIS_R_CnEMIS_NOOCCUR          ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnMIS_R_CnEMIS_OCCUR            ((uint32_t)0x00000004u)

#define GPTM_TW_GPTMTnMIS_CnEMIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnMIS_CnEMIS_NOOCCUR            ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnMIS_CnEMIS_OCCUR              ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnMIS_R_RTCMIS_MASK             ((uint32_t)0x00000008u)
#define GPTM_TW_GPTMTnMIS_R_RTCMIS_BIT              (3u)
#define GPTM_TW_GPTMTnMIS_R_RTCMIS_NOOCCUR          ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnMIS_R_RTCMIS_OCCUR            ((uint32_t)0x00000008u)

#define GPTM_TW_GPTMTnMIS_RTCMIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnMIS_RTCMIS_NOOCCUR            ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnMIS_RTCMIS_OCCUR              ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnMIS_R_TnMMIS_MASK             ((uint32_t)0x00000010u)
#define GPTM_TW_GPTMTnMIS_R_TnMMIS_BIT              (4u)
#define GPTM_TW_GPTMTnMIS_R_TnMMIS_NOOCCUR          ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnMIS_R_TnMMIS_OCCUR            ((uint32_t)0x00000010u)

#define GPTM_TW_GPTMTnMIS_TnMMIS_MASK               ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnMIS_TnMMIS_NOOCCUR            ((uint32_t)0x00000000u)
#define GPTM_TW_GPTMTnMIS_TnMMIS_OCCUR              ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMMIS_R_TATOMIS_MASK                ((uint32_t)0x00000001u)
#define GPWTM_GPTMMIS_R_TATOMIS_BIT                 (0u)
#define GPWTM_GPTMMIS_R_TATOMIS_NOOCCUR             ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_R_TATOMIS_OCCUR               ((uint32_t)0x00000001u)

#define GPWTM_GPTMMIS_TATOMIS_MASK                  ((uint32_t)0x00000001u)
#define GPWTM_GPTMMIS_TATOMIS_NOOCCUR               ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_TATOMIS_OCCUR                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMMIS_R_CAMMIS_MASK                 ((uint32_t)0x00000002u)
#define GPWTM_GPTMMIS_R_CAMMIS_BIT                  (1u)
#define GPWTM_GPTMMIS_R_CAMMIS_NOOCCUR              ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_R_CAMMIS_OCCUR                ((uint32_t)0x00000002u)

#define GPWTM_GPTMMIS_CAMMIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMMIS_CAMMIS_NOOCCUR                ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_CAMMIS_OCCUR                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMMIS_R_CAEMIS_MASK                 ((uint32_t)0x00000004u)
#define GPWTM_GPTMMIS_R_CAEMIS_BIT                  (2u)
#define GPWTM_GPTMMIS_R_CAEMIS_NOOCCUR              ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_R_CAEMIS_OCCUR                ((uint32_t)0x00000004u)

#define GPWTM_GPTMMIS_CAEMIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMMIS_CAEMIS_NOOCCUR                ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_CAEMIS_OCCUR                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMMIS_R_RTCMIS_MASK                 ((uint32_t)0x00000008u)
#define GPWTM_GPTMMIS_R_RTCMIS_BIT                  (3u)
#define GPWTM_GPTMMIS_R_RTCMIS_NOOCCUR              ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_R_RTCMIS_OCCUR                ((uint32_t)0x00000008u)

#define GPWTM_GPTMMIS_RTCMIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMMIS_RTCMIS_NOOCCUR                ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_RTCMIS_OCCUR                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMMIS_R_TAMMIS_MASK                 ((uint32_t)0x00000010u)
#define GPWTM_GPTMMIS_R_TAMMIS_BIT                  (4u)
#define GPWTM_GPTMMIS_R_TAMMIS_NOOCCUR              ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_R_TAMMIS_OCCUR                ((uint32_t)0x00000010u)

#define GPWTM_GPTMMIS_TAMMIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMMIS_TAMMIS_NOOCCUR                ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_TAMMIS_OCCUR                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMMIS_R_TBTOMIS_MASK                ((uint32_t)0x00000100u)
#define GPWTM_GPTMMIS_R_TBTOMIS_BIT                 (8u)
#define GPWTM_GPTMMIS_R_TBTOMIS_NOOCCUR             ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_R_TBTOMIS_OCCUR               ((uint32_t)0x00000100u)

#define GPWTM_GPTMMIS_TBTOMIS_MASK                  ((uint32_t)0x00000001u)
#define GPWTM_GPTMMIS_TBTOMIS_NOOCCUR               ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_TBTOMIS_OCCUR                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMMIS_R_CBMMIS_MASK                 ((uint32_t)0x00000200u)
#define GPWTM_GPTMMIS_R_CBMMIS_BIT                  (9u)
#define GPWTM_GPTMMIS_R_CBMMIS_NOOCCUR              ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_R_CBMMIS_OCCUR                ((uint32_t)0x00000200u)

#define GPWTM_GPTMMIS_CBMMIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMMIS_CBMMIS_NOOCCUR                ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_CBMMIS_OCCUR                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMMIS_R_CBEMIS_MASK                 ((uint32_t)0x00000400u)
#define GPWTM_GPTMMIS_R_CBEMIS_BIT                  (10u)
#define GPWTM_GPTMMIS_R_CBEMIS_NOOCCUR              ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_R_CBEMIS_OCCUR                ((uint32_t)0x00000400u)

#define GPWTM_GPTMMIS_CBEMIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMMIS_CBEMIS_NOOCCUR                ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_CBEMIS_OCCUR                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMMIS_R_TBMMIS_MASK                 ((uint32_t)0x00000800u)
#define GPWTM_GPTMMIS_R_TBMMIS_BIT                  (11u)
#define GPWTM_GPTMMIS_R_TBMMIS_NOOCCUR              ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_R_TBMMIS_OCCUR                ((uint32_t)0x00000800u)

#define GPWTM_GPTMMIS_TBMMIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMMIS_TBMMIS_NOOCCUR                ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_TBMMIS_OCCUR                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMMIS_R_WUEMIS_MASK                 ((uint32_t)0x00010000u)
#define GPWTM_GPTMMIS_R_WUEMIS_BIT                  (16u)
#define GPWTM_GPTMMIS_R_WUEMIS_NOOCCUR              ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_R_WUEMIS_OCCUR                ((uint32_t)0x00010000u)

#define GPWTM_GPTMMIS_WUEMIS_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMMIS_WUEMIS_NOOCCUR                ((uint32_t)0x00000000u)
#define GPWTM_GPTMMIS_WUEMIS_OCCUR                  ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPWTM_TA_GPTMTnMIS_R_TnTOMIS_MASK           ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnMIS_R_TnTOMIS_BIT            (0u)
#define GPWTM_TA_GPTMTnMIS_R_TnTOMIS_NOOCCUR        ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnMIS_R_TnTOMIS_OCCUR          ((uint32_t)0x00000001u)

#define GPWTM_TA_GPTMTnMIS_TnTOMIS_MASK             ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnMIS_TnTOMIS_NOOCCUR          ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnMIS_TnTOMIS_OCCUR            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnMIS_R_CnMMIS_MASK            ((uint32_t)0x00000002u)
#define GPWTM_TA_GPTMTnMIS_R_CnMMIS_BIT             (1u)
#define GPWTM_TA_GPTMTnMIS_R_CnMMIS_NOOCCUR         ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnMIS_R_CnMMIS_OCCUR           ((uint32_t)0x00000002u)

#define GPWTM_TA_GPTMTnMIS_CnMMIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnMIS_CnMMIS_NOOCCUR           ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnMIS_CnMMIS_OCCUR             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnMIS_R_CnEMIS_MASK            ((uint32_t)0x00000004u)
#define GPWTM_TA_GPTMTnMIS_R_CnEMIS_BIT             (2u)
#define GPWTM_TA_GPTMTnMIS_R_CnEMIS_NOOCCUR         ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnMIS_R_CnEMIS_OCCUR           ((uint32_t)0x00000004u)

#define GPWTM_TA_GPTMTnMIS_CnEMIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnMIS_CnEMIS_NOOCCUR           ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnMIS_CnEMIS_OCCUR             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnMIS_R_TnMMIS_MASK            ((uint32_t)0x00000010u)
#define GPWTM_TA_GPTMTnMIS_R_TnMMIS_BIT             (4u)
#define GPWTM_TA_GPTMTnMIS_R_TnMMIS_NOOCCUR         ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnMIS_R_TnMMIS_OCCUR           ((uint32_t)0x00000010u)

#define GPWTM_TA_GPTMTnMIS_TnMMIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnMIS_TnMMIS_NOOCCUR           ((uint32_t)0x00000000u)
#define GPWTM_TA_GPTMTnMIS_TnMMIS_OCCUR             ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPWTM_TB_GPTMTnMIS_R_TnTOMIS_MASK              ((uint32_t)0x00000100u)
#define GPWTM_TB_GPTMTnMIS_R_TnTOMIS_BIT               (8u)
#define GPWTM_TB_GPTMTnMIS_R_TnTOMIS_DIS               ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMIS_R_TnTOMIS_EN                ((uint32_t)0x00000100u)

#define GPWTM_TB_GPTMTnMIS_TnTOMIS_MASK                ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMIS_TnTOMIS_DIS                 ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMIS_TnTOMIS_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMIS_R_CnMMIS_MASK               ((uint32_t)0x00000200u)
#define GPWTM_TB_GPTMTnMIS_R_CnMMIS_BIT                (9u)
#define GPWTM_TB_GPTMTnMIS_R_CnMMIS_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMIS_R_CnMMIS_EN                 ((uint32_t)0x00000200u)

#define GPWTM_TB_GPTMTnMIS_CnMMIS_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMIS_CnMMIS_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMIS_CnMMIS_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMIS_R_CnEMIS_MASK               ((uint32_t)0x00000400u)
#define GPWTM_TB_GPTMTnMIS_R_CnEMIS_BIT                (10u)
#define GPWTM_TB_GPTMTnMIS_R_CnEMIS_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMIS_R_CnEMIS_EN                 ((uint32_t)0x00000400u)

#define GPWTM_TB_GPTMTnMIS_CnEMIS_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMIS_CnEMIS_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMIS_CnEMIS_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMIS_R_TnMMIS_MASK               ((uint32_t)0x00000800u)
#define GPWTM_TB_GPTMTnMIS_R_TnMMIS_BIT                (11u)
#define GPWTM_TB_GPTMTnMIS_R_TnMMIS_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMIS_R_TnMMIS_EN                 ((uint32_t)0x00000800u)

#define GPWTM_TB_GPTMTnMIS_TnMMIS_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnMIS_TnMMIS_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnMIS_TnMMIS_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnMIS_R_TnTOMIS_MASK           ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnMIS_R_TnTOMIS_BIT            (0u)
#define GPWTM_TW_GPTMTnMIS_R_TnTOMIS_NOOCCUR        ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnMIS_R_TnTOMIS_OCCUR          ((uint32_t)0x00000001u)

#define GPWTM_TW_GPTMTnMIS_TnTOMIS_MASK             ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnMIS_TnTOMIS_NOOCCUR          ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnMIS_TnTOMIS_OCCUR            ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnMIS_R_CnMMIS_MASK            ((uint32_t)0x00000002u)
#define GPWTM_TW_GPTMTnMIS_R_CnMMIS_BIT             (1u)
#define GPWTM_TW_GPTMTnMIS_R_CnMMIS_NOOCCUR         ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnMIS_R_CnMMIS_OCCUR           ((uint32_t)0x00000002u)

#define GPWTM_TW_GPTMTnMIS_CnMMIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnMIS_CnMMIS_NOOCCUR           ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnMIS_CnMMIS_OCCUR             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnMIS_R_CnEMIS_MASK            ((uint32_t)0x00000004u)
#define GPWTM_TW_GPTMTnMIS_R_CnEMIS_BIT             (2u)
#define GPWTM_TW_GPTMTnMIS_R_CnEMIS_NOOCCUR         ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnMIS_R_CnEMIS_OCCUR           ((uint32_t)0x00000004u)

#define GPWTM_TW_GPTMTnMIS_CnEMIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnMIS_CnEMIS_NOOCCUR           ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnMIS_CnEMIS_OCCUR             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnMIS_R_RTCMIS_MASK            ((uint32_t)0x00000008u)
#define GPWTM_TW_GPTMTnMIS_R_RTCMIS_BIT             (3u)
#define GPWTM_TW_GPTMTnMIS_R_RTCMIS_NOOCCUR         ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnMIS_R_RTCMIS_OCCUR           ((uint32_t)0x00000008u)

#define GPWTM_TW_GPTMTnMIS_RTCMIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnMIS_RTCMIS_NOOCCUR           ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnMIS_RTCMIS_OCCUR             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnMIS_R_TnMMIS_MASK            ((uint32_t)0x00000010u)
#define GPWTM_TW_GPTMTnMIS_R_TnMMIS_BIT             (4u)
#define GPWTM_TW_GPTMTnMIS_R_TnMMIS_NOOCCUR         ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnMIS_R_TnMMIS_OCCUR           ((uint32_t)0x00000010u)

#define GPWTM_TW_GPTMTnMIS_TnMMIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnMIS_TnMMIS_NOOCCUR           ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnMIS_TnMMIS_OCCUR             ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnMIS_R_WUEMIS_MASK            ((uint32_t)0x00010000u)
#define GPWTM_TW_GPTMTnMIS_R_WUEMIS_BIT             (16u)
#define GPWTM_TW_GPTMTnMIS_R_WUEMIS_NOOCCUR         ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnMIS_R_WUEMIS_OCCUR           ((uint32_t)0x00010000u)

#define GPWTM_TW_GPTMTnMIS_WUEMIS_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnMIS_WUEMIS_NOOCCUR           ((uint32_t)0x00000000u)
#define GPWTM_TW_GPTMTnMIS_WUEMIS_OCCUR             ((uint32_t)0x00000001u)
/*----------*/

/* GPTM0 BITBANDING GPTMMIS*/
#define GPTM0_BITBANDING_GPTMMIS_TATOMIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TATOMIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMMIS_CAMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CAMMIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMMIS_CAEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CAEMIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMMIS_RTCMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_RTCMIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMMIS_TAMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TAMMIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMMIS_TBTOMIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TBTOMIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMMIS_CBMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CBMMIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMMIS_CBEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CBEMIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMMIS_TBMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TBMMIS_BIT*4u))))
#define GPTM0_BITBANDING_GPTMMIS_WUEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_WUEMIS_BIT*4u))))

#define GPTM0_BITBANDING_TA_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPTM0_BITBANDING_TB_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPTM0_BITBANDING_TW_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMIS_RTCMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_RTCMIS_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_TnMMIS_BIT*4u))))

/* GPTM1 BITBANDING GPTMMIS*/
#define GPTM1_BITBANDING_GPTMMIS_TATOMIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TATOMIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMMIS_CAMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CAMMIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMMIS_CAEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CAEMIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMMIS_RTCMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_RTCMIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMMIS_TAMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TAMMIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMMIS_TBTOMIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TBTOMIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMMIS_CBMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CBMMIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMMIS_CBEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CBEMIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMMIS_TBMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TBMMIS_BIT*4u))))
#define GPTM1_BITBANDING_GPTMMIS_WUEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_WUEMIS_BIT*4u))))

#define GPTM1_BITBANDING_TA_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPTM1_BITBANDING_TB_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPTM1_BITBANDING_TW_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMIS_RTCMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_RTCMIS_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_TnMMIS_BIT*4u))))

/* GPTM2 BITBANDING GPTMMIS*/
#define GPTM2_BITBANDING_GPTMMIS_TATOMIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TATOMIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMMIS_CAMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CAMMIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMMIS_CAEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CAEMIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMMIS_RTCMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_RTCMIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMMIS_TAMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TAMMIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMMIS_TBTOMIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TBTOMIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMMIS_CBMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CBMMIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMMIS_CBEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CBEMIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMMIS_TBMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TBMMIS_BIT*4u))))
#define GPTM2_BITBANDING_GPTMMIS_WUEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_WUEMIS_BIT*4u))))

#define GPTM2_BITBANDING_TA_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPTM2_BITBANDING_TB_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPTM2_BITBANDING_TW_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMIS_RTCMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_RTCMIS_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_TnMMIS_BIT*4u))))

/* GPTM3 BITBANDING GPTMMIS*/
#define GPTM3_BITBANDING_GPTMMIS_TATOMIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TATOMIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMMIS_CAMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CAMMIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMMIS_CAEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CAEMIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMMIS_RTCMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_RTCMIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMMIS_TAMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TAMMIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMMIS_TBTOMIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TBTOMIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMMIS_CBMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CBMMIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMMIS_CBEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CBEMIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMMIS_TBMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TBMMIS_BIT*4u))))
#define GPTM3_BITBANDING_GPTMMIS_WUEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_WUEMIS_BIT*4u))))

#define GPTM3_BITBANDING_TA_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPTM3_BITBANDING_TB_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPTM3_BITBANDING_TW_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMIS_RTCMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_RTCMIS_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_TnMMIS_BIT*4u))))

/* GPTM4 BITBANDING GPTMMIS*/
#define GPTM4_BITBANDING_GPTMMIS_TATOMIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TATOMIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMMIS_CAMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CAMMIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMMIS_CAEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CAEMIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMMIS_RTCMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_RTCMIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMMIS_TAMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TAMMIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMMIS_TBTOMIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TBTOMIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMMIS_CBMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CBMMIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMMIS_CBEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CBEMIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMMIS_TBMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TBMMIS_BIT*4u))))
#define GPTM4_BITBANDING_GPTMMIS_WUEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_WUEMIS_BIT*4u))))

#define GPTM4_BITBANDING_TA_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPTM4_BITBANDING_TB_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPTM4_BITBANDING_TW_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMIS_RTCMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_RTCMIS_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_TnMMIS_BIT*4u))))

/* GPTM5 BITBANDING GPTMMIS*/
#define GPTM5_BITBANDING_GPTMMIS_TATOMIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TATOMIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMMIS_CAMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CAMMIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMMIS_CAEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CAEMIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMMIS_RTCMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_RTCMIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMMIS_TAMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TAMMIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMMIS_TBTOMIS             (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TBTOMIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMMIS_CBMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CBMMIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMMIS_CBEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_CBEMIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMMIS_TBMMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_TBMMIS_BIT*4u))))
#define GPTM5_BITBANDING_GPTMMIS_WUEMIS              (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMMIS_OFFSET)*32u)+(GPTM_GPTMMIS_R_WUEMIS_BIT*4u))))

#define GPTM5_BITBANDING_TA_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPTM_TA_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPTM5_BITBANDING_TB_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPTM_TB_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPTM5_BITBANDING_TW_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMIS_RTCMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_RTCMIS_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPTM_TW_GPTMTnMIS_R_TnMMIS_BIT*4u))))

/* GPTM0 BITBANDING GPTMMIS*/
#define GPWTM0_BITBANDING_GPTMMIS_TATOMIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TATOMIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMMIS_CAMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CAMMIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMMIS_CAEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CAEMIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMMIS_RTCMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_RTCMIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMMIS_TAMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TAMMIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMMIS_TBTOMIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TBTOMIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMMIS_CBMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CBMMIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMMIS_CBEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CBEMIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMMIS_TBMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TBMMIS_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMMIS_WUEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_WUEMIS_BIT*4u))))

#define GPWTM0_BITBANDING_TA_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPWTM0_BITBANDING_TB_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPWTM0_BITBANDING_TW_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMIS_RTCMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_RTCMIS_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_TnMMIS_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnMIS_WUEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_WUEMIS_BIT*4u))))

/* GPTM0 BITBANDING GPTMMIS*/
#define GPWTM1_BITBANDING_GPTMMIS_TATOMIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TATOMIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMMIS_CAMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CAMMIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMMIS_CAEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CAEMIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMMIS_RTCMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_RTCMIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMMIS_TAMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TAMMIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMMIS_TBTOMIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TBTOMIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMMIS_CBMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CBMMIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMMIS_CBEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CBEMIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMMIS_TBMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TBMMIS_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMMIS_WUEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_WUEMIS_BIT*4u))))

#define GPWTM1_BITBANDING_TA_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPWTM1_BITBANDING_TB_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPWTM1_BITBANDING_TW_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMIS_RTCMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_RTCMIS_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_TnMMIS_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnMIS_WUEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_WUEMIS_BIT*4u))))

/* GPTM0 BITBANDING GPTMMIS*/
#define GPWTM2_BITBANDING_GPTMMIS_TATOMIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TATOMIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMMIS_CAMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CAMMIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMMIS_CAEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CAEMIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMMIS_RTCMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_RTCMIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMMIS_TAMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TAMMIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMMIS_TBTOMIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TBTOMIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMMIS_CBMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CBMMIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMMIS_CBEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CBEMIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMMIS_TBMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TBMMIS_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMMIS_WUEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_WUEMIS_BIT*4u))))

#define GPWTM2_BITBANDING_TA_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPWTM2_BITBANDING_TB_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPWTM2_BITBANDING_TW_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMIS_RTCMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_RTCMIS_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_TnMMIS_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnMIS_WUEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_WUEMIS_BIT*4u))))

/* GPTM0 BITBANDING GPTMMIS*/
#define GPWTM3_BITBANDING_GPTMMIS_TATOMIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TATOMIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMMIS_CAMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CAMMIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMMIS_CAEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CAEMIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMMIS_RTCMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_RTCMIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMMIS_TAMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TAMMIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMMIS_TBTOMIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TBTOMIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMMIS_CBMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CBMMIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMMIS_CBEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CBEMIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMMIS_TBMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TBMMIS_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMMIS_WUEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_WUEMIS_BIT*4u))))

#define GPWTM3_BITBANDING_TA_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPWTM3_BITBANDING_TB_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPWTM3_BITBANDING_TW_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMIS_RTCMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_RTCMIS_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_TnMMIS_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnMIS_WUEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_WUEMIS_BIT*4u))))

/* GPTM0 BITBANDING GPTMMIS*/
#define GPWTM4_BITBANDING_GPTMMIS_TATOMIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TATOMIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMMIS_CAMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CAMMIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMMIS_CAEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CAEMIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMMIS_RTCMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_RTCMIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMMIS_TAMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TAMMIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMMIS_TBTOMIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TBTOMIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMMIS_CBMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CBMMIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMMIS_CBEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CBEMIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMMIS_TBMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TBMMIS_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMMIS_WUEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_WUEMIS_BIT*4u))))

#define GPWTM4_BITBANDING_TA_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPWTM4_BITBANDING_TB_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPWTM4_BITBANDING_TW_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMIS_RTCMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_RTCMIS_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_TnMMIS_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnMIS_WUEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_WUEMIS_BIT*4u))))

/* GPTM0 BITBANDING GPTMMIS*/
#define GPWTM5_BITBANDING_GPTMMIS_TATOMIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TATOMIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMMIS_CAMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CAMMIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMMIS_CAEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CAEMIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMMIS_RTCMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_RTCMIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMMIS_TAMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TAMMIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMMIS_TBTOMIS             (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TBTOMIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMMIS_CBMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CBMMIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMMIS_CBEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_CBEMIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMMIS_TBMMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_TBMMIS_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMMIS_WUEMIS              (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMMIS_OFFSET)*32u)+(GPWTM_GPTMMIS_R_WUEMIS_BIT*4u))))

#define GPWTM5_BITBANDING_TA_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TA_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPWTM5_BITBANDING_TB_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TB_GPTMTnMIS_R_TnMMIS_BIT*4u))))

#define GPWTM5_BITBANDING_TW_GPTMTnMIS_TnTOMIS        (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_TnTOMIS_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMIS_CnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_CnMMIS_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMIS_RTCMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_RTCMIS_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMIS_CnEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_CnEMIS_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMIS_TnMMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_TnMMIS_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnMIS_WUEMIS         (*((volatile const uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMIS_OFFSET)*32u)+(GPWTM_TW_GPTMTnMIS_R_WUEMIS_BIT*4u))))


/******************************************************************************************
************************************ 9 GPTMICR *********************************************
******************************************************************************************/

/* GPTM0 GPTMICR*/
#define GPTM0_BITBANDING_GPTMICR            (((BITBANDING_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMICR_OFFSET)*32u))))
#define GPTM0_GPTMICR                       (((GPTMICR_TypeDef*)(GPTM0_BASE + GPTM_GPTMICR_OFFSET )))
#define GPTM0_GPTMICR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMICR_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnICR       (((BITBANDING_TA_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPTM0_TA_GPTMTnICR                  (((TA_GPTMICR_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnICR_OFFSET )))
#define GPTM0_TA_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnICR_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnICR       (((BITBANDING_TB_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnICR                  (((TB_GPTMICR_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnICR_OFFSET )))
#define GPTM0_TB_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnICR_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMTnICR       (((BITBANDING_TW_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPTM0_TW_GPTMTnICR                  (((TW_GPTMICR_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMTnICR_OFFSET )))
#define GPTM0_TW_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMTnICR_OFFSET)))

/* GPTM1 GPTMICR*/
#define GPTM1_BITBANDING_GPTMICR            (((BITBANDING_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMICR_OFFSET)*32u))))
#define GPTM1_GPTMICR                       (((GPTMICR_TypeDef*)(GPTM1_BASE + GPTM_GPTMICR_OFFSET )))
#define GPTM1_GPTMICR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMICR_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnICR       (((BITBANDING_TA_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnICR                  (((TA_GPTMICR_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnICR_OFFSET )))
#define GPTM1_TA_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnICR_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnICR       (((BITBANDING_TB_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnICR                  (((TB_GPTMICR_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnICR_OFFSET )))
#define GPTM1_TB_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnICR_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnICR       (((BITBANDING_TW_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnICR                  (((TW_GPTMICR_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnICR_OFFSET )))
#define GPTM1_TW_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnICR_OFFSET)))

/* GPTM1 GPTMICR*/
#define GPTM1_BITBANDING_GPTMICR            (((BITBANDING_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMICR_OFFSET)*32u))))
#define GPTM1_GPTMICR                       (((GPTMICR_TypeDef*)(GPTM1_BASE + GPTM_GPTMICR_OFFSET )))
#define GPTM1_GPTMICR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMICR_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnICR       (((BITBANDING_TA_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnICR                  (((TA_GPTMICR_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnICR_OFFSET )))
#define GPTM1_TA_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnICR_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnICR       (((BITBANDING_TB_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnICR                  (((TB_GPTMICR_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnICR_OFFSET )))
#define GPTM1_TB_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnICR_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnICR       (((BITBANDING_TW_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnICR                  (((TW_GPTMICR_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnICR_OFFSET )))
#define GPTM1_TW_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnICR_OFFSET)))

/* GPTM2 GPTMICR*/
#define GPTM2_BITBANDING_GPTMICR            (((BITBANDING_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMICR_OFFSET)*32u))))
#define GPTM2_GPTMICR                       (((GPTMICR_TypeDef*)(GPTM2_BASE + GPTM_GPTMICR_OFFSET )))
#define GPTM2_GPTMICR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMICR_OFFSET)))

#define GPTM2_BITBANDING_TA_GPTMTnICR       (((BITBANDING_TA_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPTM2_TA_GPTMTnICR                  (((TA_GPTMICR_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnICR_OFFSET )))
#define GPTM2_TA_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnICR_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnICR       (((BITBANDING_TB_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnICR                  (((TB_GPTMICR_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnICR_OFFSET )))
#define GPTM2_TB_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnICR_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMTnICR       (((BITBANDING_TW_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPTM2_TW_GPTMTnICR                  (((TW_GPTMICR_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMTnICR_OFFSET )))
#define GPTM2_TW_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMTnICR_OFFSET)))

/* GPTM3 GPTMICR*/
#define GPTM3_BITBANDING_GPTMICR            (((BITBANDING_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMICR_OFFSET)*32u))))
#define GPTM3_GPTMICR                       (((GPTMICR_TypeDef*)(GPTM3_BASE + GPTM_GPTMICR_OFFSET )))
#define GPTM3_GPTMICR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMICR_OFFSET)))

#define GPTM3_BITBANDING_TA_GPTMTnICR       (((BITBANDING_TA_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPTM3_TA_GPTMTnICR                  (((TA_GPTMICR_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnICR_OFFSET )))
#define GPTM3_TA_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnICR_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnICR       (((BITBANDING_TB_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnICR                  (((TB_GPTMICR_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnICR_OFFSET )))
#define GPTM3_TB_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnICR_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMTnICR       (((BITBANDING_TW_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPTM3_TW_GPTMTnICR                  (((TW_GPTMICR_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMTnICR_OFFSET )))
#define GPTM3_TW_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMTnICR_OFFSET)))

/* GPTM4 GPTMICR*/
#define GPTM4_BITBANDING_GPTMICR            (((BITBANDING_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMICR_OFFSET)*32u))))
#define GPTM4_GPTMICR                       (((GPTMICR_TypeDef*)(GPTM4_BASE + GPTM_GPTMICR_OFFSET )))
#define GPTM4_GPTMICR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMICR_OFFSET)))

#define GPTM4_BITBANDING_TA_GPTMTnICR       (((BITBANDING_TA_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPTM4_TA_GPTMTnICR                  (((TA_GPTMICR_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnICR_OFFSET )))
#define GPTM4_TA_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnICR_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnICR       (((BITBANDING_TB_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnICR                  (((TB_GPTMICR_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnICR_OFFSET )))
#define GPTM4_TB_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnICR_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMTnICR       (((BITBANDING_TW_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPTM4_TW_GPTMTnICR                  (((TW_GPTMICR_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMTnICR_OFFSET )))
#define GPTM4_TW_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMTnICR_OFFSET)))

/* GPTM5 GPTMICR*/
#define GPTM5_BITBANDING_GPTMICR            (((BITBANDING_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMICR_OFFSET)*32u))))
#define GPTM5_GPTMICR                       (((GPTMICR_TypeDef*)(GPTM5_BASE + GPTM_GPTMICR_OFFSET )))
#define GPTM5_GPTMICR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMICR_OFFSET)))

#define GPTM5_BITBANDING_TA_GPTMTnICR       (((BITBANDING_TA_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPTM5_TA_GPTMTnICR                  (((TA_GPTMICR_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnICR_OFFSET )))
#define GPTM5_TA_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnICR_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnICR       (((BITBANDING_TB_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnICR                  (((TB_GPTMICR_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnICR_OFFSET )))
#define GPTM5_TB_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnICR_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMTnICR       (((BITBANDING_TW_GPTMICR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPTM5_TW_GPTMTnICR                  (((TW_GPTMICR_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMTnICR_OFFSET )))
#define GPTM5_TW_GPTMTnICR_R                (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMTnICR_OFFSET)))

/* GPWTM0 GPTMICR*/
#define GPWTM0_BITBANDING_GPTMICR           (((BITBANDING_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMICR_OFFSET)*32u))))
#define GPWTM0_GPTMICR                      (((GPTMICR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMICR_OFFSET )))
#define GPWTM0_GPTMICR_R                    (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMICR_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnICR      (((BITBANDING_TA_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnICR                 (((TA_GPTMICR_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnICR_OFFSET )))
#define GPWTM0_TA_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnICR_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnICR      (((BITBANDING_TB_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnICR                 (((TB_GPTMICR_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnICR_OFFSET )))
#define GPWTM0_TB_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnICR_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnICR      (((BITBANDING_TW_GPWTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnICR                 (((TW_GPWTMICR_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnICR_OFFSET )))
#define GPWTM0_TW_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnICR_OFFSET)))

/* GPWTM1 GPTMICR*/
#define GPWTM1_BITBANDING_GPTMICR           (((BITBANDING_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMICR_OFFSET)*32u))))
#define GPWTM1_GPTMICR                      (((GPTMICR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMICR_OFFSET )))
#define GPWTM1_GPTMICR_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMICR_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnICR      (((BITBANDING_TA_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnICR                 (((TA_GPTMICR_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnICR_OFFSET )))
#define GPWTM1_TA_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnICR_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnICR      (((BITBANDING_TB_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnICR                 (((TB_GPTMICR_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnICR_OFFSET )))
#define GPWTM1_TB_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnICR_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnICR      (((BITBANDING_TW_GPWTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnICR                 (((TW_GPWTMICR_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnICR_OFFSET )))
#define GPWTM1_TW_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnICR_OFFSET)))

/* GPWTM1 GPTMICR*/
#define GPWTM1_BITBANDING_GPTMICR           (((BITBANDING_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMICR_OFFSET)*32u))))
#define GPWTM1_GPTMICR                      (((GPTMICR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMICR_OFFSET )))
#define GPWTM1_GPTMICR_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMICR_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnICR      (((BITBANDING_TA_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnICR                 (((TA_GPTMICR_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnICR_OFFSET )))
#define GPWTM1_TA_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnICR_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnICR      (((BITBANDING_TB_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnICR                 (((TB_GPTMICR_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnICR_OFFSET )))
#define GPWTM1_TB_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnICR_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnICR      (((BITBANDING_TW_GPWTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnICR                 (((TW_GPWTMICR_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnICR_OFFSET )))
#define GPWTM1_TW_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnICR_OFFSET)))

/* GPWTM2 GPTMICR*/
#define GPWTM2_BITBANDING_GPTMICR           (((BITBANDING_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMICR_OFFSET)*32u))))
#define GPWTM2_GPTMICR                      (((GPTMICR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMICR_OFFSET )))
#define GPWTM2_GPTMICR_R                    (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMICR_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnICR      (((BITBANDING_TA_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnICR                 (((TA_GPTMICR_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnICR_OFFSET )))
#define GPWTM2_TA_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnICR_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnICR      (((BITBANDING_TB_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnICR                 (((TB_GPTMICR_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnICR_OFFSET )))
#define GPWTM2_TB_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnICR_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnICR      (((BITBANDING_TW_GPWTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnICR                 (((TW_GPWTMICR_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnICR_OFFSET )))
#define GPWTM2_TW_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnICR_OFFSET)))

/* GPWTM3 GPTMICR*/
#define GPWTM3_BITBANDING_GPTMICR           (((BITBANDING_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMICR_OFFSET)*32u))))
#define GPWTM3_GPTMICR                      (((GPTMICR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMICR_OFFSET )))
#define GPWTM3_GPTMICR_R                    (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMICR_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnICR      (((BITBANDING_TA_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnICR                 (((TA_GPTMICR_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnICR_OFFSET )))
#define GPWTM3_TA_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnICR_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnICR      (((BITBANDING_TB_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnICR                 (((TB_GPTMICR_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnICR_OFFSET )))
#define GPWTM3_TB_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnICR_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnICR      (((BITBANDING_TW_GPWTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnICR                 (((TW_GPWTMICR_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnICR_OFFSET )))
#define GPWTM3_TW_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnICR_OFFSET)))

/* GPWTM4 GPTMICR*/
#define GPWTM4_BITBANDING_GPTMICR           (((BITBANDING_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMICR_OFFSET)*32u))))
#define GPWTM4_GPTMICR                      (((GPTMICR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMICR_OFFSET )))
#define GPWTM4_GPTMICR_R                    (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMICR_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnICR      (((BITBANDING_TA_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnICR                 (((TA_GPTMICR_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnICR_OFFSET )))
#define GPWTM4_TA_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnICR_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnICR      (((BITBANDING_TB_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnICR                 (((TB_GPTMICR_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnICR_OFFSET )))
#define GPWTM4_TB_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnICR_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnICR      (((BITBANDING_TW_GPWTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnICR                 (((TW_GPWTMICR_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnICR_OFFSET )))
#define GPWTM4_TW_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnICR_OFFSET)))

/* GPWTM5 GPTMICR*/
#define GPWTM5_BITBANDING_GPTMICR           (((BITBANDING_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMICR_OFFSET)*32u))))
#define GPWTM5_GPTMICR                      (((GPTMICR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMICR_OFFSET )))
#define GPWTM5_GPTMICR_R                    (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMICR_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnICR      (((BITBANDING_TA_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnICR                 (((TA_GPTMICR_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnICR_OFFSET )))
#define GPWTM5_TA_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnICR_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnICR      (((BITBANDING_TB_GPTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnICR                 (((TB_GPTMICR_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnICR_OFFSET )))
#define GPWTM5_TB_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnICR_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnICR      (((BITBANDING_TW_GPWTMICR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnICR                 (((TW_GPWTMICR_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnICR_OFFSET )))
#define GPWTM5_TW_GPTMTnICR_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnICR_OFFSET)))

/*----------*/
#define GPTM_GPTMICR_R_TATOCINT_MASK                    ((uint32_t)0x00000001u)
#define GPTM_GPTMICR_R_TATOCINT_BIT                     (0u)
#define GPTM_GPTMICR_R_TATOCINT_CLEAR                   ((uint32_t)0x00000001u)

#define GPTM_GPTMICR_TATOCINT_MASK                      ((uint32_t)0x00000001u)
#define GPTM_GPTMICR_TATOCINT_CLEAR                     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMICR_R_CAMCINT_MASK                     ((uint32_t)0x00000002u)
#define GPTM_GPTMICR_R_CAMCINT_BIT                      (1u)
#define GPTM_GPTMICR_R_CAMCINT_CLEAR                    ((uint32_t)0x00000002u)

#define GPTM_GPTMICR_CAMCINT_MASK                       ((uint32_t)0x00000001u)
#define GPTM_GPTMICR_CAMCINT_CLEAR                      ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMICR_R_CAECINT_MASK                     ((uint32_t)0x00000004u)
#define GPTM_GPTMICR_R_CAECINT_BIT                      (2u)
#define GPTM_GPTMICR_R_CAECINT_CLEAR                    ((uint32_t)0x00000004u)

#define GPTM_GPTMICR_CAECINT_MASK                       ((uint32_t)0x00000001u)
#define GPTM_GPTMICR_CAECINT_CLEAR                      ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMICR_R_RTCCINT_MASK                     ((uint32_t)0x00000008u)
#define GPTM_GPTMICR_R_RTCCINT_BIT                      (3u)
#define GPTM_GPTMICR_R_RTCCINT_CLEAR                    ((uint32_t)0x00000008u)

#define GPTM_GPTMICR_RTCCINT_MASK                       ((uint32_t)0x00000001u)
#define GPTM_GPTMICR_RTCCINT_CLEAR                      ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMICR_R_TAMCINT_MASK                     ((uint32_t)0x00000010u)
#define GPTM_GPTMICR_R_TAMCINT_BIT                      (4u)
#define GPTM_GPTMICR_R_TAMCINT_CLEAR                    ((uint32_t)0x00000010u)

#define GPTM_GPTMICR_TAMCINT_MASK                       ((uint32_t)0x00000001u)
#define GPTM_GPTMICR_TAMCINT_CLEAR                      ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMICR_R_TBTOCINT_MASK                    ((uint32_t)0x00000100u)
#define GPTM_GPTMICR_R_TBTOCINT_BIT                     (8u)
#define GPTM_GPTMICR_R_TBTOCINT_CLEAR                   ((uint32_t)0x00000100u)

#define GPTM_GPTMICR_TBTOCINT_MASK                      ((uint32_t)0x00000001u)
#define GPTM_GPTMICR_TBTOCINT_CLEAR                     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMICR_R_CBMCINT_MASK                     ((uint32_t)0x00000200u)
#define GPTM_GPTMICR_R_CBMCINT_BIT                      (9u)
#define GPTM_GPTMICR_R_CBMCINT_CLEAR                    ((uint32_t)0x00000200u)

#define GPTM_GPTMICR_CBMCINT_MASK                       ((uint32_t)0x00000001u)
#define GPTM_GPTMICR_CBMCINT_CLEAR                      ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMICR_R_CBECINT_MASK                     ((uint32_t)0x00000400u)
#define GPTM_GPTMICR_R_CBECINT_BIT                      (10u)
#define GPTM_GPTMICR_R_CBECINT_CLEAR                    ((uint32_t)0x00000400u)

#define GPTM_GPTMICR_CBECINT_MASK                       ((uint32_t)0x00000001u)
#define GPTM_GPTMICR_CBECINT_CLEAR                      ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMICR_R_TBMCINT_MASK                     ((uint32_t)0x00000800u)
#define GPTM_GPTMICR_R_TBMCINT_BIT                      (11u)
#define GPTM_GPTMICR_R_TBMCINT_CLEAR                    ((uint32_t)0x00000800u)

#define GPTM_GPTMICR_TBMCINT_MASK                       ((uint32_t)0x00000001u)
#define GPTM_GPTMICR_TBMCINT_CLEAR                      ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_GPTMICR_R_WUECINT_MASK                     ((uint32_t)0x00010000u)
#define GPTM_GPTMICR_R_WUECINT_BIT                      (16u)
#define GPTM_GPTMICR_R_WUECINT_CLEAR                    ((uint32_t)0x00010000u)

#define GPTM_GPTMICR_WUECINT_MASK                       ((uint32_t)0x00000001u)
#define GPTM_GPTMICR_WUECINT_CLEAR                      ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPTM_TA_GPTMTnICR_R_TnTOCINT_MASK               ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnICR_R_TnTOCINT_BIT                (0u)
#define GPTM_TA_GPTMTnICR_R_TnTOCINT_CLEAR              ((uint32_t)0x00000001u)

#define GPTM_TA_GPTMTnICR_TnTOCINT_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnICR_TnTOCINT_CLEAR                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnICR_R_CnMCINT_MASK                ((uint32_t)0x00000002u)
#define GPTM_TA_GPTMTnICR_R_CnMCINT_BIT                 (1u)
#define GPTM_TA_GPTMTnICR_R_CnMCINT_CLEAR               ((uint32_t)0x00000002u)

#define GPTM_TA_GPTMTnICR_CnMCINT_MASK                  ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnICR_CnMCINT_CLEAR                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnICR_R_CnECINT_MASK                ((uint32_t)0x00000004u)
#define GPTM_TA_GPTMTnICR_R_CnECINT_BIT                 (2u)
#define GPTM_TA_GPTMTnICR_R_CnECINT_CLEAR               ((uint32_t)0x00000004u)

#define GPTM_TA_GPTMTnICR_CnECINT_MASK                  ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnICR_CnECINT_CLEAR                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnICR_R_TnMCINT_MASK                ((uint32_t)0x00000010u)
#define GPTM_TA_GPTMTnICR_R_TnMCINT_BIT                 (4u)
#define GPTM_TA_GPTMTnICR_R_TnMCINT_CLEAR               ((uint32_t)0x00000010u)

#define GPTM_TA_GPTMTnICR_TnMCINT_MASK                  ((uint32_t)0x00000001u)
#define GPTM_TA_GPTMTnICR_TnMCINT_CLEAR                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnICR_R_TnTOCINT_MASK              ((uint32_t)0x00000100u)
#define GPTM_TB_GPTMTnICR_R_TnTOCINT_BIT               (8u)
#define GPTM_TB_GPTMTnICR_R_TnTOCINT_DIS               ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnICR_R_TnTOCINT_EN                ((uint32_t)0x00000100u)

#define GPTM_TB_GPTMTnICR_TnTOCINT_MASK                ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnICR_TnTOCINT_DIS                 ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnICR_TnTOCINT_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnICR_R_CnMCINT_MASK               ((uint32_t)0x00000200u)
#define GPTM_TB_GPTMTnICR_R_CnMCINT_BIT                (9u)
#define GPTM_TB_GPTMTnICR_R_CnMCINT_DIS                ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnICR_R_CnMCINT_EN                 ((uint32_t)0x00000200u)

#define GPTM_TB_GPTMTnICR_CnMCINT_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnICR_CnMCINT_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnICR_CnMCINT_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnICR_R_CnECINT_MASK               ((uint32_t)0x00000400u)
#define GPTM_TB_GPTMTnICR_R_CnECINT_BIT                (10u)
#define GPTM_TB_GPTMTnICR_R_CnECINT_DIS                ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnICR_R_CnECINT_EN                 ((uint32_t)0x00000400u)

#define GPTM_TB_GPTMTnICR_CnECINT_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnICR_CnECINT_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnICR_CnECINT_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnICR_R_TnMCINT_MASK               ((uint32_t)0x00000800u)
#define GPTM_TB_GPTMTnICR_R_TnMCINT_BIT                (11u)
#define GPTM_TB_GPTMTnICR_R_TnMCINT_DIS                ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnICR_R_TnMCINT_EN                 ((uint32_t)0x00000800u)

#define GPTM_TB_GPTMTnICR_TnMCINT_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TB_GPTMTnICR_TnMCINT_DIS                  ((uint32_t)0x00000000u)
#define GPTM_TB_GPTMTnICR_TnMCINT_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnICR_R_TnTOCINT_MASK               ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnICR_R_TnTOCINT_BIT                (0u)
#define GPTM_TW_GPTMTnICR_R_TnTOCINT_CLEAR              ((uint32_t)0x00000001u)

#define GPTM_TW_GPTMTnICR_TnTOCINT_MASK                 ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnICR_TnTOCINT_CLEAR                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnICR_R_CnMCINT_MASK                ((uint32_t)0x00000002u)
#define GPTM_TW_GPTMTnICR_R_CnMCINT_BIT                 (1u)
#define GPTM_TW_GPTMTnICR_R_CnMCINT_CLEAR               ((uint32_t)0x00000002u)

#define GPTM_TW_GPTMTnICR_CnMCINT_MASK                  ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnICR_CnMCINT_CLEAR                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnICR_R_CnECINT_MASK                ((uint32_t)0x00000004u)
#define GPTM_TW_GPTMTnICR_R_CnECINT_BIT                 (2u)
#define GPTM_TW_GPTMTnICR_R_CnECINT_CLEAR               ((uint32_t)0x00000004u)

#define GPTM_TW_GPTMTnICR_CnECINT_MASK                  ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnICR_CnECINT_CLEAR                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnICR_R_RTCCINT_MASK                ((uint32_t)0x00000008u)
#define GPTM_TW_GPTMTnICR_R_RTCCINT_BIT                 (3u)
#define GPTM_TW_GPTMTnICR_R_RTCCINT_CLEAR               ((uint32_t)0x00000008u)

#define GPTM_TW_GPTMTnICR_RTCCINT_MASK                  ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnICR_RTCCINT_CLEAR                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnICR_R_TnMCINT_MASK                ((uint32_t)0x00000010u)
#define GPTM_TW_GPTMTnICR_R_TnMCINT_BIT                 (4u)
#define GPTM_TW_GPTMTnICR_R_TnMCINT_CLEAR               ((uint32_t)0x00000010u)

#define GPTM_TW_GPTMTnICR_TnMCINT_MASK                  ((uint32_t)0x00000001u)
#define GPTM_TW_GPTMTnICR_TnMCINT_CLEAR                 ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMICR_R_TATOCINT_MASK                   ((uint32_t)0x00000001u)
#define GPWTM_GPTMICR_R_TATOCINT_BIT                    (0u)
#define GPWTM_GPTMICR_R_TATOCINT_CLEAR                  ((uint32_t)0x00000001u)

#define GPWTM_GPTMICR_TATOCINT_MASK                     ((uint32_t)0x00000001u)
#define GPWTM_GPTMICR_TATOCINT_CLEAR                    ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMICR_R_CAMCINT_MASK                    ((uint32_t)0x00000002u)
#define GPWTM_GPTMICR_R_CAMCINT_BIT                     (1u)
#define GPWTM_GPTMICR_R_CAMCINT_CLEAR                   ((uint32_t)0x00000002u)

#define GPWTM_GPTMICR_CAMCINT_MASK                      ((uint32_t)0x00000001u)
#define GPWTM_GPTMICR_CAMCINT_CLEAR                     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMICR_R_CAECINT_MASK                    ((uint32_t)0x00000004u)
#define GPWTM_GPTMICR_R_CAECINT_BIT                     (2u)
#define GPWTM_GPTMICR_R_CAECINT_CLEAR                   ((uint32_t)0x00000004u)

#define GPWTM_GPTMICR_CAECINT_MASK                      ((uint32_t)0x00000001u)
#define GPWTM_GPTMICR_CAECINT_CLEAR                     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMICR_R_RTCCINT_MASK                    ((uint32_t)0x00000008u)
#define GPWTM_GPTMICR_R_RTCCINT_BIT                     (3u)
#define GPWTM_GPTMICR_R_RTCCINT_CLEAR                   ((uint32_t)0x00000008u)

#define GPWTM_GPTMICR_RTCCINT_MASK                      ((uint32_t)0x00000001u)
#define GPWTM_GPTMICR_RTCCINT_CLEAR                     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMICR_R_TAMCINT_MASK                    ((uint32_t)0x00000010u)
#define GPWTM_GPTMICR_R_TAMCINT_BIT                     (4u)
#define GPWTM_GPTMICR_R_TAMCINT_CLEAR                   ((uint32_t)0x00000010u)

#define GPWTM_GPTMICR_TAMCINT_MASK                      ((uint32_t)0x00000001u)
#define GPWTM_GPTMICR_TAMCINT_CLEAR                     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMICR_R_TBTOCINT_MASK                   ((uint32_t)0x00000100u)
#define GPWTM_GPTMICR_R_TBTOCINT_BIT                    (8u)
#define GPWTM_GPTMICR_R_TBTOCINT_CLEAR                  ((uint32_t)0x00000100u)

#define GPWTM_GPTMICR_TBTOCINT_MASK                     ((uint32_t)0x00000001u)
#define GPWTM_GPTMICR_TBTOCINT_CLEAR                    ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMICR_R_CBMCINT_MASK                    ((uint32_t)0x00000200u)
#define GPWTM_GPTMICR_R_CBMCINT_BIT                     (9u)
#define GPWTM_GPTMICR_R_CBMCINT_CLEAR                   ((uint32_t)0x00000200u)

#define GPWTM_GPTMICR_CBMCINT_MASK                      ((uint32_t)0x00000001u)
#define GPWTM_GPTMICR_CBMCINT_CLEAR                     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMICR_R_CBECINT_MASK                    ((uint32_t)0x00000400u)
#define GPWTM_GPTMICR_R_CBECINT_BIT                     (10u)
#define GPWTM_GPTMICR_R_CBECINT_CLEAR                   ((uint32_t)0x00000400u)

#define GPWTM_GPTMICR_CBECINT_MASK                      ((uint32_t)0x00000001u)
#define GPWTM_GPTMICR_CBECINT_CLEAR                     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMICR_R_TBMCINT_MASK                    ((uint32_t)0x00000800u)
#define GPWTM_GPTMICR_R_TBMCINT_BIT                     (11u)
#define GPWTM_GPTMICR_R_TBMCINT_CLEAR                   ((uint32_t)0x00000800u)

#define GPWTM_GPTMICR_TBMCINT_MASK                      ((uint32_t)0x00000001u)
#define GPWTM_GPTMICR_TBMCINT_CLEAR                     ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_GPTMICR_R_WUECINT_MASK                    ((uint32_t)0x00010000u)
#define GPWTM_GPTMICR_R_WUECINT_BIT                     (16u)
#define GPWTM_GPTMICR_R_WUECINT_CLEAR                   ((uint32_t)0x00010000u)

#define GPWTM_GPTMICR_WUECINT_MASK                      ((uint32_t)0x00000001u)
#define GPWTM_GPTMICR_WUECINT_CLEAR                     ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPWTM_TA_GPTMTnICR_R_TnTOCINT_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnICR_R_TnTOCINT_BIT               (0u)
#define GPWTM_TA_GPTMTnICR_R_TnTOCINT_CLEAR             ((uint32_t)0x00000001u)

#define GPWTM_TA_GPTMTnICR_TnTOCINT_MASK                ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnICR_TnTOCINT_CLEAR               ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnICR_R_CnMCINT_MASK               ((uint32_t)0x00000002u)
#define GPWTM_TA_GPTMTnICR_R_CnMCINT_BIT                (1u)
#define GPWTM_TA_GPTMTnICR_R_CnMCINT_CLEAR              ((uint32_t)0x00000002u)

#define GPWTM_TA_GPTMTnICR_CnMCINT_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnICR_CnMCINT_CLEAR                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnICR_R_CnECINT_MASK               ((uint32_t)0x00000004u)
#define GPWTM_TA_GPTMTnICR_R_CnECINT_BIT                (2u)
#define GPWTM_TA_GPTMTnICR_R_CnECINT_CLEAR              ((uint32_t)0x00000004u)

#define GPWTM_TA_GPTMTnICR_CnECINT_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnICR_CnECINT_CLEAR                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnICR_R_TnMCINT_MASK               ((uint32_t)0x00000010u)
#define GPWTM_TA_GPTMTnICR_R_TnMCINT_BIT                (4u)
#define GPWTM_TA_GPTMTnICR_R_TnMCINT_CLEAR              ((uint32_t)0x00000010u)

#define GPWTM_TA_GPTMTnICR_TnMCINT_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TA_GPTMTnICR_TnMCINT_CLEAR                ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPWTM_TB_GPTMTnICR_R_TnTOCINT_MASK              ((uint32_t)0x00000100u)
#define GPWTM_TB_GPTMTnICR_R_TnTOCINT_BIT               (8u)
#define GPWTM_TB_GPTMTnICR_R_TnTOCINT_DIS               ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnICR_R_TnTOCINT_EN                ((uint32_t)0x00000100u)

#define GPWTM_TB_GPTMTnICR_TnTOCINT_MASK                ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnICR_TnTOCINT_DIS                 ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnICR_TnTOCINT_EN                  ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnICR_R_CnMCINT_MASK               ((uint32_t)0x00000200u)
#define GPWTM_TB_GPTMTnICR_R_CnMCINT_BIT                (9u)
#define GPWTM_TB_GPTMTnICR_R_CnMCINT_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnICR_R_CnMCINT_EN                 ((uint32_t)0x00000200u)

#define GPWTM_TB_GPTMTnICR_CnMCINT_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnICR_CnMCINT_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnICR_CnMCINT_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnICR_R_CnECINT_MASK               ((uint32_t)0x00000400u)
#define GPWTM_TB_GPTMTnICR_R_CnECINT_BIT                (10u)
#define GPWTM_TB_GPTMTnICR_R_CnECINT_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnICR_R_CnECINT_EN                 ((uint32_t)0x00000400u)

#define GPWTM_TB_GPTMTnICR_CnECINT_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnICR_CnECINT_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnICR_CnECINT_EN                   ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnICR_R_TnMCINT_MASK               ((uint32_t)0x00000800u)
#define GPWTM_TB_GPTMTnICR_R_TnMCINT_BIT                (11u)
#define GPWTM_TB_GPTMTnICR_R_TnMCINT_DIS                ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnICR_R_TnMCINT_EN                 ((uint32_t)0x00000800u)

#define GPWTM_TB_GPTMTnICR_TnMCINT_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TB_GPTMTnICR_TnMCINT_DIS                  ((uint32_t)0x00000000u)
#define GPWTM_TB_GPTMTnICR_TnMCINT_EN                   ((uint32_t)0x00000001u)
/*----------*/


/*----------*/
#define GPWTM_TW_GPTMTnICR_R_TnTOCINT_MASK              ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnICR_R_TnTOCINT_BIT               (0u)
#define GPWTM_TW_GPTMTnICR_R_TnTOCINT_CLEAR             ((uint32_t)0x00000001u)

#define GPWTM_TW_GPTMTnICR_TnTOCINT_MASK                ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnICR_TnTOCINT_CLEAR               ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnICR_R_CnMCINT_MASK               ((uint32_t)0x00000002u)
#define GPWTM_TW_GPTMTnICR_R_CnMCINT_BIT                (1u)
#define GPWTM_TW_GPTMTnICR_R_CnMCINT_CLEAR              ((uint32_t)0x00000002u)

#define GPWTM_TW_GPTMTnICR_CnMCINT_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnICR_CnMCINT_CLEAR                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnICR_R_CnECINT_MASK               ((uint32_t)0x00000004u)
#define GPWTM_TW_GPTMTnICR_R_CnECINT_BIT                (2u)
#define GPWTM_TW_GPTMTnICR_R_CnECINT_CLEAR              ((uint32_t)0x00000004u)

#define GPWTM_TW_GPTMTnICR_CnECINT_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnICR_CnECINT_CLEAR                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnICR_R_RTCCINT_MASK               ((uint32_t)0x00000008u)
#define GPWTM_TW_GPTMTnICR_R_RTCCINT_BIT                (3u)
#define GPWTM_TW_GPTMTnICR_R_RTCCINT_CLEAR              ((uint32_t)0x00000008u)

#define GPWTM_TW_GPTMTnICR_RTCCINT_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnICR_RTCCINT_CLEAR                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnICR_R_TnMCINT_MASK               ((uint32_t)0x00000010u)
#define GPWTM_TW_GPTMTnICR_R_TnMCINT_BIT                (4u)
#define GPWTM_TW_GPTMTnICR_R_TnMCINT_CLEAR              ((uint32_t)0x00000010u)

#define GPWTM_TW_GPTMTnICR_TnMCINT_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnICR_TnMCINT_CLEAR                ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnICR_R_WUECINT_MASK               ((uint32_t)0x00010000u)
#define GPWTM_TW_GPTMTnICR_R_WUECINT_BIT                (16u)
#define GPWTM_TW_GPTMTnICR_R_WUECINT_CLEAR              ((uint32_t)0x00010000u)

#define GPWTM_TW_GPTMTnICR_WUECINT_MASK                 ((uint32_t)0x00000001u)
#define GPWTM_TW_GPTMTnICR_WUECINT_CLEAR                ((uint32_t)0x00000001u)
/*----------*/

/* GPTM0 BITBANDING GPTMICR*/
#define GPTM0_BITBANDING_GPTMICR_TATOCINT             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TATOCINT_BIT*4u))))
#define GPTM0_BITBANDING_GPTMICR_CAMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CAMCINT_BIT*4u))))
#define GPTM0_BITBANDING_GPTMICR_CAECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CAECINT_BIT*4u))))
#define GPTM0_BITBANDING_GPTMICR_RTCCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_RTCCINT_BIT*4u))))
#define GPTM0_BITBANDING_GPTMICR_TAMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TAMCINT_BIT*4u))))
#define GPTM0_BITBANDING_GPTMICR_TBTOCINT             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TBTOCINT_BIT*4u))))
#define GPTM0_BITBANDING_GPTMICR_CBMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CBMCINT_BIT*4u))))
#define GPTM0_BITBANDING_GPTMICR_CBECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CBECINT_BIT*4u))))
#define GPTM0_BITBANDING_GPTMICR_TBMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TBMCINT_BIT*4u))))
#define GPTM0_BITBANDING_GPTMICR_WUECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_WUECINT_BIT*4u))))

#define GPTM0_BITBANDING_TA_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM0_BITBANDING_TA_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPTM0_BITBANDING_TB_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM0_BITBANDING_TB_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPTM0_BITBANDING_TW_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnICR_RTCCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_RTCCINT_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM0_BITBANDING_TW_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_TnMCINT_BIT*4u))))

/* GPTM1 BITBANDING GPTMICR*/
#define GPTM1_BITBANDING_GPTMICR_TATOCINT             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TATOCINT_BIT*4u))))
#define GPTM1_BITBANDING_GPTMICR_CAMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CAMCINT_BIT*4u))))
#define GPTM1_BITBANDING_GPTMICR_CAECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CAECINT_BIT*4u))))
#define GPTM1_BITBANDING_GPTMICR_RTCCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_RTCCINT_BIT*4u))))
#define GPTM1_BITBANDING_GPTMICR_TAMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TAMCINT_BIT*4u))))
#define GPTM1_BITBANDING_GPTMICR_TBTOCINT             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TBTOCINT_BIT*4u))))
#define GPTM1_BITBANDING_GPTMICR_CBMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CBMCINT_BIT*4u))))
#define GPTM1_BITBANDING_GPTMICR_CBECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CBECINT_BIT*4u))))
#define GPTM1_BITBANDING_GPTMICR_TBMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TBMCINT_BIT*4u))))
#define GPTM1_BITBANDING_GPTMICR_WUECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_WUECINT_BIT*4u))))

#define GPTM1_BITBANDING_TA_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM1_BITBANDING_TA_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPTM1_BITBANDING_TB_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM1_BITBANDING_TB_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPTM1_BITBANDING_TW_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnICR_RTCCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_RTCCINT_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM1_BITBANDING_TW_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_TnMCINT_BIT*4u))))

/* GPTM2 BITBANDING GPTMICR*/
#define GPTM2_BITBANDING_GPTMICR_TATOCINT             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TATOCINT_BIT*4u))))
#define GPTM2_BITBANDING_GPTMICR_CAMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CAMCINT_BIT*4u))))
#define GPTM2_BITBANDING_GPTMICR_CAECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CAECINT_BIT*4u))))
#define GPTM2_BITBANDING_GPTMICR_RTCCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_RTCCINT_BIT*4u))))
#define GPTM2_BITBANDING_GPTMICR_TAMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TAMCINT_BIT*4u))))
#define GPTM2_BITBANDING_GPTMICR_TBTOCINT             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TBTOCINT_BIT*4u))))
#define GPTM2_BITBANDING_GPTMICR_CBMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CBMCINT_BIT*4u))))
#define GPTM2_BITBANDING_GPTMICR_CBECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CBECINT_BIT*4u))))
#define GPTM2_BITBANDING_GPTMICR_TBMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TBMCINT_BIT*4u))))
#define GPTM2_BITBANDING_GPTMICR_WUECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_WUECINT_BIT*4u))))

#define GPTM2_BITBANDING_TA_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM2_BITBANDING_TA_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPTM2_BITBANDING_TB_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM2_BITBANDING_TB_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPTM2_BITBANDING_TW_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnICR_RTCCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_RTCCINT_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM2_BITBANDING_TW_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_TnMCINT_BIT*4u))))

/* GPTM3 BITBANDING GPTMICR*/
#define GPTM3_BITBANDING_GPTMICR_TATOCINT             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TATOCINT_BIT*4u))))
#define GPTM3_BITBANDING_GPTMICR_CAMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CAMCINT_BIT*4u))))
#define GPTM3_BITBANDING_GPTMICR_CAECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CAECINT_BIT*4u))))
#define GPTM3_BITBANDING_GPTMICR_RTCCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_RTCCINT_BIT*4u))))
#define GPTM3_BITBANDING_GPTMICR_TAMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TAMCINT_BIT*4u))))
#define GPTM3_BITBANDING_GPTMICR_TBTOCINT             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TBTOCINT_BIT*4u))))
#define GPTM3_BITBANDING_GPTMICR_CBMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CBMCINT_BIT*4u))))
#define GPTM3_BITBANDING_GPTMICR_CBECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CBECINT_BIT*4u))))
#define GPTM3_BITBANDING_GPTMICR_TBMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TBMCINT_BIT*4u))))
#define GPTM3_BITBANDING_GPTMICR_WUECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_WUECINT_BIT*4u))))

#define GPTM3_BITBANDING_TA_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM3_BITBANDING_TA_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPTM3_BITBANDING_TB_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM3_BITBANDING_TB_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPTM3_BITBANDING_TW_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnICR_RTCCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_RTCCINT_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM3_BITBANDING_TW_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_TnMCINT_BIT*4u))))

/* GPTM4 BITBANDING GPTMICR*/
#define GPTM4_BITBANDING_GPTMICR_TATOCINT             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TATOCINT_BIT*4u))))
#define GPTM4_BITBANDING_GPTMICR_CAMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CAMCINT_BIT*4u))))
#define GPTM4_BITBANDING_GPTMICR_CAECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CAECINT_BIT*4u))))
#define GPTM4_BITBANDING_GPTMICR_RTCCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_RTCCINT_BIT*4u))))
#define GPTM4_BITBANDING_GPTMICR_TAMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TAMCINT_BIT*4u))))
#define GPTM4_BITBANDING_GPTMICR_TBTOCINT             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TBTOCINT_BIT*4u))))
#define GPTM4_BITBANDING_GPTMICR_CBMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CBMCINT_BIT*4u))))
#define GPTM4_BITBANDING_GPTMICR_CBECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CBECINT_BIT*4u))))
#define GPTM4_BITBANDING_GPTMICR_TBMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TBMCINT_BIT*4u))))
#define GPTM4_BITBANDING_GPTMICR_WUECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_WUECINT_BIT*4u))))

#define GPTM4_BITBANDING_TA_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM4_BITBANDING_TA_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPTM4_BITBANDING_TB_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM4_BITBANDING_TB_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPTM4_BITBANDING_TW_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnICR_RTCCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_RTCCINT_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM4_BITBANDING_TW_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_TnMCINT_BIT*4u))))

/* GPTM5 BITBANDING GPTMICR*/
#define GPTM5_BITBANDING_GPTMICR_TATOCINT             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TATOCINT_BIT*4u))))
#define GPTM5_BITBANDING_GPTMICR_CAMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CAMCINT_BIT*4u))))
#define GPTM5_BITBANDING_GPTMICR_CAECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CAECINT_BIT*4u))))
#define GPTM5_BITBANDING_GPTMICR_RTCCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_RTCCINT_BIT*4u))))
#define GPTM5_BITBANDING_GPTMICR_TAMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TAMCINT_BIT*4u))))
#define GPTM5_BITBANDING_GPTMICR_TBTOCINT             (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TBTOCINT_BIT*4u))))
#define GPTM5_BITBANDING_GPTMICR_CBMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CBMCINT_BIT*4u))))
#define GPTM5_BITBANDING_GPTMICR_CBECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_CBECINT_BIT*4u))))
#define GPTM5_BITBANDING_GPTMICR_TBMCINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_TBMCINT_BIT*4u))))
#define GPTM5_BITBANDING_GPTMICR_WUECINT              (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMICR_OFFSET)*32u)+(GPTM_GPTMICR_R_WUECINT_BIT*4u))))

#define GPTM5_BITBANDING_TA_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM5_BITBANDING_TA_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnICR_OFFSET)*32u)+(GPTM_TA_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPTM5_BITBANDING_TB_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM5_BITBANDING_TB_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnICR_OFFSET)*32u)+(GPTM_TB_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPTM5_BITBANDING_TW_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnICR_RTCCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_RTCCINT_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPTM5_BITBANDING_TW_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnICR_OFFSET)*32u)+(GPTM_TW_GPTMTnICR_R_TnMCINT_BIT*4u))))

/* GPTM0 BITBANDING GPTMICR*/
#define GPWTM0_BITBANDING_GPTMICR_TATOCINT             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TATOCINT_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMICR_CAMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CAMCINT_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMICR_CAECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CAECINT_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMICR_RTCCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_RTCCINT_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMICR_TAMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TAMCINT_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMICR_TBTOCINT             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TBTOCINT_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMICR_CBMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CBMCINT_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMICR_CBECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CBECINT_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMICR_TBMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TBMCINT_BIT*4u))))
#define GPWTM0_BITBANDING_GPTMICR_WUECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_WUECINT_BIT*4u))))

#define GPWTM0_BITBANDING_TA_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM0_BITBANDING_TA_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPWTM0_BITBANDING_TB_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM0_BITBANDING_TB_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPWTM0_BITBANDING_TW_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnICR_RTCCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_RTCCINT_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_TnMCINT_BIT*4u))))
#define GPWTM0_BITBANDING_TW_GPTMTnICR_WUECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_WUECINT_BIT*4u))))

/* GPTM0 BITBANDING GPTMICR*/
#define GPWTM1_BITBANDING_GPTMICR_TATOCINT             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TATOCINT_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMICR_CAMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CAMCINT_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMICR_CAECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CAECINT_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMICR_RTCCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_RTCCINT_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMICR_TAMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TAMCINT_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMICR_TBTOCINT             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TBTOCINT_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMICR_CBMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CBMCINT_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMICR_CBECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CBECINT_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMICR_TBMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TBMCINT_BIT*4u))))
#define GPWTM1_BITBANDING_GPTMICR_WUECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_WUECINT_BIT*4u))))

#define GPWTM1_BITBANDING_TA_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM1_BITBANDING_TA_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPWTM1_BITBANDING_TB_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM1_BITBANDING_TB_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPWTM1_BITBANDING_TW_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnICR_RTCCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_RTCCINT_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_TnMCINT_BIT*4u))))
#define GPWTM1_BITBANDING_TW_GPTMTnICR_WUECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_WUECINT_BIT*4u))))

/* GPTM0 BITBANDING GPTMICR*/
#define GPWTM2_BITBANDING_GPTMICR_TATOCINT             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TATOCINT_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMICR_CAMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CAMCINT_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMICR_CAECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CAECINT_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMICR_RTCCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_RTCCINT_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMICR_TAMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TAMCINT_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMICR_TBTOCINT             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TBTOCINT_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMICR_CBMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CBMCINT_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMICR_CBECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CBECINT_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMICR_TBMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TBMCINT_BIT*4u))))
#define GPWTM2_BITBANDING_GPTMICR_WUECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_WUECINT_BIT*4u))))

#define GPWTM2_BITBANDING_TA_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM2_BITBANDING_TA_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPWTM2_BITBANDING_TB_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM2_BITBANDING_TB_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPWTM2_BITBANDING_TW_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnICR_RTCCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_RTCCINT_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_TnMCINT_BIT*4u))))
#define GPWTM2_BITBANDING_TW_GPTMTnICR_WUECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_WUECINT_BIT*4u))))

/* GPTM0 BITBANDING GPTMICR*/
#define GPWTM3_BITBANDING_GPTMICR_TATOCINT             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TATOCINT_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMICR_CAMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CAMCINT_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMICR_CAECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CAECINT_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMICR_RTCCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_RTCCINT_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMICR_TAMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TAMCINT_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMICR_TBTOCINT             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TBTOCINT_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMICR_CBMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CBMCINT_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMICR_CBECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CBECINT_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMICR_TBMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TBMCINT_BIT*4u))))
#define GPWTM3_BITBANDING_GPTMICR_WUECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_WUECINT_BIT*4u))))

#define GPWTM3_BITBANDING_TA_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM3_BITBANDING_TA_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPWTM3_BITBANDING_TB_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM3_BITBANDING_TB_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPWTM3_BITBANDING_TW_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnICR_RTCCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_RTCCINT_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_TnMCINT_BIT*4u))))
#define GPWTM3_BITBANDING_TW_GPTMTnICR_WUECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_WUECINT_BIT*4u))))

/* GPTM0 BITBANDING GPTMICR*/
#define GPWTM4_BITBANDING_GPTMICR_TATOCINT             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TATOCINT_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMICR_CAMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CAMCINT_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMICR_CAECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CAECINT_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMICR_RTCCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_RTCCINT_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMICR_TAMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TAMCINT_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMICR_TBTOCINT             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TBTOCINT_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMICR_CBMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CBMCINT_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMICR_CBECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CBECINT_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMICR_TBMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TBMCINT_BIT*4u))))
#define GPWTM4_BITBANDING_GPTMICR_WUECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_WUECINT_BIT*4u))))

#define GPWTM4_BITBANDING_TA_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM4_BITBANDING_TA_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPWTM4_BITBANDING_TB_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM4_BITBANDING_TB_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPWTM4_BITBANDING_TW_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnICR_RTCCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_RTCCINT_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_TnMCINT_BIT*4u))))
#define GPWTM4_BITBANDING_TW_GPTMTnICR_WUECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_WUECINT_BIT*4u))))

/* GPTM0 BITBANDING GPTMICR*/
#define GPWTM5_BITBANDING_GPTMICR_TATOCINT             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TATOCINT_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMICR_CAMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CAMCINT_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMICR_CAECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CAECINT_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMICR_RTCCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_RTCCINT_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMICR_TAMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TAMCINT_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMICR_TBTOCINT             (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TBTOCINT_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMICR_CBMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CBMCINT_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMICR_CBECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_CBECINT_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMICR_TBMCINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_TBMCINT_BIT*4u))))
#define GPWTM5_BITBANDING_GPTMICR_WUECINT              (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMICR_OFFSET)*32u)+(GPWTM_GPTMICR_R_WUECINT_BIT*4u))))

#define GPWTM5_BITBANDING_TA_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM5_BITBANDING_TA_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnICR_OFFSET)*32u)+(GPWTM_TA_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPWTM5_BITBANDING_TB_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM5_BITBANDING_TB_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnICR_OFFSET)*32u)+(GPWTM_TB_GPTMTnICR_R_TnMCINT_BIT*4u))))

#define GPWTM5_BITBANDING_TW_GPTMTnICR_TnTOCINT        (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_TnTOCINT_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnICR_CnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_CnMCINT_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnICR_RTCCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_RTCCINT_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnICR_CnECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_CnECINT_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnICR_TnMCINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_TnMCINT_BIT*4u))))
#define GPWTM5_BITBANDING_TW_GPTMTnICR_WUECINT         (*((volatile uint32_t *)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnICR_OFFSET)*32u)+(GPWTM_TW_GPTMTnICR_R_WUECINT_BIT*4u))))

/******************************************************************************************
************************************ 10 GPTMTAILR *********************************************
******************************************************************************************/

/* GPTM0 GPTMTAILR*/
#define GPTM0_BITBANDING_GPTMTAILR              (((BITBANDING_GPTMTAILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAILR_OFFSET)*32u))))
#define GPTM0_GPTMTAILR                         (((GPTMTAILR_TypeDef*)(GPTM0_BASE + GPTM_GPTMTAILR_OFFSET )))
#define GPTM0_GPTMTAILR_R                       (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTAILR_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnILR           (((BITBANDING_TA_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnILR_OFFSET)*32u))))
#define GPTM0_TA_GPTMTnILR                      (((TA_GPTMILR_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnILR_OFFSET )))
#define GPTM0_TA_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnILR_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMTnILR           (((BITBANDING_TW_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnILR_OFFSET)*32u))))
#define GPTM0_TW_GPTMTnILR                      (((TW_GPTMILR_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMTnILR_OFFSET )))
#define GPTM0_TW_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMTnILR_OFFSET)))

/* GPTM1 GPTMTAILR*/
#define GPTM1_BITBANDING_GPTMTAILR              (((BITBANDING_GPTMTAILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAILR_OFFSET)*32u))))
#define GPTM1_GPTMTAILR                         (((GPTMTAILR_TypeDef*)(GPTM1_BASE + GPTM_GPTMTAILR_OFFSET )))
#define GPTM1_GPTMTAILR_R                       (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTAILR_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnILR           (((BITBANDING_TA_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnILR_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnILR                      (((TA_GPTMILR_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnILR_OFFSET )))
#define GPTM1_TA_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnILR_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnILR           (((BITBANDING_TW_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnILR_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnILR                      (((TW_GPTMILR_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnILR_OFFSET )))
#define GPTM1_TW_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnILR_OFFSET)))

/* GPTM2 GPTMTAILR*/
#define GPTM2_BITBANDING_GPTMTAILR              (((BITBANDING_GPTMTAILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAILR_OFFSET)*32u))))
#define GPTM2_GPTMTAILR                         (((GPTMTAILR_TypeDef*)(GPTM2_BASE + GPTM_GPTMTAILR_OFFSET )))
#define GPTM2_GPTMTAILR_R                       (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTAILR_OFFSET)))

#define GPTM2_BITBANDING_TA_GPTMTnILR           (((BITBANDING_TA_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnILR_OFFSET)*32u))))
#define GPTM2_TA_GPTMTnILR                      (((TA_GPTMILR_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnILR_OFFSET )))
#define GPTM2_TA_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnILR_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMTnILR           (((BITBANDING_TW_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnILR_OFFSET)*32u))))
#define GPTM2_TW_GPTMTnILR                      (((TW_GPTMILR_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMTnILR_OFFSET )))
#define GPTM2_TW_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMTnILR_OFFSET)))

/* GPTM3 GPTMTAILR*/
#define GPTM3_BITBANDING_GPTMTAILR              (((BITBANDING_GPTMTAILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAILR_OFFSET)*32u))))
#define GPTM3_GPTMTAILR                         (((GPTMTAILR_TypeDef*)(GPTM3_BASE + GPTM_GPTMTAILR_OFFSET )))
#define GPTM3_GPTMTAILR_R                       (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTAILR_OFFSET)))

#define GPTM3_BITBANDING_TA_GPTMTnILR           (((BITBANDING_TA_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnILR_OFFSET)*32u))))
#define GPTM3_TA_GPTMTnILR                      (((TA_GPTMILR_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnILR_OFFSET )))
#define GPTM3_TA_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnILR_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMTnILR           (((BITBANDING_TW_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnILR_OFFSET)*32u))))
#define GPTM3_TW_GPTMTnILR                      (((TW_GPTMILR_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMTnILR_OFFSET )))
#define GPTM3_TW_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMTnILR_OFFSET)))

/* GPTM4 GPTMTAILR*/
#define GPTM4_BITBANDING_GPTMTAILR              (((BITBANDING_GPTMTAILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAILR_OFFSET)*32u))))
#define GPTM4_GPTMTAILR                         (((GPTMTAILR_TypeDef*)(GPTM4_BASE + GPTM_GPTMTAILR_OFFSET )))
#define GPTM4_GPTMTAILR_R                       (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTAILR_OFFSET)))

#define GPTM4_BITBANDING_TA_GPTMTnILR           (((BITBANDING_TA_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnILR_OFFSET)*32u))))
#define GPTM4_TA_GPTMTnILR                      (((TA_GPTMILR_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnILR_OFFSET )))
#define GPTM4_TA_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnILR_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMTnILR           (((BITBANDING_TW_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnILR_OFFSET)*32u))))
#define GPTM4_TW_GPTMTnILR                      (((TW_GPTMILR_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMTnILR_OFFSET )))
#define GPTM4_TW_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMTnILR_OFFSET)))

/* GPTM5 GPTMTAILR*/
#define GPTM5_BITBANDING_GPTMTAILR              (((BITBANDING_GPTMTAILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAILR_OFFSET)*32u))))
#define GPTM5_GPTMTAILR                         (((GPTMTAILR_TypeDef*)(GPTM5_BASE + GPTM_GPTMTAILR_OFFSET )))
#define GPTM5_GPTMTAILR_R                       (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTAILR_OFFSET)))

#define GPTM5_BITBANDING_TA_GPTMTnILR           (((BITBANDING_TA_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnILR_OFFSET)*32u))))
#define GPTM5_TA_GPTMTnILR                      (((TA_GPTMILR_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnILR_OFFSET )))
#define GPTM5_TA_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnILR_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMTnILR           (((BITBANDING_TW_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnILR_OFFSET)*32u))))
#define GPTM5_TW_GPTMTnILR                      (((TW_GPTMILR_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMTnILR_OFFSET )))
#define GPTM5_TW_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMTnILR_OFFSET)))

/* GPWTM0 GPWTMTAILR*/
#define GPWTM0_BITBANDING_GPTMTAILR             (((BITBANDING_GPTMTAILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAILR_OFFSET)*32u))))
#define GPWTM0_GPTMTAILR                        (((GPTMTAILR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTAILR_OFFSET )))
#define GPWTM0_GPTMTAILR_R                      (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTAILR_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnILR          (((BITBANDING_TA_GPWTMILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnILR_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnILR                     (((TA_GPWTMILR_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnILR_OFFSET )))
#define GPWTM0_TA_GPTMTnILR_R                   (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnILR_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnILR_LOW      (((BITBANDING_TW_GPWTMILR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnILR_LOW_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnILR_LOW                 (((TW_GPWTMILR_LOW_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnILR_LOW_OFFSET )))
#define GPWTM0_TW_GPTMTnILR_LOW_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnILR_LOW_OFFSET)))

/* GPWTM1 GPWTMTAILR*/
#define GPWTM1_BITBANDING_GPTMTAILR             (((BITBANDING_GPTMTAILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAILR_OFFSET)*32u))))
#define GPWTM1_GPTMTAILR                        (((GPTMTAILR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTAILR_OFFSET )))
#define GPWTM1_GPTMTAILR_R                      (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTAILR_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnILR          (((BITBANDING_TA_GPWTMILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnILR_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnILR                     (((TA_GPWTMILR_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnILR_OFFSET )))
#define GPWTM1_TA_GPTMTnILR_R                   (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnILR_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnILR_LOW      (((BITBANDING_TW_GPWTMILR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnILR_LOW_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnILR_LOW                 (((TW_GPWTMILR_LOW_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnILR_LOW_OFFSET )))
#define GPWTM1_TW_GPTMTnILR_LOW_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnILR_LOW_OFFSET)))

/* GPWTM2 GPWTMTAILR*/
#define GPWTM2_BITBANDING_GPTMTAILR             (((BITBANDING_GPTMTAILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAILR_OFFSET)*32u))))
#define GPWTM2_GPTMTAILR                        (((GPTMTAILR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTAILR_OFFSET )))
#define GPWTM2_GPTMTAILR_R                      (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTAILR_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnILR          (((BITBANDING_TA_GPWTMILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnILR_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnILR                     (((TA_GPWTMILR_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnILR_OFFSET )))
#define GPWTM2_TA_GPTMTnILR_R                   (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnILR_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnILR_LOW      (((BITBANDING_TW_GPWTMILR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnILR_LOW_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnILR_LOW                 (((TW_GPWTMILR_LOW_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnILR_LOW_OFFSET )))
#define GPWTM2_TW_GPTMTnILR_LOW_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnILR_LOW_OFFSET)))

/* GPWTM3 GPWTMTAILR*/
#define GPWTM3_BITBANDING_GPTMTAILR             (((BITBANDING_GPTMTAILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAILR_OFFSET)*32u))))
#define GPWTM3_GPTMTAILR                        (((GPTMTAILR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTAILR_OFFSET )))
#define GPWTM3_GPTMTAILR_R                      (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTAILR_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnILR          (((BITBANDING_TA_GPWTMILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnILR_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnILR                     (((TA_GPWTMILR_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnILR_OFFSET )))
#define GPWTM3_TA_GPTMTnILR_R                   (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnILR_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnILR_LOW      (((BITBANDING_TW_GPWTMILR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnILR_LOW_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnILR_LOW                 (((TW_GPWTMILR_LOW_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnILR_LOW_OFFSET )))
#define GPWTM3_TW_GPTMTnILR_LOW_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnILR_LOW_OFFSET)))

/* GPWTM4 GPWTMTAILR*/
#define GPWTM4_BITBANDING_GPTMTAILR             (((BITBANDING_GPTMTAILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAILR_OFFSET)*32u))))
#define GPWTM4_GPTMTAILR                        (((GPTMTAILR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTAILR_OFFSET )))
#define GPWTM4_GPTMTAILR_R                      (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTAILR_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnILR          (((BITBANDING_TA_GPWTMILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnILR_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnILR                     (((TA_GPWTMILR_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnILR_OFFSET )))
#define GPWTM4_TA_GPTMTnILR_R                   (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnILR_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnILR_LOW      (((BITBANDING_TW_GPWTMILR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnILR_LOW_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnILR_LOW                 (((TW_GPWTMILR_LOW_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnILR_LOW_OFFSET )))
#define GPWTM4_TW_GPTMTnILR_LOW_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnILR_LOW_OFFSET)))

/* GPWTM5 GPWTMTAILR*/
#define GPWTM5_BITBANDING_GPTMTAILR             (((BITBANDING_GPTMTAILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAILR_OFFSET)*32u))))
#define GPWTM5_GPTMTAILR                        (((GPTMTAILR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTAILR_OFFSET )))
#define GPWTM5_GPTMTAILR_R                      (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTAILR_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnILR          (((BITBANDING_TA_GPWTMILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnILR_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnILR                     (((TA_GPWTMILR_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnILR_OFFSET )))
#define GPWTM5_TA_GPTMTnILR_R                   (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnILR_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnILR_LOW      (((BITBANDING_TW_GPWTMILR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnILR_LOW_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnILR_LOW                 (((TW_GPWTMILR_LOW_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnILR_LOW_OFFSET )))
#define GPWTM5_TW_GPTMTnILR_LOW_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnILR_LOW_OFFSET)))

/*----------*/
#define GPTM_GPTMTAILR_R_TAILR_MASK         ((uint32_t)0xFFFFFFFFu)
#define GPTM_GPTMTAILR_R_TAILR_BIT          (0u)

#define GPTM_GPTMTAILR_TAILR_MASK           ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnILR_R_TnILR_MASK      ((uint32_t)0x0000FFFFu)
#define GPTM_TA_GPTMTnILR_R_TnILR_BIT       (0u)

#define GPTM_TA_GPTMTnILR_TnILR_MASK        ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnILR_R_TnILR_MASK      ((uint32_t)0xFFFFFFFFu)
#define GPTM_TW_GPTMTnILR_R_TnILR_BIT       (0u)

#define GPTM_TW_GPTMTnILR_TnILR_MASK        ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTAILR_R_TAILR_MASK        ((uint32_t)0xFFFFFFFFu)
#define GPWTM_GPTMTAILR_R_TAILR_BIT         (0u)

#define GPWTM_GPTMTAILR_TAILR_MASK          ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnILR_R_TnILR_MASK     ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TA_GPTMTnILR_R_TnILR_BIT      (0u)

#define GPWTM_TA_GPTMTnILR_TnILR_MASK       ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnILR_LOW_R_TnILR_MASK ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TW_GPTMTnILR_LOW_R_TnILR_BIT  (0u)

#define GPWTM_TW_GPTMTnILR_LOW_TnILR_MASK   ((uint32_t)0xFFFFFFFFu)
/*----------*/

/******************************************************************************************
************************************ 11 GPTMTBILR *********************************************
******************************************************************************************/

/* GPTM0 GPTMTBILR*/
#define GPTM0_BITBANDING_GPTMTBILR              (((BITBANDING_GPTMTBILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBILR_OFFSET)*32u))))
#define GPTM0_GPTMTBILR                         (((GPTMTBILR_TypeDef*)(GPTM0_BASE + GPTM_GPTMTBILR_OFFSET )))
#define GPTM0_GPTMTBILR_R                       (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTBILR_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnILR           (((BITBANDING_TB_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnILR_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnILR                      (((TB_GPTMILR_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnILR_OFFSET )))
#define GPTM0_TB_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnILR_OFFSET)))

/* GPTM1 GPTMTBILR*/
#define GPTM1_BITBANDING_GPTMTBILR              (((BITBANDING_GPTMTBILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBILR_OFFSET)*32u))))
#define GPTM1_GPTMTBILR                         (((GPTMTBILR_TypeDef*)(GPTM1_BASE + GPTM_GPTMTBILR_OFFSET )))
#define GPTM1_GPTMTBILR_R                       (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTBILR_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnILR           (((BITBANDING_TB_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnILR_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnILR                      (((TB_GPTMILR_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnILR_OFFSET )))
#define GPTM1_TB_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnILR_OFFSET)))

/* GPTM2 GPTMTBILR*/
#define GPTM2_BITBANDING_GPTMTBILR              (((BITBANDING_GPTMTBILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBILR_OFFSET)*32u))))
#define GPTM2_GPTMTBILR                         (((GPTMTBILR_TypeDef*)(GPTM2_BASE + GPTM_GPTMTBILR_OFFSET )))
#define GPTM2_GPTMTBILR_R                       (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTBILR_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnILR           (((BITBANDING_TB_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnILR_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnILR                      (((TB_GPTMILR_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnILR_OFFSET )))
#define GPTM2_TB_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnILR_OFFSET)))

/* GPTM3 GPTMTBILR*/
#define GPTM3_BITBANDING_GPTMTBILR              (((BITBANDING_GPTMTBILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBILR_OFFSET)*32u))))
#define GPTM3_GPTMTBILR                         (((GPTMTBILR_TypeDef*)(GPTM3_BASE + GPTM_GPTMTBILR_OFFSET )))
#define GPTM3_GPTMTBILR_R                       (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTBILR_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnILR           (((BITBANDING_TB_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnILR_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnILR                      (((TB_GPTMILR_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnILR_OFFSET )))
#define GPTM3_TB_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnILR_OFFSET)))

/* GPTM4 GPTMTBILR*/
#define GPTM4_BITBANDING_GPTMTBILR              (((BITBANDING_GPTMTBILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBILR_OFFSET)*32u))))
#define GPTM4_GPTMTBILR                         (((GPTMTBILR_TypeDef*)(GPTM4_BASE + GPTM_GPTMTBILR_OFFSET )))
#define GPTM4_GPTMTBILR_R                       (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTBILR_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnILR           (((BITBANDING_TB_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnILR_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnILR                      (((TB_GPTMILR_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnILR_OFFSET )))
#define GPTM4_TB_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnILR_OFFSET)))

/* GPTM5 GPTMTBILR*/
#define GPTM5_BITBANDING_GPTMTBILR              (((BITBANDING_GPTMTBILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBILR_OFFSET)*32u))))
#define GPTM5_GPTMTBILR                         (((GPTMTBILR_TypeDef*)(GPTM5_BASE + GPTM_GPTMTBILR_OFFSET )))
#define GPTM5_GPTMTBILR_R                       (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTBILR_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnILR           (((BITBANDING_TB_GPTMILR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnILR_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnILR                      (((TB_GPTMILR_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnILR_OFFSET )))
#define GPTM5_TB_GPTMTnILR_R                    (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnILR_OFFSET)))

/* GPWTM0 GPWTMTAILR*/
#define GPWTM0_BITBANDING_GPTMTBILR             (((BITBANDING_GPTMTBILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBILR_OFFSET)*32u))))
#define GPWTM0_GPTMTBILR                        (((GPTMTBILR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTBILR_OFFSET )))
#define GPWTM0_GPTMTBILR_R                      (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTBILR_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnILR          (((BITBANDING_TB_GPWTMILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnILR_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnILR                     (((TB_GPWTMILR_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnILR_OFFSET )))
#define GPWTM0_TB_GPTMTnILR_R                   (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnILR_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnILR_HIGH     (((BITBANDING_TW_GPWTMILR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnILR_HIGH_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnILR_HIGH                (((TW_GPWTMILR_HIGH_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnILR_HIGH_OFFSET )))
#define GPWTM0_TW_GPTMTnILR_HIGH_R              (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnILR_HIGH_OFFSET)))

/* GPWTM1 GPWTMTAILR*/
#define GPWTM1_BITBANDING_GPTMTBILR             (((BITBANDING_GPTMTBILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBILR_OFFSET)*32u))))
#define GPWTM1_GPTMTBILR                        (((GPTMTBILR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTBILR_OFFSET )))
#define GPWTM1_GPTMTBILR_R                      (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTBILR_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnILR          (((BITBANDING_TB_GPWTMILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnILR_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnILR                     (((TB_GPWTMILR_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnILR_OFFSET )))
#define GPWTM1_TB_GPTMTnILR_R                   (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnILR_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnILR_HIGH     (((BITBANDING_TW_GPWTMILR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnILR_HIGH_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnILR_HIGH                (((TW_GPWTMILR_HIGH_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnILR_HIGH_OFFSET )))
#define GPWTM1_TW_GPTMTnILR_HIGH_R              (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnILR_HIGH_OFFSET)))

/* GPWTM2 GPWTMTAILR*/
#define GPWTM2_BITBANDING_GPTMTBILR             (((BITBANDING_GPTMTBILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBILR_OFFSET)*32u))))
#define GPWTM2_GPTMTBILR                        (((GPTMTBILR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTBILR_OFFSET )))
#define GPWTM2_GPTMTBILR_R                      (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTBILR_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnILR          (((BITBANDING_TB_GPWTMILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnILR_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnILR                     (((TB_GPWTMILR_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnILR_OFFSET )))
#define GPWTM2_TB_GPTMTnILR_R                   (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnILR_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnILR_HIGH     (((BITBANDING_TW_GPWTMILR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnILR_HIGH_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnILR_HIGH                (((TW_GPWTMILR_HIGH_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnILR_HIGH_OFFSET )))
#define GPWTM2_TW_GPTMTnILR_HIGH_R              (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnILR_HIGH_OFFSET)))

/* GPWTM3 GPWTMTAILR*/
#define GPWTM3_BITBANDING_GPTMTBILR             (((BITBANDING_GPTMTBILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBILR_OFFSET)*32u))))
#define GPWTM3_GPTMTBILR                        (((GPTMTBILR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTBILR_OFFSET )))
#define GPWTM3_GPTMTBILR_R                      (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTBILR_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnILR          (((BITBANDING_TB_GPWTMILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnILR_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnILR                     (((TB_GPWTMILR_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnILR_OFFSET )))
#define GPWTM3_TB_GPTMTnILR_R                   (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnILR_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnILR_HIGH     (((BITBANDING_TW_GPWTMILR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnILR_HIGH_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnILR_HIGH                (((TW_GPWTMILR_HIGH_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnILR_HIGH_OFFSET )))
#define GPWTM3_TW_GPTMTnILR_HIGH_R              (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnILR_HIGH_OFFSET)))

/* GPWTM4 GPWTMTAILR*/
#define GPWTM4_BITBANDING_GPTMTBILR             (((BITBANDING_GPTMTBILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBILR_OFFSET)*32u))))
#define GPWTM4_GPTMTBILR                        (((GPTMTBILR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTBILR_OFFSET )))
#define GPWTM4_GPTMTBILR_R                      (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTBILR_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnILR          (((BITBANDING_TB_GPWTMILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnILR_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnILR                     (((TB_GPWTMILR_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnILR_OFFSET )))
#define GPWTM4_TB_GPTMTnILR_R                   (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnILR_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnILR_HIGH     (((BITBANDING_TW_GPWTMILR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnILR_HIGH_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnILR_HIGH                (((TW_GPWTMILR_HIGH_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnILR_HIGH_OFFSET )))
#define GPWTM4_TW_GPTMTnILR_HIGH_R              (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnILR_HIGH_OFFSET)))

/* GPWTM5 GPWTMTAILR*/
#define GPWTM5_BITBANDING_GPTMTBILR             (((BITBANDING_GPTMTBILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBILR_OFFSET)*32u))))
#define GPWTM5_GPTMTBILR                        (((GPTMTBILR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTBILR_OFFSET )))
#define GPWTM5_GPTMTBILR_R                      (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTBILR_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnILR          (((BITBANDING_TB_GPWTMILR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnILR_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnILR                     (((TB_GPWTMILR_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnILR_OFFSET )))
#define GPWTM5_TB_GPTMTnILR_R                   (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnILR_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnILR_HIGH     (((BITBANDING_TW_GPWTMILR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnILR_HIGH_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnILR_HIGH                (((TW_GPWTMILR_HIGH_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnILR_HIGH_OFFSET )))
#define GPWTM5_TW_GPTMTnILR_HIGH_R              (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnILR_HIGH_OFFSET)))

/*----------*/
#define GPTM_GPTMTBILR_R_TAILR_MASK             ((uint32_t)0xFFFFFFFFu)
#define GPTM_GPTMTBILR_R_TAILR_BIT              (0u)

#define GPTM_GPTMTBILR_TAILR_MASK               ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnILR_R_TnILR_MASK          ((uint32_t)0x0000FFFFu)
#define GPTM_TB_GPTMTnILR_R_TnILR_BIT           (0u)

#define GPTM_TB_GPTMTnILR_TnILR_MASK            ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBILR_R_TAILR_MASK            ((uint32_t)0xFFFFFFFFu)
#define GPWTM_GPTMTBILR_R_TAILR_BIT             (0u)

#define GPWTM_GPTMTBILR_TAILR_MASK              ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnILR_R_TnILR_MASK         ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TB_GPTMTnILR_R_TnILR_BIT          (0u)

#define GPWTM_TB_GPTMTnILR_TnILR_MASK           ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnILR_HIGH_R_TnILR_MASK    ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TW_GPTMTnILR_HIGH_R_TnILR_BIT     (0u)

#define GPWTM_TW_GPTMTnILR_HIGH_TnILR_MASK      ((uint32_t)0xFFFFFFFFu)
/*----------*/


/******************************************************************************************
************************************ 12 GPTMTAMATCHR *********************************************
******************************************************************************************/

/* GPTM0 GPTMTAMATCHR*/
#define GPTM0_BITBANDING_GPTMTAMATCHR               (((BITBANDING_GPTMTAMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAMATCHR_OFFSET)*32u))))
#define GPTM0_GPTMTAMATCHR                          (((GPTMTAMATCHR_TypeDef*)(GPTM0_BASE + GPTM_GPTMTAMATCHR_OFFSET )))
#define GPTM0_GPTMTAMATCHR_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTAMATCHR_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnMATCHR            (((BITBANDING_TA_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM0_TA_GPTMTnMATCHR                       (((TA_GPTMMATCHR_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnMATCHR_OFFSET )))
#define GPTM0_TA_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnMATCHR_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMTnMATCHR            (((BITBANDING_TW_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM0_TW_GPTMTnMATCHR                       (((TW_GPTMMATCHR_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMTnMATCHR_OFFSET )))
#define GPTM0_TW_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMTnMATCHR_OFFSET)))

/* GPTM1 GPTMTAMATCHR*/
#define GPTM1_BITBANDING_GPTMTAMATCHR               (((BITBANDING_GPTMTAMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAMATCHR_OFFSET)*32u))))
#define GPTM1_GPTMTAMATCHR                          (((GPTMTAMATCHR_TypeDef*)(GPTM1_BASE + GPTM_GPTMTAMATCHR_OFFSET )))
#define GPTM1_GPTMTAMATCHR_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTAMATCHR_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnMATCHR            (((BITBANDING_TA_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnMATCHR                       (((TA_GPTMMATCHR_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnMATCHR_OFFSET )))
#define GPTM1_TA_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnMATCHR_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnMATCHR            (((BITBANDING_TW_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnMATCHR                       (((TW_GPTMMATCHR_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnMATCHR_OFFSET )))
#define GPTM1_TW_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnMATCHR_OFFSET)))

/* GPTM2 GPTMTAMATCHR*/
#define GPTM2_BITBANDING_GPTMTAMATCHR               (((BITBANDING_GPTMTAMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAMATCHR_OFFSET)*32u))))
#define GPTM2_GPTMTAMATCHR                          (((GPTMTAMATCHR_TypeDef*)(GPTM2_BASE + GPTM_GPTMTAMATCHR_OFFSET )))
#define GPTM2_GPTMTAMATCHR_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTAMATCHR_OFFSET)))

#define GPTM2_BITBANDING_TA_GPTMTnMATCHR            (((BITBANDING_TA_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM2_TA_GPTMTnMATCHR                       (((TA_GPTMMATCHR_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnMATCHR_OFFSET )))
#define GPTM2_TA_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnMATCHR_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMTnMATCHR            (((BITBANDING_TW_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM2_TW_GPTMTnMATCHR                       (((TW_GPTMMATCHR_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMTnMATCHR_OFFSET )))
#define GPTM2_TW_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMTnMATCHR_OFFSET)))

/* GPTM3 GPTMTAMATCHR*/
#define GPTM3_BITBANDING_GPTMTAMATCHR               (((BITBANDING_GPTMTAMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAMATCHR_OFFSET)*32u))))
#define GPTM3_GPTMTAMATCHR                          (((GPTMTAMATCHR_TypeDef*)(GPTM3_BASE + GPTM_GPTMTAMATCHR_OFFSET )))
#define GPTM3_GPTMTAMATCHR_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTAMATCHR_OFFSET)))

#define GPTM3_BITBANDING_TA_GPTMTnMATCHR            (((BITBANDING_TA_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM3_TA_GPTMTnMATCHR                       (((TA_GPTMMATCHR_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnMATCHR_OFFSET )))
#define GPTM3_TA_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnMATCHR_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMTnMATCHR            (((BITBANDING_TW_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM3_TW_GPTMTnMATCHR                       (((TW_GPTMMATCHR_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMTnMATCHR_OFFSET )))
#define GPTM3_TW_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMTnMATCHR_OFFSET)))

/* GPTM4 GPTMTAMATCHR*/
#define GPTM4_BITBANDING_GPTMTAMATCHR               (((BITBANDING_GPTMTAMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAMATCHR_OFFSET)*32u))))
#define GPTM4_GPTMTAMATCHR                          (((GPTMTAMATCHR_TypeDef*)(GPTM4_BASE + GPTM_GPTMTAMATCHR_OFFSET )))
#define GPTM4_GPTMTAMATCHR_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTAMATCHR_OFFSET)))

#define GPTM4_BITBANDING_TA_GPTMTnMATCHR            (((BITBANDING_TA_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM4_TA_GPTMTnMATCHR                       (((TA_GPTMMATCHR_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnMATCHR_OFFSET )))
#define GPTM4_TA_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnMATCHR_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMTnMATCHR            (((BITBANDING_TW_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM4_TW_GPTMTnMATCHR                       (((TW_GPTMMATCHR_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMTnMATCHR_OFFSET )))
#define GPTM4_TW_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMTnMATCHR_OFFSET)))

/* GPTM5 GPTMTAMATCHR*/
#define GPTM5_BITBANDING_GPTMTAMATCHR               (((BITBANDING_GPTMTAMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAMATCHR_OFFSET)*32u))))
#define GPTM5_GPTMTAMATCHR                          (((GPTMTAMATCHR_TypeDef*)(GPTM5_BASE + GPTM_GPTMTAMATCHR_OFFSET )))
#define GPTM5_GPTMTAMATCHR_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTAMATCHR_OFFSET)))

#define GPTM5_BITBANDING_TA_GPTMTnMATCHR            (((BITBANDING_TA_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM5_TA_GPTMTnMATCHR                       (((TA_GPTMMATCHR_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnMATCHR_OFFSET )))
#define GPTM5_TA_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnMATCHR_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMTnMATCHR            (((BITBANDING_TW_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM5_TW_GPTMTnMATCHR                       (((TW_GPTMMATCHR_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMTnMATCHR_OFFSET )))
#define GPTM5_TW_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMTnMATCHR_OFFSET)))

/* GPWTM0 GPTMTAMATCHR*/
#define GPWTM0_BITBANDING_GPTMTAMATCHR              (((BITBANDING_GPTMTAMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAMATCHR_OFFSET)*32u))))
#define GPWTM0_GPTMTAMATCHR                         (((GPTMTAMATCHR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTAMATCHR_OFFSET )))
#define GPWTM0_GPTMTAMATCHR_R                       (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTAMATCHR_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnMATCHR           (((BITBANDING_TA_GPWTMMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnMATCHR_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnMATCHR                      (((TA_GPWTMMATCHR_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnMATCHR_OFFSET )))
#define GPWTM0_TA_GPTMTnMATCHR_R                    (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnMATCHR_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnMATCHR_LOW       (((BITBANDING_TW_GPWTMMATCHR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnMATCHR_LOW                  (((TW_GPWTMMATCHR_LOW_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET )))
#define GPWTM0_TW_GPTMTnMATCHR_LOW_R                (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET)))

/* GPWTM1 GPTMTAMATCHR*/
#define GPWTM1_BITBANDING_GPTMTAMATCHR              (((BITBANDING_GPTMTAMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAMATCHR_OFFSET)*32u))))
#define GPWTM1_GPTMTAMATCHR                         (((GPTMTAMATCHR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTAMATCHR_OFFSET )))
#define GPWTM1_GPTMTAMATCHR_R                       (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTAMATCHR_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnMATCHR           (((BITBANDING_TA_GPWTMMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnMATCHR_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnMATCHR                      (((TA_GPWTMMATCHR_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnMATCHR_OFFSET )))
#define GPWTM1_TA_GPTMTnMATCHR_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnMATCHR_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnMATCHR_LOW       (((BITBANDING_TW_GPWTMMATCHR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnMATCHR_LOW                  (((TW_GPWTMMATCHR_LOW_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET )))
#define GPWTM1_TW_GPTMTnMATCHR_LOW_R                (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET)))

/* GPWTM2 GPTMTAMATCHR*/
#define GPWTM2_BITBANDING_GPTMTAMATCHR              (((BITBANDING_GPTMTAMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAMATCHR_OFFSET)*32u))))
#define GPWTM2_GPTMTAMATCHR                         (((GPTMTAMATCHR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTAMATCHR_OFFSET )))
#define GPWTM2_GPTMTAMATCHR_R                       (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTAMATCHR_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnMATCHR           (((BITBANDING_TA_GPWTMMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnMATCHR_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnMATCHR                      (((TA_GPWTMMATCHR_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnMATCHR_OFFSET )))
#define GPWTM2_TA_GPTMTnMATCHR_R                    (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnMATCHR_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnMATCHR_LOW       (((BITBANDING_TW_GPWTMMATCHR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnMATCHR_LOW                  (((TW_GPWTMMATCHR_LOW_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET )))
#define GPWTM2_TW_GPTMTnMATCHR_LOW_R                (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET)))

/* GPWTM3 GPTMTAMATCHR*/
#define GPWTM3_BITBANDING_GPTMTAMATCHR              (((BITBANDING_GPTMTAMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAMATCHR_OFFSET)*32u))))
#define GPWTM3_GPTMTAMATCHR                         (((GPTMTAMATCHR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTAMATCHR_OFFSET )))
#define GPWTM3_GPTMTAMATCHR_R                       (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTAMATCHR_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnMATCHR           (((BITBANDING_TA_GPWTMMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnMATCHR_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnMATCHR                      (((TA_GPWTMMATCHR_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnMATCHR_OFFSET )))
#define GPWTM3_TA_GPTMTnMATCHR_R                    (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnMATCHR_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnMATCHR_LOW       (((BITBANDING_TW_GPWTMMATCHR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnMATCHR_LOW                  (((TW_GPWTMMATCHR_LOW_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET )))
#define GPWTM3_TW_GPTMTnMATCHR_LOW_R                (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET)))

/* GPWTM4 GPTMTAMATCHR*/
#define GPWTM4_BITBANDING_GPTMTAMATCHR              (((BITBANDING_GPTMTAMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAMATCHR_OFFSET)*32u))))
#define GPWTM4_GPTMTAMATCHR                         (((GPTMTAMATCHR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTAMATCHR_OFFSET )))
#define GPWTM4_GPTMTAMATCHR_R                       (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTAMATCHR_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnMATCHR           (((BITBANDING_TA_GPWTMMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnMATCHR_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnMATCHR                      (((TA_GPWTMMATCHR_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnMATCHR_OFFSET )))
#define GPWTM4_TA_GPTMTnMATCHR_R                    (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnMATCHR_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnMATCHR_LOW       (((BITBANDING_TW_GPWTMMATCHR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnMATCHR_LOW                  (((TW_GPWTMMATCHR_LOW_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET )))
#define GPWTM4_TW_GPTMTnMATCHR_LOW_R                (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET)))

/* GPWTM5 GPTMTAMATCHR*/
#define GPWTM5_BITBANDING_GPTMTAMATCHR              (((BITBANDING_GPTMTAMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAMATCHR_OFFSET)*32u))))
#define GPWTM5_GPTMTAMATCHR                         (((GPTMTAMATCHR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTAMATCHR_OFFSET )))
#define GPWTM5_GPTMTAMATCHR_R                       (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTAMATCHR_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnMATCHR           (((BITBANDING_TA_GPWTMMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnMATCHR_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnMATCHR                      (((TA_GPWTMMATCHR_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnMATCHR_OFFSET )))
#define GPWTM5_TA_GPTMTnMATCHR_R                    (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnMATCHR_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnMATCHR_LOW       (((BITBANDING_TW_GPWTMMATCHR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnMATCHR_LOW                  (((TW_GPWTMMATCHR_LOW_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET )))
#define GPWTM5_TW_GPTMTnMATCHR_LOW_R                (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnMATCHR_LOW_OFFSET)))

/*----------*/
#define GPTM_GPTMTAMATCHR_R_TAMR_MASK               ((uint32_t)0xFFFFFFFFu)
#define GPTM_GPTMTAMATCHR_R_TAMR_BIT                (0u)

#define GPTM_GPTMTAMATCHR_TAMR_MASK                 ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnMATCHR_R_TnMR_MASK            ((uint32_t)0x0000FFFFu)
#define GPTM_TA_GPTMTnMATCHR_R_TnMR_BIT             (0u)

#define GPTM_TA_GPTMTnMATCHR_TnMR_MASK              ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnMATCHR_R_TnMR_MASK            ((uint32_t)0xFFFFFFFFu)
#define GPTM_TW_GPTMTnMATCHR_R_TnMR_BIT             (0u)

#define GPTM_TW_GPTMTnMATCHR_TnMR_MASK              ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTAMATCHR_R_TAMR_MASK              ((uint32_t)0xFFFFFFFFu)
#define GPWTM_GPTMTAMATCHR_R_TAMR_BIT               (0u)

#define GPWTM_GPTMTAMATCHR_TAMR_MASK                ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnMATCHR_R_TnMR_MASK           ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TA_GPTMTnMATCHR_R_TnMR_BIT            (0u)

#define GPWTM_TA_GPTMTnMATCHR_TnMR_MASK             ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnMATCHR_LOW_R_TnMR_MASK       ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TW_GPTMTnMATCHR_LOW_R_TnMR_BIT        (0u)

#define GPWTM_TW_GPTMTnMATCHR_LOW_TnMR_MASK         ((uint32_t)0xFFFFFFFFu)
/*----------*/

/******************************************************************************************
************************************ 13 GPTMTBMATCHR *********************************************
******************************************************************************************/

/* GPTM0 GPTMTBMATCHR*/
#define GPTM0_BITBANDING_GPTMTBMATCHR               (((BITBANDING_GPTMTBMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBMATCHR_OFFSET)*32u))))
#define GPTM0_GPTMTBMATCHR                          (((GPTMTBMATCHR_TypeDef*)(GPTM0_BASE + GPTM_GPTMTBMATCHR_OFFSET )))
#define GPTM0_GPTMTBMATCHR_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTBMATCHR_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnMATCHR            (((BITBANDING_TB_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnMATCHR                       (((TB_GPTMMATCHR_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnMATCHR_OFFSET )))
#define GPTM0_TB_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnMATCHR_OFFSET)))

/* GPTM1 GPTMTBMATCHR*/
#define GPTM1_BITBANDING_GPTMTBMATCHR               (((BITBANDING_GPTMTBMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBMATCHR_OFFSET)*32u))))
#define GPTM1_GPTMTBMATCHR                          (((GPTMTBMATCHR_TypeDef*)(GPTM1_BASE + GPTM_GPTMTBMATCHR_OFFSET )))
#define GPTM1_GPTMTBMATCHR_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTBMATCHR_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnMATCHR            (((BITBANDING_TB_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnMATCHR                       (((TB_GPTMMATCHR_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnMATCHR_OFFSET )))
#define GPTM1_TB_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnMATCHR_OFFSET)))

/* GPTM2 GPTMTBMATCHR*/
#define GPTM2_BITBANDING_GPTMTBMATCHR               (((BITBANDING_GPTMTBMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBMATCHR_OFFSET)*32u))))
#define GPTM2_GPTMTBMATCHR                          (((GPTMTBMATCHR_TypeDef*)(GPTM2_BASE + GPTM_GPTMTBMATCHR_OFFSET )))
#define GPTM2_GPTMTBMATCHR_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTBMATCHR_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnMATCHR            (((BITBANDING_TB_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnMATCHR                       (((TB_GPTMMATCHR_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnMATCHR_OFFSET )))
#define GPTM2_TB_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnMATCHR_OFFSET)))

/* GPTM3 GPTMTBMATCHR*/
#define GPTM3_BITBANDING_GPTMTBMATCHR               (((BITBANDING_GPTMTBMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBMATCHR_OFFSET)*32u))))
#define GPTM3_GPTMTBMATCHR                          (((GPTMTBMATCHR_TypeDef*)(GPTM3_BASE + GPTM_GPTMTBMATCHR_OFFSET )))
#define GPTM3_GPTMTBMATCHR_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTBMATCHR_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnMATCHR            (((BITBANDING_TB_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnMATCHR                       (((TB_GPTMMATCHR_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnMATCHR_OFFSET )))
#define GPTM3_TB_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnMATCHR_OFFSET)))

/* GPTM4 GPTMTBMATCHR*/
#define GPTM4_BITBANDING_GPTMTBMATCHR               (((BITBANDING_GPTMTBMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBMATCHR_OFFSET)*32u))))
#define GPTM4_GPTMTBMATCHR                          (((GPTMTBMATCHR_TypeDef*)(GPTM4_BASE + GPTM_GPTMTBMATCHR_OFFSET )))
#define GPTM4_GPTMTBMATCHR_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTBMATCHR_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnMATCHR            (((BITBANDING_TB_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnMATCHR                       (((TB_GPTMMATCHR_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnMATCHR_OFFSET )))
#define GPTM4_TB_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnMATCHR_OFFSET)))

/* GPTM5 GPTMTBMATCHR*/
#define GPTM5_BITBANDING_GPTMTBMATCHR               (((BITBANDING_GPTMTBMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBMATCHR_OFFSET)*32u))))
#define GPTM5_GPTMTBMATCHR                          (((GPTMTBMATCHR_TypeDef*)(GPTM5_BASE + GPTM_GPTMTBMATCHR_OFFSET )))
#define GPTM5_GPTMTBMATCHR_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTBMATCHR_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnMATCHR            (((BITBANDING_TB_GPTMMATCHR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnMATCHR_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnMATCHR                       (((TB_GPTMMATCHR_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnMATCHR_OFFSET )))
#define GPTM5_TB_GPTMTnMATCHR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnMATCHR_OFFSET)))

/* GPWTM0 GPWTMTBMR*/
#define GPWTM0_BITBANDING_GPTMTBMATCHR              (((BITBANDING_GPTMTBMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBMATCHR_OFFSET)*32u))))
#define GPWTM0_GPTMTBMATCHR                         (((GPTMTBMATCHR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTBMATCHR_OFFSET )))
#define GPWTM0_GPTMTBMATCHR_R                       (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTBMATCHR_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnMATCHR           (((BITBANDING_TB_GPWTMMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnMATCHR_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnMATCHR                      (((TB_GPWTMMATCHR_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnMATCHR_OFFSET )))
#define GPWTM0_TB_GPTMTnMATCHR_R                    (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnMATCHR_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnMATCHR_HIGH      (((BITBANDING_TW_GPWTMMATCHR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnMATCHR_HIGH                 (((TW_GPWTMMATCHR_HIGH_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET )))
#define GPWTM0_TW_GPTMTnMATCHR_HIGH_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET)))

/* GPWTM1 GPWTMTBMR*/
#define GPWTM1_BITBANDING_GPTMTBMATCHR              (((BITBANDING_GPTMTBMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBMATCHR_OFFSET)*32u))))
#define GPWTM1_GPTMTBMATCHR                         (((GPTMTBMATCHR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTBMATCHR_OFFSET )))
#define GPWTM1_GPTMTBMATCHR_R                       (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTBMATCHR_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnMATCHR           (((BITBANDING_TB_GPWTMMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnMATCHR_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnMATCHR                      (((TB_GPWTMMATCHR_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnMATCHR_OFFSET )))
#define GPWTM1_TB_GPTMTnMATCHR_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnMATCHR_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnMATCHR_HIGH      (((BITBANDING_TW_GPWTMMATCHR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnMATCHR_HIGH                 (((TW_GPWTMMATCHR_HIGH_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET )))
#define GPWTM1_TW_GPTMTnMATCHR_HIGH_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET)))

/* GPWTM2 GPWTMTBMR*/
#define GPWTM2_BITBANDING_GPTMTBMATCHR              (((BITBANDING_GPTMTBMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBMATCHR_OFFSET)*32u))))
#define GPWTM2_GPTMTBMATCHR                         (((GPTMTBMATCHR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTBMATCHR_OFFSET )))
#define GPWTM2_GPTMTBMATCHR_R                       (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTBMATCHR_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnMATCHR           (((BITBANDING_TB_GPWTMMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnMATCHR_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnMATCHR                      (((TB_GPWTMMATCHR_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnMATCHR_OFFSET )))
#define GPWTM2_TB_GPTMTnMATCHR_R                    (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnMATCHR_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnMATCHR_HIGH      (((BITBANDING_TW_GPWTMMATCHR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnMATCHR_HIGH                 (((TW_GPWTMMATCHR_HIGH_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET )))
#define GPWTM2_TW_GPTMTnMATCHR_HIGH_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET)))

/* GPWTM3 GPWTMTBMR*/
#define GPWTM3_BITBANDING_GPTMTBMATCHR              (((BITBANDING_GPTMTBMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBMATCHR_OFFSET)*32u))))
#define GPWTM3_GPTMTBMATCHR                         (((GPTMTBMATCHR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTBMATCHR_OFFSET )))
#define GPWTM3_GPTMTBMATCHR_R                       (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTBMATCHR_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnMATCHR           (((BITBANDING_TB_GPWTMMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnMATCHR_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnMATCHR                      (((TB_GPWTMMATCHR_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnMATCHR_OFFSET )))
#define GPWTM3_TB_GPTMTnMATCHR_R                    (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnMATCHR_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnMATCHR_HIGH      (((BITBANDING_TW_GPWTMMATCHR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnMATCHR_HIGH                 (((TW_GPWTMMATCHR_HIGH_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET )))
#define GPWTM3_TW_GPTMTnMATCHR_HIGH_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET)))

/* GPWTM4 GPWTMTBMR*/
#define GPWTM4_BITBANDING_GPTMTBMATCHR              (((BITBANDING_GPTMTBMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBMATCHR_OFFSET)*32u))))
#define GPWTM4_GPTMTBMATCHR                         (((GPTMTBMATCHR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTBMATCHR_OFFSET )))
#define GPWTM4_GPTMTBMATCHR_R                       (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTBMATCHR_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnMATCHR           (((BITBANDING_TB_GPWTMMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnMATCHR_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnMATCHR                      (((TB_GPWTMMATCHR_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnMATCHR_OFFSET )))
#define GPWTM4_TB_GPTMTnMATCHR_R                    (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnMATCHR_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnMATCHR_HIGH      (((BITBANDING_TW_GPWTMMATCHR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnMATCHR_HIGH                 (((TW_GPWTMMATCHR_HIGH_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET )))
#define GPWTM4_TW_GPTMTnMATCHR_HIGH_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET)))

/* GPWTM5 GPWTMTBMR*/
#define GPWTM5_BITBANDING_GPTMTBMATCHR              (((BITBANDING_GPTMTBMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBMATCHR_OFFSET)*32u))))
#define GPWTM5_GPTMTBMATCHR                         (((GPTMTBMATCHR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTBMATCHR_OFFSET )))
#define GPWTM5_GPTMTBMATCHR_R                       (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTBMATCHR_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnMATCHR           (((BITBANDING_TB_GPWTMMATCHR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnMATCHR_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnMATCHR                      (((TB_GPWTMMATCHR_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnMATCHR_OFFSET )))
#define GPWTM5_TB_GPTMTnMATCHR_R                    (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnMATCHR_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnMATCHR_HIGH      (((BITBANDING_TW_GPWTMMATCHR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnMATCHR_HIGH                 (((TW_GPWTMMATCHR_HIGH_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET )))
#define GPWTM5_TW_GPTMTnMATCHR_HIGH_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnMATCHR_HIGH_OFFSET)))

/*----------*/
#define GPTM_GPTMTBMATCHR_R_TBMR_MASK               ((uint32_t)0xFFFFFFFFu)
#define GPTM_GPTMTBMATCHR_R_TBMR_BIT                (0u)

#define GPTM_GPTMTBMATCHR_TBMR_MASK                 ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnMATCHR_R_TnMR_MASK            ((uint32_t)0x0000FFFFu)
#define GPTM_TB_GPTMTnMATCHR_R_TnMR_BIT             (0u)

#define GPTM_TB_GPTMTnMATCHR_TnMR_MASK              ((uint32_t)0x0000FFFFu)
/*----------*/


/*----------*/
#define GPWTM_GPTMTBMATCHR_R_TBMR_MASK              ((uint32_t)0xFFFFFFFFu)
#define GPWTM_GPTMTBMATCHR_R_TBMR_BIT               (0u)

#define GPWTM_GPTMTBMATCHR_TBMR_MASK                ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnMATCHR_R_TnMR_MASK           ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TB_GPTMTnMATCHR_R_TnMR_BIT            (0u)

#define GPWTM_TB_GPTMTnMATCHR_TnMR_MASK             ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnMATCHR_HIGH_R_TnMR_MASK      ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TW_GPTMTnMATCHR_HIGH_R_TnMR_BIT       (0u)

#define GPWTM_TW_GPTMTnMATCHR_HIGH_TnMR_MASK        ((uint32_t)0xFFFFFFFFu)
/*----------*/

/******************************************************************************************
************************************ 14 GPTMTAPR *********************************************
******************************************************************************************/

/* GPTM0 GPTMTAPR*/
#define GPTM0_BITBANDING_GPTMTAPR               (((BITBANDING_GPTMTAPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAPR_OFFSET)*32u))))
#define GPTM0_GPTMTAPR                          (((GPTMTAPR_TypeDef*)(GPTM0_BASE + GPTM_GPTMTAPR_OFFSET )))
#define GPTM0_GPTMTAPR_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTAPR_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnPR            (((BITBANDING_TA_GPTMPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnPR_OFFSET)*32u))))
#define GPTM0_TA_GPTMTnPR                       (((TA_GPTMPR_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnPR_OFFSET )))
#define GPTM0_TA_GPTMTnPR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnPR_OFFSET)))

/* GPTM1 GPTMTAPR*/
#define GPTM1_BITBANDING_GPTMTAPR               (((BITBANDING_GPTMTAPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAPR_OFFSET)*32u))))
#define GPTM1_GPTMTAPR                          (((GPTMTAPR_TypeDef*)(GPTM1_BASE + GPTM_GPTMTAPR_OFFSET )))
#define GPTM1_GPTMTAPR_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTAPR_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnPR            (((BITBANDING_TA_GPTMPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnPR_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnPR                       (((TA_GPTMPR_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnPR_OFFSET )))
#define GPTM1_TA_GPTMTnPR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnPR_OFFSET)))

/* GPTM2 GPTMTAPR*/
#define GPTM2_BITBANDING_GPTMTAPR               (((BITBANDING_GPTMTAPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAPR_OFFSET)*32u))))
#define GPTM2_GPTMTAPR                          (((GPTMTAPR_TypeDef*)(GPTM2_BASE + GPTM_GPTMTAPR_OFFSET )))
#define GPTM2_GPTMTAPR_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTAPR_OFFSET)))

#define GPTM2_BITBANDING_TA_GPTMTnPR            (((BITBANDING_TA_GPTMPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnPR_OFFSET)*32u))))
#define GPTM2_TA_GPTMTnPR                       (((TA_GPTMPR_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnPR_OFFSET )))
#define GPTM2_TA_GPTMTnPR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnPR_OFFSET)))

/* GPTM3 GPTMTAPR*/
#define GPTM3_BITBANDING_GPTMTAPR               (((BITBANDING_GPTMTAPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAPR_OFFSET)*32u))))
#define GPTM3_GPTMTAPR                          (((GPTMTAPR_TypeDef*)(GPTM3_BASE + GPTM_GPTMTAPR_OFFSET )))
#define GPTM3_GPTMTAPR_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTAPR_OFFSET)))

#define GPTM3_BITBANDING_TA_GPTMTnPR            (((BITBANDING_TA_GPTMPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnPR_OFFSET)*32u))))
#define GPTM3_TA_GPTMTnPR                       (((TA_GPTMPR_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnPR_OFFSET )))
#define GPTM3_TA_GPTMTnPR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnPR_OFFSET)))

/* GPTM4 GPTMTAPR*/
#define GPTM4_BITBANDING_GPTMTAPR               (((BITBANDING_GPTMTAPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAPR_OFFSET)*32u))))
#define GPTM4_GPTMTAPR                          (((GPTMTAPR_TypeDef*)(GPTM4_BASE + GPTM_GPTMTAPR_OFFSET )))
#define GPTM4_GPTMTAPR_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTAPR_OFFSET)))

#define GPTM4_BITBANDING_TA_GPTMTnPR            (((BITBANDING_TA_GPTMPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnPR_OFFSET)*32u))))
#define GPTM4_TA_GPTMTnPR                       (((TA_GPTMPR_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnPR_OFFSET )))
#define GPTM4_TA_GPTMTnPR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnPR_OFFSET)))

/* GPTM5 GPTMTAPR*/
#define GPTM5_BITBANDING_GPTMTAPR               (((BITBANDING_GPTMTAPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAPR_OFFSET)*32u))))
#define GPTM5_GPTMTAPR                          (((GPTMTAPR_TypeDef*)(GPTM5_BASE + GPTM_GPTMTAPR_OFFSET )))
#define GPTM5_GPTMTAPR_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTAPR_OFFSET)))

#define GPTM5_BITBANDING_TA_GPTMTnPR            (((BITBANDING_TA_GPTMPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnPR_OFFSET)*32u))))
#define GPTM5_TA_GPTMTnPR                       (((TA_GPTMPR_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnPR_OFFSET )))
#define GPTM5_TA_GPTMTnPR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnPR_OFFSET)))

/* GPWTM0 GPTMTAPR*/
#define GPWTM0_BITBANDING_GPTMTAPR               (((BITBANDING_GPTMTAPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAPR_OFFSET)*32u))))
#define GPWTM0_GPTMTAPR                          (((GPTMTAPR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTAPR_OFFSET )))
#define GPWTM0_GPTMTAPR_R                        (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTAPR_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnPR            (((BITBANDING_TA_GPWTMPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnPR_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnPR                       (((TA_GPWTMPR_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnPR_OFFSET )))
#define GPWTM0_TA_GPTMTnPR_R                     (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnPR_OFFSET)))

/* GPWTM1 GPTMTAPR*/
#define GPWTM1_BITBANDING_GPTMTAPR               (((BITBANDING_GPTMTAPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAPR_OFFSET)*32u))))
#define GPWTM1_GPTMTAPR                          (((GPTMTAPR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTAPR_OFFSET )))
#define GPWTM1_GPTMTAPR_R                        (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTAPR_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnPR            (((BITBANDING_TA_GPWTMPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnPR_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnPR                       (((TA_GPWTMPR_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnPR_OFFSET )))
#define GPWTM1_TA_GPTMTnPR_R                     (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnPR_OFFSET)))

/* GPWTM2 GPTMTAPR*/
#define GPWTM2_BITBANDING_GPTMTAPR               (((BITBANDING_GPTMTAPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAPR_OFFSET)*32u))))
#define GPWTM2_GPTMTAPR                          (((GPTMTAPR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTAPR_OFFSET )))
#define GPWTM2_GPTMTAPR_R                        (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTAPR_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnPR            (((BITBANDING_TA_GPWTMPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnPR_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnPR                       (((TA_GPWTMPR_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnPR_OFFSET )))
#define GPWTM2_TA_GPTMTnPR_R                     (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnPR_OFFSET)))

/* GPWTM3 GPTMTAPR*/
#define GPWTM3_BITBANDING_GPTMTAPR               (((BITBANDING_GPTMTAPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAPR_OFFSET)*32u))))
#define GPWTM3_GPTMTAPR                          (((GPTMTAPR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTAPR_OFFSET )))
#define GPWTM3_GPTMTAPR_R                        (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTAPR_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnPR            (((BITBANDING_TA_GPWTMPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnPR_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnPR                       (((TA_GPWTMPR_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnPR_OFFSET )))
#define GPWTM3_TA_GPTMTnPR_R                     (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnPR_OFFSET)))

/* GPWTM4 GPTMTAPR*/
#define GPWTM4_BITBANDING_GPTMTAPR               (((BITBANDING_GPTMTAPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAPR_OFFSET)*32u))))
#define GPWTM4_GPTMTAPR                          (((GPTMTAPR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTAPR_OFFSET )))
#define GPWTM4_GPTMTAPR_R                        (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTAPR_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnPR            (((BITBANDING_TA_GPWTMPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnPR_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnPR                       (((TA_GPWTMPR_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnPR_OFFSET )))
#define GPWTM4_TA_GPTMTnPR_R                     (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnPR_OFFSET)))

/* GPWTM5 GPTMTAPR*/
#define GPWTM5_BITBANDING_GPTMTAPR               (((BITBANDING_GPTMTAPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAPR_OFFSET)*32u))))
#define GPWTM5_GPTMTAPR                          (((GPTMTAPR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTAPR_OFFSET )))
#define GPWTM5_GPTMTAPR_R                        (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTAPR_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnPR            (((BITBANDING_TA_GPWTMPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnPR_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnPR                       (((TA_GPWTMPR_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnPR_OFFSET )))
#define GPWTM5_TA_GPTMTnPR_R                     (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnPR_OFFSET)))

/*----------*/
#define GPTM_GPTMTAPR_R_TAPSR_MASK              ((uint32_t)0x000000FFu)
#define GPTM_GPTMTAPR_R_TAPSR_BIT               (0u)

#define GPTM_GPTMTAPR_TAPSR_MASK                ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPTM_GPTMTAPR_R_TAPSRH_MASK             ((uint32_t)0x0000FF00u)
#define GPTM_GPTMTAPR_R_TAPSRH_BIT              (8u)

#define GPTM_GPTMTAPR_TAPSRH_MASK               ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnPR_R_TnPSR_MASK           ((uint32_t)0x000000FFu)
#define GPTM_TA_GPTMTnPR_R_TnPSR_BIT            (0u)

#define GPTM_TA_GPTMTnPR_TnPSR_MASK             ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTAPR_R_TAPSR_MASK             ((uint32_t)0x000000FFu)
#define GPWTM_GPTMTAPR_R_TAPSR_BIT              (0u)

#define GPWTM_GPTMTAPR_TAPSR_MASK               ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTAPR_R_TAPSRH_MASK            ((uint32_t)0x0000FF00u)
#define GPWTM_GPTMTAPR_R_TAPSRH_BIT             (8u)

#define GPWTM_GPTMTAPR_TAPSRH_MASK              ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnPR_R_TnPSR_MASK          ((uint32_t)0x0000FFFFu)
#define GPWTM_TA_GPTMTnPR_R_TnPSR_BIT           (0u)

#define GPWTM_TA_GPTMTnPR_TnPSR_MASK            ((uint32_t)0x0000FFFFu)
/*----------*/

/******************************************************************************************
************************************ 15 GPTMTBPR *********************************************
******************************************************************************************/

/* GPTM0 GPTMTBPR*/
#define GPTM0_BITBANDING_GPTMTBPR               (((BITBANDING_GPTMTBPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBPR_OFFSET)*32u))))
#define GPTM0_GPTMTBPR                          (((GPTMTBPR_TypeDef*)(GPTM0_BASE + GPTM_GPTMTBPR_OFFSET )))
#define GPTM0_GPTMTBPR_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTBPR_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnPR            (((BITBANDING_TB_GPTMPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnPR_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnPR                       (((TB_GPTMPR_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnPR_OFFSET )))
#define GPTM0_TB_GPTMTnPR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnPR_OFFSET)))

/* GPTM1 GPTMTBPR*/
#define GPTM1_BITBANDING_GPTMTBPR               (((BITBANDING_GPTMTBPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBPR_OFFSET)*32u))))
#define GPTM1_GPTMTBPR                          (((GPTMTBPR_TypeDef*)(GPTM1_BASE + GPTM_GPTMTBPR_OFFSET )))
#define GPTM1_GPTMTBPR_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTBPR_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnPR            (((BITBANDING_TB_GPTMPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnPR_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnPR                       (((TB_GPTMPR_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnPR_OFFSET )))
#define GPTM1_TB_GPTMTnPR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnPR_OFFSET)))

/* GPTM2 GPTMTBPR*/
#define GPTM2_BITBANDING_GPTMTBPR               (((BITBANDING_GPTMTBPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBPR_OFFSET)*32u))))
#define GPTM2_GPTMTBPR                          (((GPTMTBPR_TypeDef*)(GPTM2_BASE + GPTM_GPTMTBPR_OFFSET )))
#define GPTM2_GPTMTBPR_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTBPR_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnPR            (((BITBANDING_TB_GPTMPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnPR_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnPR                       (((TB_GPTMPR_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnPR_OFFSET )))
#define GPTM2_TB_GPTMTnPR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnPR_OFFSET)))

/* GPTM3 GPTMTBPR*/
#define GPTM3_BITBANDING_GPTMTBPR               (((BITBANDING_GPTMTBPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBPR_OFFSET)*32u))))
#define GPTM3_GPTMTBPR                          (((GPTMTBPR_TypeDef*)(GPTM3_BASE + GPTM_GPTMTBPR_OFFSET )))
#define GPTM3_GPTMTBPR_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTBPR_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnPR            (((BITBANDING_TB_GPTMPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnPR_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnPR                       (((TB_GPTMPR_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnPR_OFFSET )))
#define GPTM3_TB_GPTMTnPR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnPR_OFFSET)))

/* GPTM4 GPTMTBPR*/
#define GPTM4_BITBANDING_GPTMTBPR               (((BITBANDING_GPTMTBPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBPR_OFFSET)*32u))))
#define GPTM4_GPTMTBPR                          (((GPTMTBPR_TypeDef*)(GPTM4_BASE + GPTM_GPTMTBPR_OFFSET )))
#define GPTM4_GPTMTBPR_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTBPR_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnPR            (((BITBANDING_TB_GPTMPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnPR_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnPR                       (((TB_GPTMPR_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnPR_OFFSET )))
#define GPTM4_TB_GPTMTnPR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnPR_OFFSET)))

/* GPTM5 GPTMTBPR*/
#define GPTM5_BITBANDING_GPTMTBPR               (((BITBANDING_GPTMTBPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBPR_OFFSET)*32u))))
#define GPTM5_GPTMTBPR                          (((GPTMTBPR_TypeDef*)(GPTM5_BASE + GPTM_GPTMTBPR_OFFSET )))
#define GPTM5_GPTMTBPR_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTBPR_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnPR            (((BITBANDING_TB_GPTMPR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnPR_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnPR                       (((TB_GPTMPR_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnPR_OFFSET )))
#define GPTM5_TB_GPTMTnPR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnPR_OFFSET)))

/* GPWTM0 GPTMTBPR*/
#define GPWTM0_BITBANDING_GPTMTBPR               (((BITBANDING_GPTMTBPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBPR_OFFSET)*32u))))
#define GPWTM0_GPTMTBPR                          (((GPTMTBPR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTBPR_OFFSET )))
#define GPWTM0_GPTMTBPR_R                        (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTBPR_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnPR            (((BITBANDING_TB_GPWTMPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnPR_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnPR                       (((TB_GPWTMPR_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnPR_OFFSET )))
#define GPWTM0_TB_GPTMTnPR_R                     (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnPR_OFFSET)))

/* GPWTM1 GPTMTBPR*/
#define GPWTM1_BITBANDING_GPTMTBPR               (((BITBANDING_GPTMTBPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBPR_OFFSET)*32u))))
#define GPWTM1_GPTMTBPR                          (((GPTMTBPR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTBPR_OFFSET )))
#define GPWTM1_GPTMTBPR_R                        (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTBPR_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnPR            (((BITBANDING_TB_GPWTMPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnPR_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnPR                       (((TB_GPWTMPR_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnPR_OFFSET )))
#define GPWTM1_TB_GPTMTnPR_R                     (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnPR_OFFSET)))

/* GPWTM2 GPTMTBPR*/
#define GPWTM2_BITBANDING_GPTMTBPR               (((BITBANDING_GPTMTBPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBPR_OFFSET)*32u))))
#define GPWTM2_GPTMTBPR                          (((GPTMTBPR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTBPR_OFFSET )))
#define GPWTM2_GPTMTBPR_R                        (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTBPR_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnPR            (((BITBANDING_TB_GPWTMPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnPR_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnPR                       (((TB_GPWTMPR_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnPR_OFFSET )))
#define GPWTM2_TB_GPTMTnPR_R                     (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnPR_OFFSET)))

/* GPWTM3 GPTMTBPR*/
#define GPWTM3_BITBANDING_GPTMTBPR               (((BITBANDING_GPTMTBPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBPR_OFFSET)*32u))))
#define GPWTM3_GPTMTBPR                          (((GPTMTBPR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTBPR_OFFSET )))
#define GPWTM3_GPTMTBPR_R                        (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTBPR_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnPR            (((BITBANDING_TB_GPWTMPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnPR_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnPR                       (((TB_GPWTMPR_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnPR_OFFSET )))
#define GPWTM3_TB_GPTMTnPR_R                     (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnPR_OFFSET)))

/* GPWTM4 GPTMTBPR*/
#define GPWTM4_BITBANDING_GPTMTBPR               (((BITBANDING_GPTMTBPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBPR_OFFSET)*32u))))
#define GPWTM4_GPTMTBPR                          (((GPTMTBPR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTBPR_OFFSET )))
#define GPWTM4_GPTMTBPR_R                        (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTBPR_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnPR            (((BITBANDING_TB_GPWTMPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnPR_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnPR                       (((TB_GPWTMPR_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnPR_OFFSET )))
#define GPWTM4_TB_GPTMTnPR_R                     (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnPR_OFFSET)))

/* GPWTM5 GPTMTBPR*/
#define GPWTM5_BITBANDING_GPTMTBPR               (((BITBANDING_GPTMTBPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBPR_OFFSET)*32u))))
#define GPWTM5_GPTMTBPR                          (((GPTMTBPR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTBPR_OFFSET )))
#define GPWTM5_GPTMTBPR_R                        (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTBPR_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnPR            (((BITBANDING_TB_GPWTMPR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnPR_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnPR                       (((TB_GPWTMPR_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnPR_OFFSET )))
#define GPWTM5_TB_GPTMTnPR_R                     (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnPR_OFFSET)))

/*----------*/
#define GPTM_GPTMTBPR_R_TBPSR_MASK              ((uint32_t)0x000000FFu)
#define GPTM_GPTMTBPR_R_TBPSR_BIT               (0u)

#define GPTM_GPTMTBPR_TBPSR_MASK                ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPTM_GPTMTBPR_R_TBPSRH_MASK             ((uint32_t)0x0000FF00u)
#define GPTM_GPTMTBPR_R_TBPSRH_BIT              (8u)

#define GPTM_GPTMTBPR_TBPSRH_MASK               ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnPR_R_TnPSR_MASK           ((uint32_t)0x000000FFu)
#define GPTM_TB_GPTMTnPR_R_TnPSR_BIT            (0u)

#define GPTM_TB_GPTMTnPR_TnPSR_MASK             ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBPR_R_TBPSR_MASK             ((uint32_t)0x000000FFu)
#define GPWTM_GPTMTBPR_R_TBPSR_BIT              (0u)

#define GPWTM_GPTMTBPR_TBPSR_MASK               ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBPR_R_TBPSRH_MASK            ((uint32_t)0x0000FF00u)
#define GPWTM_GPTMTBPR_R_TBPSRH_BIT             (8u)

#define GPWTM_GPTMTBPR_TBPSRH_MASK              ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnPR_R_TnPSR_MASK          ((uint32_t)0x0000FFFFu)
#define GPWTM_TB_GPTMTnPR_R_TnPSR_BIT           (0u)

#define GPWTM_TB_GPTMTnPR_TnPSR_MASK            ((uint32_t)0x0000FFFFu)
/*----------*/

/******************************************************************************************
************************************ 16 GPTMTAPMR *********************************************
******************************************************************************************/

/* GPTM0 GPTMTAPMR*/
#define GPTM0_BITBANDING_GPTMTAPMR               (((BITBANDING_GPTMTAPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAPMR_OFFSET)*32u))))
#define GPTM0_GPTMTAPMR                          (((GPTMTAPMR_TypeDef*)(GPTM0_BASE + GPTM_GPTMTAPMR_OFFSET )))
#define GPTM0_GPTMTAPMR_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTAPMR_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnPMR            (((BITBANDING_TA_GPTMPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnPMR_OFFSET)*32u))))
#define GPTM0_TA_GPTMTnPMR                       (((TA_GPTMPMR_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnPMR_OFFSET )))
#define GPTM0_TA_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnPMR_OFFSET)))

/* GPTM1 GPTMTAPMR*/
#define GPTM1_BITBANDING_GPTMTAPMR               (((BITBANDING_GPTMTAPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAPMR_OFFSET)*32u))))
#define GPTM1_GPTMTAPMR                          (((GPTMTAPMR_TypeDef*)(GPTM1_BASE + GPTM_GPTMTAPMR_OFFSET )))
#define GPTM1_GPTMTAPMR_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTAPMR_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnPMR            (((BITBANDING_TA_GPTMPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnPMR_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnPMR                       (((TA_GPTMPMR_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnPMR_OFFSET )))
#define GPTM1_TA_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnPMR_OFFSET)))

/* GPTM2 GPTMTAPMR*/
#define GPTM2_BITBANDING_GPTMTAPMR               (((BITBANDING_GPTMTAPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAPMR_OFFSET)*32u))))
#define GPTM2_GPTMTAPMR                          (((GPTMTAPMR_TypeDef*)(GPTM2_BASE + GPTM_GPTMTAPMR_OFFSET )))
#define GPTM2_GPTMTAPMR_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTAPMR_OFFSET)))

#define GPTM2_BITBANDING_TA_GPTMTnPMR            (((BITBANDING_TA_GPTMPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnPMR_OFFSET)*32u))))
#define GPTM2_TA_GPTMTnPMR                       (((TA_GPTMPMR_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnPMR_OFFSET )))
#define GPTM2_TA_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnPMR_OFFSET)))

/* GPTM3 GPTMTAPMR*/
#define GPTM3_BITBANDING_GPTMTAPMR               (((BITBANDING_GPTMTAPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAPMR_OFFSET)*32u))))
#define GPTM3_GPTMTAPMR                          (((GPTMTAPMR_TypeDef*)(GPTM3_BASE + GPTM_GPTMTAPMR_OFFSET )))
#define GPTM3_GPTMTAPMR_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTAPMR_OFFSET)))

#define GPTM3_BITBANDING_TA_GPTMTnPMR            (((BITBANDING_TA_GPTMPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnPMR_OFFSET)*32u))))
#define GPTM3_TA_GPTMTnPMR                       (((TA_GPTMPMR_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnPMR_OFFSET )))
#define GPTM3_TA_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnPMR_OFFSET)))

/* GPTM4 GPTMTAPMR*/
#define GPTM4_BITBANDING_GPTMTAPMR               (((BITBANDING_GPTMTAPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAPMR_OFFSET)*32u))))
#define GPTM4_GPTMTAPMR                          (((GPTMTAPMR_TypeDef*)(GPTM4_BASE + GPTM_GPTMTAPMR_OFFSET )))
#define GPTM4_GPTMTAPMR_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTAPMR_OFFSET)))

#define GPTM4_BITBANDING_TA_GPTMTnPMR            (((BITBANDING_TA_GPTMPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnPMR_OFFSET)*32u))))
#define GPTM4_TA_GPTMTnPMR                       (((TA_GPTMPMR_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnPMR_OFFSET )))
#define GPTM4_TA_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnPMR_OFFSET)))

/* GPTM5 GPTMTAPMR*/
#define GPTM5_BITBANDING_GPTMTAPMR               (((BITBANDING_GPTMTAPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAPMR_OFFSET)*32u))))
#define GPTM5_GPTMTAPMR                          (((GPTMTAPMR_TypeDef*)(GPTM5_BASE + GPTM_GPTMTAPMR_OFFSET )))
#define GPTM5_GPTMTAPMR_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTAPMR_OFFSET)))

#define GPTM5_BITBANDING_TA_GPTMTnPMR            (((BITBANDING_TA_GPTMPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnPMR_OFFSET)*32u))))
#define GPTM5_TA_GPTMTnPMR                       (((TA_GPTMPMR_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnPMR_OFFSET )))
#define GPTM5_TA_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnPMR_OFFSET)))

/* GPWTM0 GPTMTAPMR*/
#define GPWTM0_BITBANDING_GPTMTAPMR               (((BITBANDING_GPTMTAPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAPMR_OFFSET)*32u))))
#define GPWTM0_GPTMTAPMR                          (((GPTMTAPMR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTAPMR_OFFSET )))
#define GPWTM0_GPTMTAPMR_R                        (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTAPMR_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnPMR            (((BITBANDING_TA_GPWTMPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnPMR_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnPMR                       (((TA_GPWTMPMR_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnPMR_OFFSET )))
#define GPWTM0_TA_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnPMR_OFFSET)))

/* GPWTM1 GPTMTAPMR*/
#define GPWTM1_BITBANDING_GPTMTAPMR               (((BITBANDING_GPTMTAPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAPMR_OFFSET)*32u))))
#define GPWTM1_GPTMTAPMR                          (((GPTMTAPMR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTAPMR_OFFSET )))
#define GPWTM1_GPTMTAPMR_R                        (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTAPMR_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnPMR            (((BITBANDING_TA_GPWTMPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnPMR_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnPMR                       (((TA_GPWTMPMR_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnPMR_OFFSET )))
#define GPWTM1_TA_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnPMR_OFFSET)))

/* GPWTM2 GPTMTAPMR*/
#define GPWTM2_BITBANDING_GPTMTAPMR               (((BITBANDING_GPTMTAPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAPMR_OFFSET)*32u))))
#define GPWTM2_GPTMTAPMR                          (((GPTMTAPMR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTAPMR_OFFSET )))
#define GPWTM2_GPTMTAPMR_R                        (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTAPMR_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnPMR            (((BITBANDING_TA_GPWTMPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnPMR_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnPMR                       (((TA_GPWTMPMR_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnPMR_OFFSET )))
#define GPWTM2_TA_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnPMR_OFFSET)))

/* GPWTM3 GPTMTAPMR*/
#define GPWTM3_BITBANDING_GPTMTAPMR               (((BITBANDING_GPTMTAPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAPMR_OFFSET)*32u))))
#define GPWTM3_GPTMTAPMR                          (((GPTMTAPMR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTAPMR_OFFSET )))
#define GPWTM3_GPTMTAPMR_R                        (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTAPMR_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnPMR            (((BITBANDING_TA_GPWTMPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnPMR_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnPMR                       (((TA_GPWTMPMR_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnPMR_OFFSET )))
#define GPWTM3_TA_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnPMR_OFFSET)))

/* GPWTM4 GPTMTAPMR*/
#define GPWTM4_BITBANDING_GPTMTAPMR               (((BITBANDING_GPTMTAPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAPMR_OFFSET)*32u))))
#define GPWTM4_GPTMTAPMR                          (((GPTMTAPMR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTAPMR_OFFSET )))
#define GPWTM4_GPTMTAPMR_R                        (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTAPMR_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnPMR            (((BITBANDING_TA_GPWTMPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnPMR_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnPMR                       (((TA_GPWTMPMR_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnPMR_OFFSET )))
#define GPWTM4_TA_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnPMR_OFFSET)))

/* GPWTM5 GPTMTAPMR*/
#define GPWTM5_BITBANDING_GPTMTAPMR               (((BITBANDING_GPTMTAPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAPMR_OFFSET)*32u))))
#define GPWTM5_GPTMTAPMR                          (((GPTMTAPMR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTAPMR_OFFSET )))
#define GPWTM5_GPTMTAPMR_R                        (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTAPMR_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnPMR            (((BITBANDING_TA_GPWTMPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnPMR_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnPMR                       (((TA_GPWTMPMR_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnPMR_OFFSET )))
#define GPWTM5_TA_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnPMR_OFFSET)))

/*----------*/
#define GPTM_GPTMTAPMR_R_TAPSMR_MASK              ((uint32_t)0x000000FFu)
#define GPTM_GPTMTAPMR_R_TAPSMR_BIT               (0u)

#define GPTM_GPTMTAPMR_TAPSMR_MASK                ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPTM_GPTMTAPMR_R_TAPSMRH_MASK             ((uint32_t)0x0000FF00u)
#define GPTM_GPTMTAPMR_R_TAPSMRH_BIT              (8u)

#define GPTM_GPTMTAPMR_TAPSMRH_MASK               ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnPMR_R_TnPSMR_MASK           ((uint32_t)0x000000FFu)
#define GPTM_TA_GPTMTnPMR_R_TnPSMR_BIT            (0u)

#define GPTM_TA_GPTMTnPMR_TnPSMR_MASK             ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTAPMR_R_TAPSMR_MASK             ((uint32_t)0x000000FFu)
#define GPWTM_GPTMTAPMR_R_TAPSMR_BIT              (0u)

#define GPWTM_GPTMTAPMR_TAPSMR_MASK               ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTAPMR_R_TAPSMRH_MASK            ((uint32_t)0x0000FF00u)
#define GPWTM_GPTMTAPMR_R_TAPSMRH_BIT             (8u)

#define GPWTM_GPTMTAPMR_TAPSMRH_MASK              ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnPMR_R_TnPSMR_MASK          ((uint32_t)0x0000FFFFu)
#define GPWTM_TA_GPTMTnPMR_R_TnPSMR_BIT           (0u)

#define GPWTM_TA_GPTMTnPMR_TnPSMR_MASK            ((uint32_t)0x0000FFFFu)
/*----------*/


/******************************************************************************************
************************************ 17 GPTMTBPMR *********************************************
******************************************************************************************/

/* GPTM0 GPTMTBPMR*/
#define GPTM0_BITBANDING_GPTMTBPMR               (((BITBANDING_GPTMTBPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBPMR_OFFSET)*32u))))
#define GPTM0_GPTMTBPMR                          (((GPTMTBPMR_TypeDef*)(GPTM0_BASE + GPTM_GPTMTBPMR_OFFSET )))
#define GPTM0_GPTMTBPMR_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTBPMR_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnPMR            (((BITBANDING_TB_GPTMPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnPMR_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnPMR                       (((TB_GPTMPMR_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnPMR_OFFSET )))
#define GPTM0_TB_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnPMR_OFFSET)))

/* GPTM1 GPTMTBPMR*/
#define GPTM1_BITBANDING_GPTMTBPMR               (((BITBANDING_GPTMTBPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBPMR_OFFSET)*32u))))
#define GPTM1_GPTMTBPMR                          (((GPTMTBPMR_TypeDef*)(GPTM1_BASE + GPTM_GPTMTBPMR_OFFSET )))
#define GPTM1_GPTMTBPMR_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTBPMR_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnPMR            (((BITBANDING_TB_GPTMPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnPMR_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnPMR                       (((TB_GPTMPMR_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnPMR_OFFSET )))
#define GPTM1_TB_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnPMR_OFFSET)))

/* GPTM2 GPTMTBPMR*/
#define GPTM2_BITBANDING_GPTMTBPMR               (((BITBANDING_GPTMTBPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBPMR_OFFSET)*32u))))
#define GPTM2_GPTMTBPMR                          (((GPTMTBPMR_TypeDef*)(GPTM2_BASE + GPTM_GPTMTBPMR_OFFSET )))
#define GPTM2_GPTMTBPMR_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTBPMR_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnPMR            (((BITBANDING_TB_GPTMPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnPMR_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnPMR                       (((TB_GPTMPMR_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnPMR_OFFSET )))
#define GPTM2_TB_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnPMR_OFFSET)))

/* GPTM3 GPTMTBPMR*/
#define GPTM3_BITBANDING_GPTMTBPMR               (((BITBANDING_GPTMTBPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBPMR_OFFSET)*32u))))
#define GPTM3_GPTMTBPMR                          (((GPTMTBPMR_TypeDef*)(GPTM3_BASE + GPTM_GPTMTBPMR_OFFSET )))
#define GPTM3_GPTMTBPMR_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTBPMR_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnPMR            (((BITBANDING_TB_GPTMPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnPMR_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnPMR                       (((TB_GPTMPMR_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnPMR_OFFSET )))
#define GPTM3_TB_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnPMR_OFFSET)))

/* GPTM4 GPTMTBPMR*/
#define GPTM4_BITBANDING_GPTMTBPMR               (((BITBANDING_GPTMTBPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBPMR_OFFSET)*32u))))
#define GPTM4_GPTMTBPMR                          (((GPTMTBPMR_TypeDef*)(GPTM4_BASE + GPTM_GPTMTBPMR_OFFSET )))
#define GPTM4_GPTMTBPMR_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTBPMR_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnPMR            (((BITBANDING_TB_GPTMPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnPMR_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnPMR                       (((TB_GPTMPMR_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnPMR_OFFSET )))
#define GPTM4_TB_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnPMR_OFFSET)))

/* GPTM5 GPTMTBPMR*/
#define GPTM5_BITBANDING_GPTMTBPMR               (((BITBANDING_GPTMTBPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBPMR_OFFSET)*32u))))
#define GPTM5_GPTMTBPMR                          (((GPTMTBPMR_TypeDef*)(GPTM5_BASE + GPTM_GPTMTBPMR_OFFSET )))
#define GPTM5_GPTMTBPMR_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTBPMR_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnPMR            (((BITBANDING_TB_GPTMPMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnPMR_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnPMR                       (((TB_GPTMPMR_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnPMR_OFFSET )))
#define GPTM5_TB_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnPMR_OFFSET)))

/* GPWTM0 GPTMTBPMR*/
#define GPWTM0_BITBANDING_GPTMTBPMR               (((BITBANDING_GPTMTBPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBPMR_OFFSET)*32u))))
#define GPWTM0_GPTMTBPMR                          (((GPTMTBPMR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTBPMR_OFFSET )))
#define GPWTM0_GPTMTBPMR_R                        (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTBPMR_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnPMR            (((BITBANDING_TB_GPWTMPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnPMR_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnPMR                       (((TB_GPWTMPMR_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnPMR_OFFSET )))
#define GPWTM0_TB_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnPMR_OFFSET)))

/* GPWTM1 GPTMTBPMR*/
#define GPWTM1_BITBANDING_GPTMTBPMR               (((BITBANDING_GPTMTBPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBPMR_OFFSET)*32u))))
#define GPWTM1_GPTMTBPMR                          (((GPTMTBPMR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTBPMR_OFFSET )))
#define GPWTM1_GPTMTBPMR_R                        (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTBPMR_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnPMR            (((BITBANDING_TB_GPWTMPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnPMR_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnPMR                       (((TB_GPWTMPMR_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnPMR_OFFSET )))
#define GPWTM1_TB_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnPMR_OFFSET)))

/* GPWTM2 GPTMTBPMR*/
#define GPWTM2_BITBANDING_GPTMTBPMR               (((BITBANDING_GPTMTBPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBPMR_OFFSET)*32u))))
#define GPWTM2_GPTMTBPMR                          (((GPTMTBPMR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTBPMR_OFFSET )))
#define GPWTM2_GPTMTBPMR_R                        (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTBPMR_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnPMR            (((BITBANDING_TB_GPWTMPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnPMR_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnPMR                       (((TB_GPWTMPMR_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnPMR_OFFSET )))
#define GPWTM2_TB_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnPMR_OFFSET)))

/* GPWTM3 GPTMTBPMR*/
#define GPWTM3_BITBANDING_GPTMTBPMR               (((BITBANDING_GPTMTBPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBPMR_OFFSET)*32u))))
#define GPWTM3_GPTMTBPMR                          (((GPTMTBPMR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTBPMR_OFFSET )))
#define GPWTM3_GPTMTBPMR_R                        (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTBPMR_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnPMR            (((BITBANDING_TB_GPWTMPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnPMR_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnPMR                       (((TB_GPWTMPMR_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnPMR_OFFSET )))
#define GPWTM3_TB_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnPMR_OFFSET)))

/* GPWTM4 GPTMTBPMR*/
#define GPWTM4_BITBANDING_GPTMTBPMR               (((BITBANDING_GPTMTBPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBPMR_OFFSET)*32u))))
#define GPWTM4_GPTMTBPMR                          (((GPTMTBPMR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTBPMR_OFFSET )))
#define GPWTM4_GPTMTBPMR_R                        (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTBPMR_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnPMR            (((BITBANDING_TB_GPWTMPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnPMR_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnPMR                       (((TB_GPWTMPMR_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnPMR_OFFSET )))
#define GPWTM4_TB_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnPMR_OFFSET)))

/* GPWTM5 GPTMTBPMR*/
#define GPWTM5_BITBANDING_GPTMTBPMR               (((BITBANDING_GPTMTBPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBPMR_OFFSET)*32u))))
#define GPWTM5_GPTMTBPMR                          (((GPTMTBPMR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTBPMR_OFFSET )))
#define GPWTM5_GPTMTBPMR_R                        (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTBPMR_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnPMR            (((BITBANDING_TB_GPWTMPMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnPMR_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnPMR                       (((TB_GPWTMPMR_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnPMR_OFFSET )))
#define GPWTM5_TB_GPTMTnPMR_R                     (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnPMR_OFFSET)))

/*----------*/
#define GPTM_GPTMTBPMR_R_TBPSMR_MASK              ((uint32_t)0x000000FFu)
#define GPTM_GPTMTBPMR_R_TBPSMR_BIT               (0u)

#define GPTM_GPTMTBPMR_TBPSMR_MASK                ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPTM_GPTMTBPMR_R_TBPSMRH_MASK             ((uint32_t)0x0000FF00u)
#define GPTM_GPTMTBPMR_R_TBPSMRH_BIT              (8u)

#define GPTM_GPTMTBPMR_TBPSMRH_MASK               ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnPMR_R_TnPSMR_MASK           ((uint32_t)0x000000FFu)
#define GPTM_TB_GPTMTnPMR_R_TnPSMR_BIT            (0u)

#define GPTM_TB_GPTMTnPMR_TnPSMR_MASK             ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBPMR_R_TBPSMR_MASK             ((uint32_t)0x000000FFu)
#define GPWTM_GPTMTBPMR_R_TBPSMR_BIT              (0u)

#define GPWTM_GPTMTBPMR_TBPSMR_MASK               ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBPMR_R_TBPSMRH_MASK            ((uint32_t)0x0000FF00u)
#define GPWTM_GPTMTBPMR_R_TBPSMRH_BIT             (8u)

#define GPWTM_GPTMTBPMR_TBPSMRH_MASK              ((uint32_t)0x000000FFu)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnPMR_R_TnPSMR_MASK          ((uint32_t)0x0000FFFFu)
#define GPWTM_TB_GPTMTnPMR_R_TnPSMR_BIT           (0u)

#define GPWTM_TB_GPTMTnPMR_TnPSMR_MASK            ((uint32_t)0x0000FFFFu)
/*----------*/


/******************************************************************************************
************************************ 18 GPTMTAR *********************************************
******************************************************************************************/

/* GPTM0 GPTMTAR*/
#define GPTM0_BITBANDING_GPTMTAR               (((BITBANDING_GPTMTAR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAR_OFFSET)*32u))))
#define GPTM0_GPTMTAR                          (((GPTMTAR_TypeDef*)(GPTM0_BASE + GPTM_GPTMTAR_OFFSET )))
#define GPTM0_GPTMTAR_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTAR_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnR            (((BITBANDING_TA_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnR_OFFSET)*32u))))
#define GPTM0_TA_GPTMTnR                       (((TA_GPTMR_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnR_OFFSET )))
#define GPTM0_TA_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnR_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMTnR            (((BITBANDING_TW_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnR_OFFSET)*32u))))
#define GPTM0_TW_GPTMTnR                       (((TW_GPTMR_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMTnR_OFFSET )))
#define GPTM0_TW_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMTnR_OFFSET)))

/* GPTM1 GPTMTAR*/
#define GPTM1_BITBANDING_GPTMTAR               (((BITBANDING_GPTMTAR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAR_OFFSET)*32u))))
#define GPTM1_GPTMTAR                          (((GPTMTAR_TypeDef*)(GPTM1_BASE + GPTM_GPTMTAR_OFFSET )))
#define GPTM1_GPTMTAR_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTAR_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnR            (((BITBANDING_TA_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnR_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnR                       (((TA_GPTMR_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnR_OFFSET )))
#define GPTM1_TA_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnR_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnR            (((BITBANDING_TW_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnR_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnR                       (((TW_GPTMR_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnR_OFFSET )))
#define GPTM1_TW_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnR_OFFSET)))

/* GPTM2 GPTMTAR*/
#define GPTM2_BITBANDING_GPTMTAR               (((BITBANDING_GPTMTAR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAR_OFFSET)*32u))))
#define GPTM2_GPTMTAR                          (((GPTMTAR_TypeDef*)(GPTM2_BASE + GPTM_GPTMTAR_OFFSET )))
#define GPTM2_GPTMTAR_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTAR_OFFSET)))

#define GPTM2_BITBANDING_TA_GPTMTnR            (((BITBANDING_TA_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnR_OFFSET)*32u))))
#define GPTM2_TA_GPTMTnR                       (((TA_GPTMR_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnR_OFFSET )))
#define GPTM2_TA_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnR_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMTnR            (((BITBANDING_TW_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnR_OFFSET)*32u))))
#define GPTM2_TW_GPTMTnR                       (((TW_GPTMR_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMTnR_OFFSET )))
#define GPTM2_TW_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMTnR_OFFSET)))

/* GPTM3 GPTMTAR*/
#define GPTM3_BITBANDING_GPTMTAR               (((BITBANDING_GPTMTAR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAR_OFFSET)*32u))))
#define GPTM3_GPTMTAR                          (((GPTMTAR_TypeDef*)(GPTM3_BASE + GPTM_GPTMTAR_OFFSET )))
#define GPTM3_GPTMTAR_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTAR_OFFSET)))

#define GPTM3_BITBANDING_TA_GPTMTnR            (((BITBANDING_TA_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnR_OFFSET)*32u))))
#define GPTM3_TA_GPTMTnR                       (((TA_GPTMR_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnR_OFFSET )))
#define GPTM3_TA_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnR_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMTnR            (((BITBANDING_TW_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnR_OFFSET)*32u))))
#define GPTM3_TW_GPTMTnR                       (((TW_GPTMR_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMTnR_OFFSET )))
#define GPTM3_TW_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMTnR_OFFSET)))

/* GPTM4 GPTMTAR*/
#define GPTM4_BITBANDING_GPTMTAR               (((BITBANDING_GPTMTAR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAR_OFFSET)*32u))))
#define GPTM4_GPTMTAR                          (((GPTMTAR_TypeDef*)(GPTM4_BASE + GPTM_GPTMTAR_OFFSET )))
#define GPTM4_GPTMTAR_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTAR_OFFSET)))

#define GPTM4_BITBANDING_TA_GPTMTnR            (((BITBANDING_TA_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnR_OFFSET)*32u))))
#define GPTM4_TA_GPTMTnR                       (((TA_GPTMR_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnR_OFFSET )))
#define GPTM4_TA_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnR_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMTnR            (((BITBANDING_TW_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnR_OFFSET)*32u))))
#define GPTM4_TW_GPTMTnR                       (((TW_GPTMR_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMTnR_OFFSET )))
#define GPTM4_TW_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMTnR_OFFSET)))

/* GPTM5 GPTMTAR*/
#define GPTM5_BITBANDING_GPTMTAR               (((BITBANDING_GPTMTAR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAR_OFFSET)*32u))))
#define GPTM5_GPTMTAR                          (((GPTMTAR_TypeDef*)(GPTM5_BASE + GPTM_GPTMTAR_OFFSET )))
#define GPTM5_GPTMTAR_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTAR_OFFSET)))

#define GPTM5_BITBANDING_TA_GPTMTnR            (((BITBANDING_TA_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnR_OFFSET)*32u))))
#define GPTM5_TA_GPTMTnR                       (((TA_GPTMR_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnR_OFFSET )))
#define GPTM5_TA_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnR_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMTnR            (((BITBANDING_TW_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnR_OFFSET)*32u))))
#define GPTM5_TW_GPTMTnR                       (((TW_GPTMR_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMTnR_OFFSET )))
#define GPTM5_TW_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMTnR_OFFSET)))

/* GPWTM0 GPTMTAR*/
#define GPWTM0_BITBANDING_GPTMTAR              (((BITBANDING_GPTMTAR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAR_OFFSET)*32u))))
#define GPWTM0_GPTMTAR                         (((GPTMTAR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTAR_OFFSET )))
#define GPWTM0_GPTMTAR_R                       (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTAR_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnR           (((BITBANDING_TA_GPTMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnR_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnR                      (((TA_GPTMR_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnR_OFFSET )))
#define GPWTM0_TA_GPTMTnR_R                    (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnR_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnR_LOW       (((BITBANDING_TW_GPWTMR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnR_LOW_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnR_LOW                  (((TW_GPWTMR_LOW_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnR_LOW_OFFSET )))
#define GPWTM0_TW_GPTMTnR_LOW_R                (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnR_LOW_OFFSET)))

/* GPWTM1 GPTMTAR*/
#define GPWTM1_BITBANDING_GPTMTAR              (((BITBANDING_GPTMTAR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAR_OFFSET)*32u))))
#define GPWTM1_GPTMTAR                         (((GPTMTAR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTAR_OFFSET )))
#define GPWTM1_GPTMTAR_R                       (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTAR_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnR           (((BITBANDING_TA_GPTMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnR_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnR                      (((TA_GPTMR_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnR_OFFSET )))
#define GPWTM1_TA_GPTMTnR_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnR_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnR_LOW       (((BITBANDING_TW_GPWTMR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnR_LOW_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnR_LOW                  (((TW_GPWTMR_LOW_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnR_LOW_OFFSET )))
#define GPWTM1_TW_GPTMTnR_LOW_R                (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnR_LOW_OFFSET)))

/* GPWTM2 GPTMTAR*/
#define GPWTM2_BITBANDING_GPTMTAR              (((BITBANDING_GPTMTAR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAR_OFFSET)*32u))))
#define GPWTM2_GPTMTAR                         (((GPTMTAR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTAR_OFFSET )))
#define GPWTM2_GPTMTAR_R                       (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTAR_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnR           (((BITBANDING_TA_GPTMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnR_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnR                      (((TA_GPTMR_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnR_OFFSET )))
#define GPWTM2_TA_GPTMTnR_R                    (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnR_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnR_LOW       (((BITBANDING_TW_GPWTMR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnR_LOW_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnR_LOW                  (((TW_GPWTMR_LOW_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnR_LOW_OFFSET )))
#define GPWTM2_TW_GPTMTnR_LOW_R                (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnR_LOW_OFFSET)))

/* GPWTM3 GPTMTAR*/
#define GPWTM3_BITBANDING_GPTMTAR              (((BITBANDING_GPTMTAR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAR_OFFSET)*32u))))
#define GPWTM3_GPTMTAR                         (((GPTMTAR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTAR_OFFSET )))
#define GPWTM3_GPTMTAR_R                       (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTAR_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnR           (((BITBANDING_TA_GPTMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnR_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnR                      (((TA_GPTMR_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnR_OFFSET )))
#define GPWTM3_TA_GPTMTnR_R                    (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnR_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnR_LOW       (((BITBANDING_TW_GPWTMR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnR_LOW_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnR_LOW                  (((TW_GPWTMR_LOW_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnR_LOW_OFFSET )))
#define GPWTM3_TW_GPTMTnR_LOW_R                (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnR_LOW_OFFSET)))

/* GPWTM4 GPTMTAR*/
#define GPWTM4_BITBANDING_GPTMTAR              (((BITBANDING_GPTMTAR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAR_OFFSET)*32u))))
#define GPWTM4_GPTMTAR                         (((GPTMTAR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTAR_OFFSET )))
#define GPWTM4_GPTMTAR_R                       (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTAR_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnR           (((BITBANDING_TA_GPTMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnR_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnR                      (((TA_GPTMR_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnR_OFFSET )))
#define GPWTM4_TA_GPTMTnR_R                    (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnR_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnR_LOW       (((BITBANDING_TW_GPWTMR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnR_LOW_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnR_LOW                  (((TW_GPWTMR_LOW_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnR_LOW_OFFSET )))
#define GPWTM4_TW_GPTMTnR_LOW_R                (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnR_LOW_OFFSET)))

/* GPWTM5 GPTMTAR*/
#define GPWTM5_BITBANDING_GPTMTAR              (((BITBANDING_GPTMTAR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAR_OFFSET)*32u))))
#define GPWTM5_GPTMTAR                         (((GPTMTAR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTAR_OFFSET )))
#define GPWTM5_GPTMTAR_R                       (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTAR_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnR           (((BITBANDING_TA_GPTMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnR_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnR                      (((TA_GPTMR_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnR_OFFSET )))
#define GPWTM5_TA_GPTMTnR_R                    (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnR_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnR_LOW       (((BITBANDING_TW_GPWTMR_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnR_LOW_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnR_LOW                  (((TW_GPWTMR_LOW_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnR_LOW_OFFSET )))
#define GPWTM5_TW_GPTMTnR_LOW_R                (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnR_LOW_OFFSET)))

/*----------*/
#define GPTM_GPTMTAR_R_TAR_MASK                 ((uint32_t)0xFFFFFFFFu)
#define GPTM_GPTMTAR_R_TAR_BIT                  (0u)

#define GPTM_GPTMTAR_TAR_MASK                   ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnR_R_TnR_MASK              ((uint32_t)0x0000FFFFu)
#define GPTM_TA_GPTMTnR_R_TnR_BIT               (0u)

#define GPTM_TA_GPTMTnR_TnR_MASK                ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnR_R_TnR_MASK              ((uint32_t)0xFFFFFFFFu)
#define GPTM_TW_GPTMTnR_R_TnR_BIT               (0u)

#define GPTM_TW_GPTMTnR_TnR_MASK                ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTAR_R_TAR_MASK                ((uint32_t)0xFFFFFFFFu)
#define GPWTM_GPTMTAR_R_TAR_BIT                 (0u)

#define GPWTM_GPTMTAR_TAR_MASK                  ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnR_R_TnR_MASK             ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TA_GPTMTnR_R_TnR_BIT              (0u)

#define GPWTM_TA_GPTMTnR_TnR_MASK               ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnR_LOW_R_TnR_LOW_MASK     ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TW_GPTMTnR_LOW_R_TnR_LOW_BIT      (0u)

#define GPWTM_TW_GPTMTnR_LOW_TnR_LOW_MASK       ((uint32_t)0xFFFFFFFFu)
/*----------*/

/******************************************************************************************
************************************ 19 GPTMTBR *********************************************
******************************************************************************************/

/* GPTM0 GPTMTBR*/
#define GPTM0_BITBANDING_GPTMTBR               (((BITBANDING_GPTMTBR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBR_OFFSET)*32u))))
#define GPTM0_GPTMTBR                          (((GPTMTBR_TypeDef*)(GPTM0_BASE + GPTM_GPTMTBR_OFFSET )))
#define GPTM0_GPTMTBR_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTBR_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnR            (((BITBANDING_TB_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnR_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnR                       (((TB_GPTMR_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnR_OFFSET )))
#define GPTM0_TB_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnR_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMTnR            (((BITBANDING_TW_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnR_OFFSET)*32u))))
#define GPTM0_TW_GPTMTnR                       (((TW_GPTMR_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMTnR_OFFSET )))
#define GPTM0_TW_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMTnR_OFFSET)))

/* GPTM1 GPTMTBR*/
#define GPTM1_BITBANDING_GPTMTBR               (((BITBANDING_GPTMTBR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBR_OFFSET)*32u))))
#define GPTM1_GPTMTBR                          (((GPTMTBR_TypeDef*)(GPTM1_BASE + GPTM_GPTMTBR_OFFSET )))
#define GPTM1_GPTMTBR_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTBR_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnR            (((BITBANDING_TB_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnR_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnR                       (((TB_GPTMR_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnR_OFFSET )))
#define GPTM1_TB_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnR_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnR            (((BITBANDING_TW_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnR_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnR                       (((TW_GPTMR_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnR_OFFSET )))
#define GPTM1_TW_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnR_OFFSET)))

/* GPTM2 GPTMTBR*/
#define GPTM2_BITBANDING_GPTMTBR               (((BITBANDING_GPTMTBR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBR_OFFSET)*32u))))
#define GPTM2_GPTMTBR                          (((GPTMTBR_TypeDef*)(GPTM2_BASE + GPTM_GPTMTBR_OFFSET )))
#define GPTM2_GPTMTBR_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTBR_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnR            (((BITBANDING_TB_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnR_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnR                       (((TB_GPTMR_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnR_OFFSET )))
#define GPTM2_TB_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnR_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMTnR            (((BITBANDING_TW_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnR_OFFSET)*32u))))
#define GPTM2_TW_GPTMTnR                       (((TW_GPTMR_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMTnR_OFFSET )))
#define GPTM2_TW_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMTnR_OFFSET)))

/* GPTM3 GPTMTBR*/
#define GPTM3_BITBANDING_GPTMTBR               (((BITBANDING_GPTMTBR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBR_OFFSET)*32u))))
#define GPTM3_GPTMTBR                          (((GPTMTBR_TypeDef*)(GPTM3_BASE + GPTM_GPTMTBR_OFFSET )))
#define GPTM3_GPTMTBR_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTBR_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnR            (((BITBANDING_TB_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnR_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnR                       (((TB_GPTMR_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnR_OFFSET )))
#define GPTM3_TB_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnR_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMTnR            (((BITBANDING_TW_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnR_OFFSET)*32u))))
#define GPTM3_TW_GPTMTnR                       (((TW_GPTMR_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMTnR_OFFSET )))
#define GPTM3_TW_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMTnR_OFFSET)))

/* GPTM4 GPTMTBR*/
#define GPTM4_BITBANDING_GPTMTBR               (((BITBANDING_GPTMTBR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBR_OFFSET)*32u))))
#define GPTM4_GPTMTBR                          (((GPTMTBR_TypeDef*)(GPTM4_BASE + GPTM_GPTMTBR_OFFSET )))
#define GPTM4_GPTMTBR_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTBR_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnR            (((BITBANDING_TB_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnR_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnR                       (((TB_GPTMR_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnR_OFFSET )))
#define GPTM4_TB_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnR_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMTnR            (((BITBANDING_TW_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnR_OFFSET)*32u))))
#define GPTM4_TW_GPTMTnR                       (((TW_GPTMR_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMTnR_OFFSET )))
#define GPTM4_TW_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMTnR_OFFSET)))

/* GPTM5 GPTMTBR*/
#define GPTM5_BITBANDING_GPTMTBR               (((BITBANDING_GPTMTBR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBR_OFFSET)*32u))))
#define GPTM5_GPTMTBR                          (((GPTMTBR_TypeDef*)(GPTM5_BASE + GPTM_GPTMTBR_OFFSET )))
#define GPTM5_GPTMTBR_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTBR_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnR            (((BITBANDING_TB_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnR_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnR                       (((TB_GPTMR_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnR_OFFSET )))
#define GPTM5_TB_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnR_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMTnR            (((BITBANDING_TW_GPTMR_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnR_OFFSET)*32u))))
#define GPTM5_TW_GPTMTnR                       (((TW_GPTMR_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMTnR_OFFSET )))
#define GPTM5_TW_GPTMTnR_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMTnR_OFFSET)))

/* GPWTM0 GPTMTBR*/
#define GPWTM0_BITBANDING_GPTMTBR              (((BITBANDING_GPTMTBR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBR_OFFSET)*32u))))
#define GPWTM0_GPTMTBR                         (((GPTMTBR_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTBR_OFFSET )))
#define GPWTM0_GPTMTBR_R                       (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTBR_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnR           (((BITBANDING_TB_GPTMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnR_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnR                      (((TB_GPTMR_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnR_OFFSET )))
#define GPWTM0_TB_GPTMTnR_R                    (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnR_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnR_HIGH      (((BITBANDING_TW_GPWTMR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnR_HIGH_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnR_HIGH                 (((TW_GPWTMR_HIGH_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnR_HIGH_OFFSET )))
#define GPWTM0_TW_GPTMTnR_HIGH_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnR_HIGH_OFFSET)))

/* GPWTM1 GPTMTBR*/
#define GPWTM1_BITBANDING_GPTMTBR              (((BITBANDING_GPTMTBR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBR_OFFSET)*32u))))
#define GPWTM1_GPTMTBR                         (((GPTMTBR_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTBR_OFFSET )))
#define GPWTM1_GPTMTBR_R                       (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTBR_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnR           (((BITBANDING_TB_GPTMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnR_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnR                      (((TB_GPTMR_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnR_OFFSET )))
#define GPWTM1_TB_GPTMTnR_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnR_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnR_HIGH      (((BITBANDING_TW_GPWTMR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnR_HIGH_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnR_HIGH                 (((TW_GPWTMR_HIGH_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnR_HIGH_OFFSET )))
#define GPWTM1_TW_GPTMTnR_HIGH_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnR_HIGH_OFFSET)))

/* GPWTM2 GPTMTBR*/
#define GPWTM2_BITBANDING_GPTMTBR              (((BITBANDING_GPTMTBR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBR_OFFSET)*32u))))
#define GPWTM2_GPTMTBR                         (((GPTMTBR_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTBR_OFFSET )))
#define GPWTM2_GPTMTBR_R                       (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTBR_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnR           (((BITBANDING_TB_GPTMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnR_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnR                      (((TB_GPTMR_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnR_OFFSET )))
#define GPWTM2_TB_GPTMTnR_R                    (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnR_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnR_HIGH      (((BITBANDING_TW_GPWTMR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnR_HIGH_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnR_HIGH                 (((TW_GPWTMR_HIGH_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnR_HIGH_OFFSET )))
#define GPWTM2_TW_GPTMTnR_HIGH_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnR_HIGH_OFFSET)))

/* GPWTM3 GPTMTBR*/
#define GPWTM3_BITBANDING_GPTMTBR              (((BITBANDING_GPTMTBR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBR_OFFSET)*32u))))
#define GPWTM3_GPTMTBR                         (((GPTMTBR_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTBR_OFFSET )))
#define GPWTM3_GPTMTBR_R                       (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTBR_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnR           (((BITBANDING_TB_GPTMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnR_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnR                      (((TB_GPTMR_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnR_OFFSET )))
#define GPWTM3_TB_GPTMTnR_R                    (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnR_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnR_HIGH      (((BITBANDING_TW_GPWTMR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnR_HIGH_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnR_HIGH                 (((TW_GPWTMR_HIGH_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnR_HIGH_OFFSET )))
#define GPWTM3_TW_GPTMTnR_HIGH_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnR_HIGH_OFFSET)))

/* GPWTM4 GPTMTBR*/
#define GPWTM4_BITBANDING_GPTMTBR              (((BITBANDING_GPTMTBR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBR_OFFSET)*32u))))
#define GPWTM4_GPTMTBR                         (((GPTMTBR_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTBR_OFFSET )))
#define GPWTM4_GPTMTBR_R                       (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTBR_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnR           (((BITBANDING_TB_GPTMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnR_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnR                      (((TB_GPTMR_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnR_OFFSET )))
#define GPWTM4_TB_GPTMTnR_R                    (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnR_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnR_HIGH      (((BITBANDING_TW_GPWTMR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnR_HIGH_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnR_HIGH                 (((TW_GPWTMR_HIGH_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnR_HIGH_OFFSET )))
#define GPWTM4_TW_GPTMTnR_HIGH_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnR_HIGH_OFFSET)))

/* GPWTM5 GPTMTBR*/
#define GPWTM5_BITBANDING_GPTMTBR              (((BITBANDING_GPTMTBR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBR_OFFSET)*32u))))
#define GPWTM5_GPTMTBR                         (((GPTMTBR_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTBR_OFFSET )))
#define GPWTM5_GPTMTBR_R                       (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTBR_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnR           (((BITBANDING_TB_GPTMR_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnR_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnR                      (((TB_GPTMR_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnR_OFFSET )))
#define GPWTM5_TB_GPTMTnR_R                    (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnR_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnR_HIGH      (((BITBANDING_TW_GPWTMR_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnR_HIGH_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnR_HIGH                 (((TW_GPWTMR_HIGH_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnR_HIGH_OFFSET )))
#define GPWTM5_TW_GPTMTnR_HIGH_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnR_HIGH_OFFSET)))

/*----------*/
#define GPTM_GPTMTBR_R_TBR_MASK                 ((uint32_t)0xFFFFFFFFu)
#define GPTM_GPTMTBR_R_TBR_BIT                  (0u)

#define GPTM_GPTMTBR_TBR_MASK                   ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnR_R_TnR_MASK              ((uint32_t)0x0000FFFFu)
#define GPTM_TB_GPTMTnR_R_TnR_BIT               (0u)

#define GPTM_TB_GPTMTnR_TnR_MASK                ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnR_R_TnR_MASK              ((uint32_t)0xFFFFFFFFu)
#define GPTM_TW_GPTMTnR_R_TnR_BIT               (0u)

#define GPTM_TW_GPTMTnR_TnR_MASK                ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBR_R_TBR_MASK                ((uint32_t)0xFFFFFFFFu)
#define GPWTM_GPTMTBR_R_TBR_BIT                 (0u)

#define GPWTM_GPTMTBR_TBR_MASK                  ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnR_R_TnR_MASK             ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TB_GPTMTnR_R_TnR_BIT              (0u)

#define GPWTM_TB_GPTMTnR_TnR_MASK               ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnR_HIGH_R_TnR_HIGH_MASK   ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TW_GPTMTnR_HIGH_R_TnR_HIGH_BIT    (0u)

#define GPWTM_TW_GPTMTnR_HIGH_TnR_HIGH_MASK     ((uint32_t)0xFFFFFFFFu)
/*----------*/


/******************************************************************************************
************************************ 20 GPTMTAV *********************************************
******************************************************************************************/

/* GPTM0 GPTMTAV*/
#define GPTM0_BITBANDING_GPTMTAV               (((BITBANDING_GPTMTAV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAV_OFFSET)*32u))))
#define GPTM0_GPTMTAV                          (((GPTMTAV_TypeDef*)(GPTM0_BASE + GPTM_GPTMTAV_OFFSET )))
#define GPTM0_GPTMTAV_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTAV_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnV            (((BITBANDING_TA_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnV_OFFSET)*32u))))
#define GPTM0_TA_GPTMTnV                       (((TA_GPTMV_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnV_OFFSET )))
#define GPTM0_TA_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnV_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMTnV            (((BITBANDING_TW_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnV_OFFSET)*32u))))
#define GPTM0_TW_GPTMTnV                       (((TW_GPTMV_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMTnV_OFFSET )))
#define GPTM0_TW_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMTnV_OFFSET)))

/* GPTM1 GPTMTAV*/
#define GPTM1_BITBANDING_GPTMTAV               (((BITBANDING_GPTMTAV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAV_OFFSET)*32u))))
#define GPTM1_GPTMTAV                          (((GPTMTAV_TypeDef*)(GPTM1_BASE + GPTM_GPTMTAV_OFFSET )))
#define GPTM1_GPTMTAV_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTAV_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnV            (((BITBANDING_TA_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnV_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnV                       (((TA_GPTMV_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnV_OFFSET )))
#define GPTM1_TA_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnV_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnV            (((BITBANDING_TW_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnV_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnV                       (((TW_GPTMV_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnV_OFFSET )))
#define GPTM1_TW_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnV_OFFSET)))

/* GPTM2 GPTMTAV*/
#define GPTM2_BITBANDING_GPTMTAV               (((BITBANDING_GPTMTAV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAV_OFFSET)*32u))))
#define GPTM2_GPTMTAV                          (((GPTMTAV_TypeDef*)(GPTM2_BASE + GPTM_GPTMTAV_OFFSET )))
#define GPTM2_GPTMTAV_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTAV_OFFSET)))

#define GPTM2_BITBANDING_TA_GPTMTnV            (((BITBANDING_TA_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnV_OFFSET)*32u))))
#define GPTM2_TA_GPTMTnV                       (((TA_GPTMV_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnV_OFFSET )))
#define GPTM2_TA_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnV_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMTnV            (((BITBANDING_TW_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnV_OFFSET)*32u))))
#define GPTM2_TW_GPTMTnV                       (((TW_GPTMV_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMTnV_OFFSET )))
#define GPTM2_TW_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMTnV_OFFSET)))

/* GPTM3 GPTMTAV*/
#define GPTM3_BITBANDING_GPTMTAV               (((BITBANDING_GPTMTAV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAV_OFFSET)*32u))))
#define GPTM3_GPTMTAV                          (((GPTMTAV_TypeDef*)(GPTM3_BASE + GPTM_GPTMTAV_OFFSET )))
#define GPTM3_GPTMTAV_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTAV_OFFSET)))

#define GPTM3_BITBANDING_TA_GPTMTnV            (((BITBANDING_TA_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnV_OFFSET)*32u))))
#define GPTM3_TA_GPTMTnV                       (((TA_GPTMV_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnV_OFFSET )))
#define GPTM3_TA_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnV_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMTnV            (((BITBANDING_TW_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnV_OFFSET)*32u))))
#define GPTM3_TW_GPTMTnV                       (((TW_GPTMV_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMTnV_OFFSET )))
#define GPTM3_TW_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMTnV_OFFSET)))

/* GPTM4 GPTMTAV*/
#define GPTM4_BITBANDING_GPTMTAV               (((BITBANDING_GPTMTAV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAV_OFFSET)*32u))))
#define GPTM4_GPTMTAV                          (((GPTMTAV_TypeDef*)(GPTM4_BASE + GPTM_GPTMTAV_OFFSET )))
#define GPTM4_GPTMTAV_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTAV_OFFSET)))

#define GPTM4_BITBANDING_TA_GPTMTnV            (((BITBANDING_TA_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnV_OFFSET)*32u))))
#define GPTM4_TA_GPTMTnV                       (((TA_GPTMV_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnV_OFFSET )))
#define GPTM4_TA_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnV_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMTnV            (((BITBANDING_TW_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnV_OFFSET)*32u))))
#define GPTM4_TW_GPTMTnV                       (((TW_GPTMV_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMTnV_OFFSET )))
#define GPTM4_TW_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMTnV_OFFSET)))

/* GPTM5 GPTMTAV*/
#define GPTM5_BITBANDING_GPTMTAV               (((BITBANDING_GPTMTAV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAV_OFFSET)*32u))))
#define GPTM5_GPTMTAV                          (((GPTMTAV_TypeDef*)(GPTM5_BASE + GPTM_GPTMTAV_OFFSET )))
#define GPTM5_GPTMTAV_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTAV_OFFSET)))

#define GPTM5_BITBANDING_TA_GPTMTnV            (((BITBANDING_TA_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnV_OFFSET)*32u))))
#define GPTM5_TA_GPTMTnV                       (((TA_GPTMV_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnV_OFFSET )))
#define GPTM5_TA_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnV_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMTnV            (((BITBANDING_TW_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnV_OFFSET)*32u))))
#define GPTM5_TW_GPTMTnV                       (((TW_GPTMV_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMTnV_OFFSET )))
#define GPTM5_TW_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMTnV_OFFSET)))

/* GPWTM0 GPTMTAV*/
#define GPWTM0_BITBANDING_GPTMTAV              (((BITBANDING_GPTMTAV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAV_OFFSET)*32u))))
#define GPWTM0_GPTMTAV                         (((GPTMTAV_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTAV_OFFSET )))
#define GPWTM0_GPTMTAV_R                       (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTAV_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnV           (((BITBANDING_TA_GPTMV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnV_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnV                      (((TA_GPTMV_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnV_OFFSET )))
#define GPWTM0_TA_GPTMTnV_R                    (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnV_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnV_LOW       (((BITBANDING_TW_GPWTMV_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnV_LOW_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnV_LOW                  (((TW_GPWTMV_LOW_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnV_LOW_OFFSET )))
#define GPWTM0_TW_GPTMTnV_LOW_R                (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnV_LOW_OFFSET)))

/* GPWTM1 GPTMTAV*/
#define GPWTM1_BITBANDING_GPTMTAV              (((BITBANDING_GPTMTAV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAV_OFFSET)*32u))))
#define GPWTM1_GPTMTAV                         (((GPTMTAV_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTAV_OFFSET )))
#define GPWTM1_GPTMTAV_R                       (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTAV_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnV           (((BITBANDING_TA_GPTMV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnV_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnV                      (((TA_GPTMV_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnV_OFFSET )))
#define GPWTM1_TA_GPTMTnV_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnV_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnV_LOW       (((BITBANDING_TW_GPWTMV_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnV_LOW_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnV_LOW                  (((TW_GPWTMV_LOW_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnV_LOW_OFFSET )))
#define GPWTM1_TW_GPTMTnV_LOW_R                (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnV_LOW_OFFSET)))

/* GPWTM2 GPTMTAV*/
#define GPWTM2_BITBANDING_GPTMTAV              (((BITBANDING_GPTMTAV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAV_OFFSET)*32u))))
#define GPWTM2_GPTMTAV                         (((GPTMTAV_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTAV_OFFSET )))
#define GPWTM2_GPTMTAV_R                       (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTAV_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnV           (((BITBANDING_TA_GPTMV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnV_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnV                      (((TA_GPTMV_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnV_OFFSET )))
#define GPWTM2_TA_GPTMTnV_R                    (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnV_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnV_LOW       (((BITBANDING_TW_GPWTMV_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnV_LOW_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnV_LOW                  (((TW_GPWTMV_LOW_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnV_LOW_OFFSET )))
#define GPWTM2_TW_GPTMTnV_LOW_R                (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnV_LOW_OFFSET)))

/* GPWTM3 GPTMTAV*/
#define GPWTM3_BITBANDING_GPTMTAV              (((BITBANDING_GPTMTAV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAV_OFFSET)*32u))))
#define GPWTM3_GPTMTAV                         (((GPTMTAV_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTAV_OFFSET )))
#define GPWTM3_GPTMTAV_R                       (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTAV_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnV           (((BITBANDING_TA_GPTMV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnV_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnV                      (((TA_GPTMV_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnV_OFFSET )))
#define GPWTM3_TA_GPTMTnV_R                    (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnV_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnV_LOW       (((BITBANDING_TW_GPWTMV_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnV_LOW_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnV_LOW                  (((TW_GPWTMV_LOW_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnV_LOW_OFFSET )))
#define GPWTM3_TW_GPTMTnV_LOW_R                (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnV_LOW_OFFSET)))

/* GPWTM4 GPTMTAV*/
#define GPWTM4_BITBANDING_GPTMTAV              (((BITBANDING_GPTMTAV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAV_OFFSET)*32u))))
#define GPWTM4_GPTMTAV                         (((GPTMTAV_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTAV_OFFSET )))
#define GPWTM4_GPTMTAV_R                       (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTAV_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnV           (((BITBANDING_TA_GPTMV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnV_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnV                      (((TA_GPTMV_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnV_OFFSET )))
#define GPWTM4_TA_GPTMTnV_R                    (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnV_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnV_LOW       (((BITBANDING_TW_GPWTMV_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnV_LOW_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnV_LOW                  (((TW_GPWTMV_LOW_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnV_LOW_OFFSET )))
#define GPWTM4_TW_GPTMTnV_LOW_R                (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnV_LOW_OFFSET)))

/* GPWTM5 GPTMTAV*/
#define GPWTM5_BITBANDING_GPTMTAV              (((BITBANDING_GPTMTAV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAV_OFFSET)*32u))))
#define GPWTM5_GPTMTAV                         (((GPTMTAV_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTAV_OFFSET )))
#define GPWTM5_GPTMTAV_R                       (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTAV_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnV           (((BITBANDING_TA_GPTMV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnV_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnV                      (((TA_GPTMV_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnV_OFFSET )))
#define GPWTM5_TA_GPTMTnV_R                    (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnV_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnV_LOW       (((BITBANDING_TW_GPWTMV_LOW_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnV_LOW_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnV_LOW                  (((TW_GPWTMV_LOW_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnV_LOW_OFFSET )))
#define GPWTM5_TW_GPTMTnV_LOW_R                (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnV_LOW_OFFSET)))

/*----------*/
#define GPTM_GPTMTAV_R_TAV_MASK                 ((uint32_t)0xFFFFFFFFu)
#define GPTM_GPTMTAV_R_TAV_BIT                  (0u)

#define GPTM_GPTMTAV_TAV_MASK                   ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnV_R_TnV_MASK              ((uint32_t)0x0000FFFFu)
#define GPTM_TA_GPTMTnV_R_TnV_BIT               (0u)

#define GPTM_TA_GPTMTnV_TnV_MASK                ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnV_R_TnV_MASK              ((uint32_t)0xFFFFFFFFu)
#define GPTM_TW_GPTMTnV_R_TnV_BIT               (0u)

#define GPTM_TW_GPTMTnV_TnV_MASK                ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTAV_R_TAV_MASK                ((uint32_t)0xFFFFFFFFu)
#define GPWTM_GPTMTAV_R_TAV_BIT                 (0u)

#define GPWTM_GPTMTAV_TAV_MASK                  ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnV_R_TnV_MASK             ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TA_GPTMTnV_R_TnV_BIT              (0u)

#define GPWTM_TA_GPTMTnV_TnV_MASK               ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnV_LOW_R_TnV_LOW_MASK     ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TW_GPTMTnV_LOW_R_TnV_LOW_BIT      (0u)

#define GPWTM_TW_GPTMTnV_LOW_TnV_LOW_MASK       ((uint32_t)0xFFFFFFFFu)
/*----------*/



/******************************************************************************************
************************************ 21 GPTMTBV *********************************************
******************************************************************************************/

/* GPTM0 GPTMTBV*/
#define GPTM0_BITBANDING_GPTMTBV               (((BITBANDING_GPTMTBV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBV_OFFSET)*32u))))
#define GPTM0_GPTMTBV                          (((GPTMTBV_TypeDef*)(GPTM0_BASE + GPTM_GPTMTBV_OFFSET )))
#define GPTM0_GPTMTBV_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTBV_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnV            (((BITBANDING_TB_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnV_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnV                       (((TB_GPTMV_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnV_OFFSET )))
#define GPTM0_TB_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnV_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMTnV            (((BITBANDING_TW_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMTnV_OFFSET)*32u))))
#define GPTM0_TW_GPTMTnV                       (((TW_GPTMV_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMTnV_OFFSET )))
#define GPTM0_TW_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMTnV_OFFSET)))

/* GPTM1 GPTMTBV*/
#define GPTM1_BITBANDING_GPTMTBV               (((BITBANDING_GPTMTBV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBV_OFFSET)*32u))))
#define GPTM1_GPTMTBV                          (((GPTMTBV_TypeDef*)(GPTM1_BASE + GPTM_GPTMTBV_OFFSET )))
#define GPTM1_GPTMTBV_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTBV_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnV            (((BITBANDING_TB_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnV_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnV                       (((TB_GPTMV_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnV_OFFSET )))
#define GPTM1_TB_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnV_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMTnV            (((BITBANDING_TW_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMTnV_OFFSET)*32u))))
#define GPTM1_TW_GPTMTnV                       (((TW_GPTMV_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMTnV_OFFSET )))
#define GPTM1_TW_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMTnV_OFFSET)))

/* GPTM2 GPTMTBV*/
#define GPTM2_BITBANDING_GPTMTBV               (((BITBANDING_GPTMTBV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBV_OFFSET)*32u))))
#define GPTM2_GPTMTBV                          (((GPTMTBV_TypeDef*)(GPTM2_BASE + GPTM_GPTMTBV_OFFSET )))
#define GPTM2_GPTMTBV_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTBV_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnV            (((BITBANDING_TB_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnV_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnV                       (((TB_GPTMV_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnV_OFFSET )))
#define GPTM2_TB_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnV_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMTnV            (((BITBANDING_TW_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMTnV_OFFSET)*32u))))
#define GPTM2_TW_GPTMTnV                       (((TW_GPTMV_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMTnV_OFFSET )))
#define GPTM2_TW_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMTnV_OFFSET)))

/* GPTM3 GPTMTBV*/
#define GPTM3_BITBANDING_GPTMTBV               (((BITBANDING_GPTMTBV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBV_OFFSET)*32u))))
#define GPTM3_GPTMTBV                          (((GPTMTBV_TypeDef*)(GPTM3_BASE + GPTM_GPTMTBV_OFFSET )))
#define GPTM3_GPTMTBV_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTBV_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnV            (((BITBANDING_TB_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnV_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnV                       (((TB_GPTMV_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnV_OFFSET )))
#define GPTM3_TB_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnV_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMTnV            (((BITBANDING_TW_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMTnV_OFFSET)*32u))))
#define GPTM3_TW_GPTMTnV                       (((TW_GPTMV_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMTnV_OFFSET )))
#define GPTM3_TW_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMTnV_OFFSET)))

/* GPTM4 GPTMTBV*/
#define GPTM4_BITBANDING_GPTMTBV               (((BITBANDING_GPTMTBV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBV_OFFSET)*32u))))
#define GPTM4_GPTMTBV                          (((GPTMTBV_TypeDef*)(GPTM4_BASE + GPTM_GPTMTBV_OFFSET )))
#define GPTM4_GPTMTBV_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTBV_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnV            (((BITBANDING_TB_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnV_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnV                       (((TB_GPTMV_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnV_OFFSET )))
#define GPTM4_TB_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnV_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMTnV            (((BITBANDING_TW_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMTnV_OFFSET)*32u))))
#define GPTM4_TW_GPTMTnV                       (((TW_GPTMV_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMTnV_OFFSET )))
#define GPTM4_TW_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMTnV_OFFSET)))

/* GPTM5 GPTMTBV*/
#define GPTM5_BITBANDING_GPTMTBV               (((BITBANDING_GPTMTBV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBV_OFFSET)*32u))))
#define GPTM5_GPTMTBV                          (((GPTMTBV_TypeDef*)(GPTM5_BASE + GPTM_GPTMTBV_OFFSET )))
#define GPTM5_GPTMTBV_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTBV_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnV            (((BITBANDING_TB_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnV_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnV                       (((TB_GPTMV_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnV_OFFSET )))
#define GPTM5_TB_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnV_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMTnV            (((BITBANDING_TW_GPTMV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMTnV_OFFSET)*32u))))
#define GPTM5_TW_GPTMTnV                       (((TW_GPTMV_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMTnV_OFFSET )))
#define GPTM5_TW_GPTMTnV_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMTnV_OFFSET)))

/* GPWTM0 GPTMTBV*/
#define GPWTM0_BITBANDING_GPTMTBV              (((BITBANDING_GPTMTBV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBV_OFFSET)*32u))))
#define GPWTM0_GPTMTBV                         (((GPTMTBV_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTBV_OFFSET )))
#define GPWTM0_GPTMTBV_R                       (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTBV_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnV           (((BITBANDING_TB_GPTMV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnV_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnV                      (((TB_GPTMV_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnV_OFFSET )))
#define GPWTM0_TB_GPTMTnV_R                    (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnV_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMTnV_HIGH      (((BITBANDING_TW_GPWTMV_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMTnV_HIGH_OFFSET)*32u))))
#define GPWTM0_TW_GPTMTnV_HIGH                 (((TW_GPWTMV_HIGH_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMTnV_HIGH_OFFSET )))
#define GPWTM0_TW_GPTMTnV_HIGH_R               (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMTnV_HIGH_OFFSET)))

/* GPWTM1 GPTMTBV*/
#define GPWTM1_BITBANDING_GPTMTBV              (((BITBANDING_GPTMTBV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBV_OFFSET)*32u))))
#define GPWTM1_GPTMTBV                         (((GPTMTBV_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTBV_OFFSET )))
#define GPWTM1_GPTMTBV_R                       (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTBV_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnV           (((BITBANDING_TB_GPTMV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnV_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnV                      (((TB_GPTMV_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnV_OFFSET )))
#define GPWTM1_TB_GPTMTnV_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnV_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMTnV_HIGH      (((BITBANDING_TW_GPWTMV_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMTnV_HIGH_OFFSET)*32u))))
#define GPWTM1_TW_GPTMTnV_HIGH                 (((TW_GPWTMV_HIGH_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMTnV_HIGH_OFFSET )))
#define GPWTM1_TW_GPTMTnV_HIGH_R               (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMTnV_HIGH_OFFSET)))

/* GPWTM2 GPTMTBV*/
#define GPWTM2_BITBANDING_GPTMTBV              (((BITBANDING_GPTMTBV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBV_OFFSET)*32u))))
#define GPWTM2_GPTMTBV                         (((GPTMTBV_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTBV_OFFSET )))
#define GPWTM2_GPTMTBV_R                       (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTBV_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnV           (((BITBANDING_TB_GPTMV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnV_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnV                      (((TB_GPTMV_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnV_OFFSET )))
#define GPWTM2_TB_GPTMTnV_R                    (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnV_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMTnV_HIGH      (((BITBANDING_TW_GPWTMV_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMTnV_HIGH_OFFSET)*32u))))
#define GPWTM2_TW_GPTMTnV_HIGH                 (((TW_GPWTMV_HIGH_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMTnV_HIGH_OFFSET )))
#define GPWTM2_TW_GPTMTnV_HIGH_R               (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMTnV_HIGH_OFFSET)))

/* GPWTM3 GPTMTBV*/
#define GPWTM3_BITBANDING_GPTMTBV              (((BITBANDING_GPTMTBV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBV_OFFSET)*32u))))
#define GPWTM3_GPTMTBV                         (((GPTMTBV_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTBV_OFFSET )))
#define GPWTM3_GPTMTBV_R                       (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTBV_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnV           (((BITBANDING_TB_GPTMV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnV_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnV                      (((TB_GPTMV_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnV_OFFSET )))
#define GPWTM3_TB_GPTMTnV_R                    (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnV_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMTnV_HIGH      (((BITBANDING_TW_GPWTMV_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMTnV_HIGH_OFFSET)*32u))))
#define GPWTM3_TW_GPTMTnV_HIGH                 (((TW_GPWTMV_HIGH_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMTnV_HIGH_OFFSET )))
#define GPWTM3_TW_GPTMTnV_HIGH_R               (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMTnV_HIGH_OFFSET)))

/* GPWTM4 GPTMTBV*/
#define GPWTM4_BITBANDING_GPTMTBV              (((BITBANDING_GPTMTBV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBV_OFFSET)*32u))))
#define GPWTM4_GPTMTBV                         (((GPTMTBV_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTBV_OFFSET )))
#define GPWTM4_GPTMTBV_R                       (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTBV_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnV           (((BITBANDING_TB_GPTMV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnV_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnV                      (((TB_GPTMV_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnV_OFFSET )))
#define GPWTM4_TB_GPTMTnV_R                    (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnV_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMTnV_HIGH      (((BITBANDING_TW_GPWTMV_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMTnV_HIGH_OFFSET)*32u))))
#define GPWTM4_TW_GPTMTnV_HIGH                 (((TW_GPWTMV_HIGH_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMTnV_HIGH_OFFSET )))
#define GPWTM4_TW_GPTMTnV_HIGH_R               (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMTnV_HIGH_OFFSET)))

/* GPWTM5 GPTMTBV*/
#define GPWTM5_BITBANDING_GPTMTBV              (((BITBANDING_GPTMTBV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBV_OFFSET)*32u))))
#define GPWTM5_GPTMTBV                         (((GPTMTBV_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTBV_OFFSET )))
#define GPWTM5_GPTMTBV_R                       (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTBV_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnV           (((BITBANDING_TB_GPTMV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnV_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnV                      (((TB_GPTMV_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnV_OFFSET )))
#define GPWTM5_TB_GPTMTnV_R                    (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnV_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMTnV_HIGH      (((BITBANDING_TW_GPWTMV_HIGH_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMTnV_HIGH_OFFSET)*32u))))
#define GPWTM5_TW_GPTMTnV_HIGH                 (((TW_GPWTMV_HIGH_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMTnV_HIGH_OFFSET )))
#define GPWTM5_TW_GPTMTnV_HIGH_R               (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMTnV_HIGH_OFFSET)))

/*----------*/
#define GPTM_GPTMTBV_R_TBV_MASK                 ((uint32_t)0xFFFFFFFFu)
#define GPTM_GPTMTBV_R_TBV_BIT                  (0u)

#define GPTM_GPTMTBV_TBV_MASK                   ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnV_R_TnV_MASK              ((uint32_t)0x0000FFFFu)
#define GPTM_TB_GPTMTnV_R_TnV_BIT               (0u)

#define GPTM_TB_GPTMTnV_TnV_MASK                ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMTnV_R_TnV_MASK              ((uint32_t)0xFFFFFFFFu)
#define GPTM_TW_GPTMTnV_R_TnV_BIT               (0u)

#define GPTM_TW_GPTMTnV_TnV_MASK                ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBV_R_TBV_MASK                ((uint32_t)0xFFFFFFFFu)
#define GPWTM_GPTMTBV_R_TBV_BIT                 (0u)

#define GPWTM_GPTMTBV_TBV_MASK                  ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnV_R_TnV_MASK             ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TB_GPTMTnV_R_TnV_BIT              (0u)

#define GPWTM_TB_GPTMTnV_TnV_MASK               ((uint32_t)0xFFFFFFFFu)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMTnV_HIGH_R_TnV_HIGH_MASK   ((uint32_t)0xFFFFFFFFu)
#define GPWTM_TW_GPTMTnV_HIGH_R_TnV_HIGH_BIT    (0u)

#define GPWTM_TW_GPTMTnV_HIGH_TnV_HIGH_MASK     ((uint32_t)0xFFFFFFFFu)
/*----------*/


/******************************************************************************************
************************************ 22 GPTMRTCPD *********************************************
******************************************************************************************/

/* GPTM0 GPTMRTCPD*/
#define GPTM0_BITBANDING_GPTMRTCPD               (((BITBANDING_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRTCPD_OFFSET)*32u))))
#define GPTM0_GPTMRTCPD                          (((GPTMRTCPD_TypeDef*)(GPTM0_BASE + GPTM_GPTMRTCPD_OFFSET )))
#define GPTM0_GPTMRTCPD_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMRTCPD_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMRTCPD            (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPTM0_TW_GPTMRTCPD                       (((TW_GPTMRTCPD_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMRTCPD_OFFSET )))
#define GPTM0_TW_GPTMRTCPD_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMRTCPD_OFFSET)))

/* GPTM1 GPTMRTCPD*/
#define GPTM1_BITBANDING_GPTMRTCPD               (((BITBANDING_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRTCPD_OFFSET)*32u))))
#define GPTM1_GPTMRTCPD                          (((GPTMRTCPD_TypeDef*)(GPTM1_BASE + GPTM_GPTMRTCPD_OFFSET )))
#define GPTM1_GPTMRTCPD_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMRTCPD_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMRTCPD            (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPTM1_TW_GPTMRTCPD                       (((TW_GPTMRTCPD_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMRTCPD_OFFSET )))
#define GPTM1_TW_GPTMRTCPD_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMRTCPD_OFFSET)))

/* GPTM2 GPTMRTCPD*/
#define GPTM2_BITBANDING_GPTMRTCPD               (((BITBANDING_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRTCPD_OFFSET)*32u))))
#define GPTM2_GPTMRTCPD                          (((GPTMRTCPD_TypeDef*)(GPTM2_BASE + GPTM_GPTMRTCPD_OFFSET )))
#define GPTM2_GPTMRTCPD_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMRTCPD_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMRTCPD            (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPTM2_TW_GPTMRTCPD                       (((TW_GPTMRTCPD_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMRTCPD_OFFSET )))
#define GPTM2_TW_GPTMRTCPD_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMRTCPD_OFFSET)))

/* GPTM3 GPTMRTCPD*/
#define GPTM3_BITBANDING_GPTMRTCPD               (((BITBANDING_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRTCPD_OFFSET)*32u))))
#define GPTM3_GPTMRTCPD                          (((GPTMRTCPD_TypeDef*)(GPTM3_BASE + GPTM_GPTMRTCPD_OFFSET )))
#define GPTM3_GPTMRTCPD_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMRTCPD_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMRTCPD            (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPTM3_TW_GPTMRTCPD                       (((TW_GPTMRTCPD_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMRTCPD_OFFSET )))
#define GPTM3_TW_GPTMRTCPD_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMRTCPD_OFFSET)))

/* GPTM4 GPTMRTCPD*/
#define GPTM4_BITBANDING_GPTMRTCPD               (((BITBANDING_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRTCPD_OFFSET)*32u))))
#define GPTM4_GPTMRTCPD                          (((GPTMRTCPD_TypeDef*)(GPTM4_BASE + GPTM_GPTMRTCPD_OFFSET )))
#define GPTM4_GPTMRTCPD_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMRTCPD_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMRTCPD            (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPTM4_TW_GPTMRTCPD                       (((TW_GPTMRTCPD_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMRTCPD_OFFSET )))
#define GPTM4_TW_GPTMRTCPD_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMRTCPD_OFFSET)))

/* GPTM5 GPTMRTCPD*/
#define GPTM5_BITBANDING_GPTMRTCPD               (((BITBANDING_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRTCPD_OFFSET)*32u))))
#define GPTM5_GPTMRTCPD                          (((GPTMRTCPD_TypeDef*)(GPTM5_BASE + GPTM_GPTMRTCPD_OFFSET )))
#define GPTM5_GPTMRTCPD_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMRTCPD_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMRTCPD            (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPTM5_TW_GPTMRTCPD                       (((TW_GPTMRTCPD_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMRTCPD_OFFSET )))
#define GPTM5_TW_GPTMRTCPD_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMRTCPD_OFFSET)))

/* GPWTM0 GPTMRTCPD*/
#define GPWTM0_BITBANDING_GPTMRTCPD              (((BITBANDING_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM0_GPTMRTCPD                         (((GPTMRTCPD_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMRTCPD_OFFSET )))
#define GPWTM0_GPTMRTCPD_R                       (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMRTCPD_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMRTCPD           (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM0_TW_GPTMRTCPD                      (((TW_GPTMRTCPD_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMRTCPD_OFFSET )))
#define GPWTM0_TW_GPTMRTCPD_R                    (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMRTCPD_OFFSET)))

/* GPWTM1 GPTMRTCPD*/
#define GPWTM1_BITBANDING_GPTMRTCPD              (((BITBANDING_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM1_GPTMRTCPD                         (((GPTMRTCPD_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMRTCPD_OFFSET )))
#define GPWTM1_GPTMRTCPD_R                       (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMRTCPD_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMRTCPD           (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM1_TW_GPTMRTCPD                      (((TW_GPTMRTCPD_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMRTCPD_OFFSET )))
#define GPWTM1_TW_GPTMRTCPD_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMRTCPD_OFFSET)))

/* GPWTM2 GPTMRTCPD*/
#define GPWTM2_BITBANDING_GPTMRTCPD              (((BITBANDING_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM2_GPTMRTCPD                         (((GPTMRTCPD_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMRTCPD_OFFSET )))
#define GPWTM2_GPTMRTCPD_R                       (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMRTCPD_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMRTCPD           (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM2_TW_GPTMRTCPD                      (((TW_GPTMRTCPD_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMRTCPD_OFFSET )))
#define GPWTM2_TW_GPTMRTCPD_R                    (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMRTCPD_OFFSET)))

/* GPWTM3 GPTMRTCPD*/
#define GPWTM3_BITBANDING_GPTMRTCPD              (((BITBANDING_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM3_GPTMRTCPD                         (((GPTMRTCPD_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMRTCPD_OFFSET )))
#define GPWTM3_GPTMRTCPD_R                       (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMRTCPD_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMRTCPD           (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM3_TW_GPTMRTCPD                      (((TW_GPTMRTCPD_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMRTCPD_OFFSET )))
#define GPWTM3_TW_GPTMRTCPD_R                    (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMRTCPD_OFFSET)))

/* GPWTM4 GPTMRTCPD*/
#define GPWTM4_BITBANDING_GPTMRTCPD              (((BITBANDING_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM4_GPTMRTCPD                         (((GPTMRTCPD_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMRTCPD_OFFSET )))
#define GPWTM4_GPTMRTCPD_R                       (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMRTCPD_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMRTCPD           (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM4_TW_GPTMRTCPD                      (((TW_GPTMRTCPD_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMRTCPD_OFFSET )))
#define GPWTM4_TW_GPTMRTCPD_R                    (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMRTCPD_OFFSET)))

/* GPWTM5 GPTMRTCPD*/
#define GPWTM5_BITBANDING_GPTMRTCPD              (((BITBANDING_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM5_GPTMRTCPD                         (((GPTMRTCPD_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMRTCPD_OFFSET )))
#define GPWTM5_GPTMRTCPD_R                       (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMRTCPD_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMRTCPD           (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM5_TW_GPTMRTCPD                      (((TW_GPTMRTCPD_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMRTCPD_OFFSET )))
#define GPWTM5_TW_GPTMRTCPD_R                    (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMRTCPD_OFFSET)))


/*----------*/
#define GPTM_GPTMRTCPD_R_RTCPD_MASK                 ((uint32_t)0x0000FFFFu)
#define GPTM_GPTMRTCPD_R_RTCPD_BIT                  (0u)
#define GPTM_GPTMRTCPD_R_RTCPD_DEFAULT             ((uint32_t)0x00007FFFu)

#define GPTM_GPTMRTCPD_RTCPD_MASK                   ((uint32_t)0x0000FFFFu)
#define GPTM_GPTMRTCPD_RTCPD_DEFAULT                ((uint32_t)0x00007FFFu)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMRTCPD_R_RTCPD_MASK              ((uint32_t)0x0000FFFFu)
#define GPTM_TW_GPTMRTCPD_R_RTCPD_BIT               (0u)
#define GPTM_TW_GPTMRTCPD_R_RTCPD_DEFAULT           ((uint32_t)0x00007FFFu)


#define GPTM_TW_GPTMRTCPD_RTCPD_MASK                ((uint32_t)0x0000FFFFu)
#define GPTM_TW_GPTMRTCPD_RTCPD_DEFAULT             ((uint32_t)0x00007FFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMRTCPD_R_RTCPD_MASK                ((uint32_t)0x0000FFFFu)
#define GPWTM_GPTMRTCPD_R_RTCPD_BIT                 (0u)
#define GPWTM_GPTMRTCPD_R_RTCPD_DEFAULT             ((uint32_t)0x00007FFFu)

#define GPWTM_GPTMRTCPD_RTCPD_MASK                  ((uint32_t)0x0000FFFFu)
#define GPWTM_GPTMRTCPD_RTCPD_DEFAULT               ((uint32_t)0x00007FFFu)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMRTCPD_R_RTCPD_MASK             ((uint32_t)0x0000FFFFu)
#define GPWTM_TW_GPTMRTCPD_R_RTCPD_BIT              (0u)
#define GPWTM_TW_GPTMRTCPD_R_RTCPD_DEFAULT          ((uint32_t)0x00007FFFu)

#define GPWTM_TW_GPTMRTCPD_RTCPD_MASK               ((uint32_t)0x0000FFFFu)
#define GPWTM_TW_GPTMRTCPD_RTCPD_DEFAULT            ((uint32_t)0x00007FFFu)
/*----------*/


/******************************************************************************************
************************************ 23 GPTMTAPS *********************************************
******************************************************************************************/

/* GPTM0 GPTMTAPS*/
#define GPTM0_BITBANDING_GPTMTAPS               (((BITBANDING_GPTMTAPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAPS_OFFSET)*32u))))
#define GPTM0_GPTMTAPS                          (((GPTMTAPS_TypeDef*)(GPTM0_BASE + GPTM_GPTMTAPS_OFFSET )))
#define GPTM0_GPTMTAPS_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTAPS_OFFSET)))

#define GPTM0_BITBANDING_TA_GPTMTnPS            (((BITBANDING_TA_GPTMPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TA_GPTMTnPS_OFFSET)*32u))))
#define GPTM0_TA_GPTMTnPS                       (((TA_GPTMPS_TypeDef*)(GPTM0_BASE + GPTM_TA_GPTMTnPS_OFFSET )))
#define GPTM0_TA_GPTMTnPS_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TA_GPTMTnPS_OFFSET)))

/* GPTM1 GPTMTAPS*/
#define GPTM1_BITBANDING_GPTMTAPS               (((BITBANDING_GPTMTAPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAPS_OFFSET)*32u))))
#define GPTM1_GPTMTAPS                          (((GPTMTAPS_TypeDef*)(GPTM1_BASE + GPTM_GPTMTAPS_OFFSET )))
#define GPTM1_GPTMTAPS_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTAPS_OFFSET)))

#define GPTM1_BITBANDING_TA_GPTMTnPS            (((BITBANDING_TA_GPTMPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TA_GPTMTnPS_OFFSET)*32u))))
#define GPTM1_TA_GPTMTnPS                       (((TA_GPTMPS_TypeDef*)(GPTM1_BASE + GPTM_TA_GPTMTnPS_OFFSET )))
#define GPTM1_TA_GPTMTnPS_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TA_GPTMTnPS_OFFSET)))

/* GPTM2 GPTMTAPS*/
#define GPTM2_BITBANDING_GPTMTAPS               (((BITBANDING_GPTMTAPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAPS_OFFSET)*32u))))
#define GPTM2_GPTMTAPS                          (((GPTMTAPS_TypeDef*)(GPTM2_BASE + GPTM_GPTMTAPS_OFFSET )))
#define GPTM2_GPTMTAPS_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTAPS_OFFSET)))

#define GPTM2_BITBANDING_TA_GPTMTnPS            (((BITBANDING_TA_GPTMPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TA_GPTMTnPS_OFFSET)*32u))))
#define GPTM2_TA_GPTMTnPS                       (((TA_GPTMPS_TypeDef*)(GPTM2_BASE + GPTM_TA_GPTMTnPS_OFFSET )))
#define GPTM2_TA_GPTMTnPS_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TA_GPTMTnPS_OFFSET)))

/* GPTM3 GPTMTAPS*/
#define GPTM3_BITBANDING_GPTMTAPS               (((BITBANDING_GPTMTAPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAPS_OFFSET)*32u))))
#define GPTM3_GPTMTAPS                          (((GPTMTAPS_TypeDef*)(GPTM3_BASE + GPTM_GPTMTAPS_OFFSET )))
#define GPTM3_GPTMTAPS_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTAPS_OFFSET)))

#define GPTM3_BITBANDING_TA_GPTMTnPS            (((BITBANDING_TA_GPTMPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TA_GPTMTnPS_OFFSET)*32u))))
#define GPTM3_TA_GPTMTnPS                       (((TA_GPTMPS_TypeDef*)(GPTM3_BASE + GPTM_TA_GPTMTnPS_OFFSET )))
#define GPTM3_TA_GPTMTnPS_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TA_GPTMTnPS_OFFSET)))

/* GPTM4 GPTMTAPS*/
#define GPTM4_BITBANDING_GPTMTAPS               (((BITBANDING_GPTMTAPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAPS_OFFSET)*32u))))
#define GPTM4_GPTMTAPS                          (((GPTMTAPS_TypeDef*)(GPTM4_BASE + GPTM_GPTMTAPS_OFFSET )))
#define GPTM4_GPTMTAPS_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTAPS_OFFSET)))

#define GPTM4_BITBANDING_TA_GPTMTnPS            (((BITBANDING_TA_GPTMPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TA_GPTMTnPS_OFFSET)*32u))))
#define GPTM4_TA_GPTMTnPS                       (((TA_GPTMPS_TypeDef*)(GPTM4_BASE + GPTM_TA_GPTMTnPS_OFFSET )))
#define GPTM4_TA_GPTMTnPS_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TA_GPTMTnPS_OFFSET)))

/* GPTM5 GPTMTAPS*/
#define GPTM5_BITBANDING_GPTMTAPS               (((BITBANDING_GPTMTAPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAPS_OFFSET)*32u))))
#define GPTM5_GPTMTAPS                          (((GPTMTAPS_TypeDef*)(GPTM5_BASE + GPTM_GPTMTAPS_OFFSET )))
#define GPTM5_GPTMTAPS_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTAPS_OFFSET)))

#define GPTM5_BITBANDING_TA_GPTMTnPS            (((BITBANDING_TA_GPTMPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TA_GPTMTnPS_OFFSET)*32u))))
#define GPTM5_TA_GPTMTnPS                       (((TA_GPTMPS_TypeDef*)(GPTM5_BASE + GPTM_TA_GPTMTnPS_OFFSET )))
#define GPTM5_TA_GPTMTnPS_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TA_GPTMTnPS_OFFSET)))

/* GPWTM0 GPTMTAPS*/
#define GPWTM0_BITBANDING_GPTMTAPS               (((BITBANDING_GPTMTAPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAPS_OFFSET)*32u))))
#define GPWTM0_GPTMTAPS                          (((GPTMTAPS_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTAPS_OFFSET )))
#define GPWTM0_GPTMTAPS_R                        (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTAPS_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnPS            (((BITBANDING_TA_GPWTMPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnPS_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnPS                       (((TA_GPWTMPS_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnPS_OFFSET )))
#define GPWTM0_TA_GPTMTnPS_R                     (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnPS_OFFSET)))

/* GPWTM1 GPTMTAPS*/
#define GPWTM1_BITBANDING_GPTMTAPS               (((BITBANDING_GPTMTAPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAPS_OFFSET)*32u))))
#define GPWTM1_GPTMTAPS                          (((GPTMTAPS_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTAPS_OFFSET )))
#define GPWTM1_GPTMTAPS_R                        (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTAPS_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnPS            (((BITBANDING_TA_GPWTMPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnPS_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnPS                       (((TA_GPWTMPS_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnPS_OFFSET )))
#define GPWTM1_TA_GPTMTnPS_R                     (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnPS_OFFSET)))

/* GPWTM2 GPTMTAPS*/
#define GPWTM2_BITBANDING_GPTMTAPS               (((BITBANDING_GPTMTAPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAPS_OFFSET)*32u))))
#define GPWTM2_GPTMTAPS                          (((GPTMTAPS_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTAPS_OFFSET )))
#define GPWTM2_GPTMTAPS_R                        (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTAPS_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnPS            (((BITBANDING_TA_GPWTMPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnPS_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnPS                       (((TA_GPWTMPS_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnPS_OFFSET )))
#define GPWTM2_TA_GPTMTnPS_R                     (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnPS_OFFSET)))

/* GPWTM3 GPTMTAPS*/
#define GPWTM3_BITBANDING_GPTMTAPS               (((BITBANDING_GPTMTAPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAPS_OFFSET)*32u))))
#define GPWTM3_GPTMTAPS                          (((GPTMTAPS_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTAPS_OFFSET )))
#define GPWTM3_GPTMTAPS_R                        (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTAPS_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnPS            (((BITBANDING_TA_GPWTMPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnPS_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnPS                       (((TA_GPWTMPS_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnPS_OFFSET )))
#define GPWTM3_TA_GPTMTnPS_R                     (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnPS_OFFSET)))

/* GPWTM4 GPTMTAPS*/
#define GPWTM4_BITBANDING_GPTMTAPS               (((BITBANDING_GPTMTAPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAPS_OFFSET)*32u))))
#define GPWTM4_GPTMTAPS                          (((GPTMTAPS_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTAPS_OFFSET )))
#define GPWTM4_GPTMTAPS_R                        (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTAPS_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnPS            (((BITBANDING_TA_GPWTMPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnPS_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnPS                       (((TA_GPWTMPS_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnPS_OFFSET )))
#define GPWTM4_TA_GPTMTnPS_R                     (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnPS_OFFSET)))

/* GPWTM5 GPTMTAPS*/
#define GPWTM5_BITBANDING_GPTMTAPS               (((BITBANDING_GPTMTAPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAPS_OFFSET)*32u))))
#define GPWTM5_GPTMTAPS                          (((GPTMTAPS_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTAPS_OFFSET )))
#define GPWTM5_GPTMTAPS_R                        (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTAPS_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnPS            (((BITBANDING_TA_GPWTMPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnPS_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnPS                       (((TA_GPWTMPS_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnPS_OFFSET )))
#define GPWTM5_TA_GPTMTnPS_R                     (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnPS_OFFSET)))

/*----------*/
#define GPTM_GPTMTAPS_R_PSS_MASK              ((uint32_t)0x0000FFFFu)
#define GPTM_GPTMTAPS_R_PSS_BIT               (0u)

#define GPTM_GPTMTAPS_PSS_MASK                ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPTM_TA_GPTMTnPS_R_PSS_MASK           ((uint32_t)0x0000FFFFu)
#define GPTM_TA_GPTMTnPS_R_PSS_BIT            (0u)

#define GPTM_TA_GPTMTnPS_PSS_MASK             ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTAPS_R_PSS_MASK             ((uint32_t)0x0000FFFFu)
#define GPWTM_GPTMTAPS_R_PSS_BIT              (0u)

#define GPWTM_GPTMTAPS_PSS_MASK               ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnPS_R_PSS_MASK          ((uint32_t)0x0000FFFFu)
#define GPWTM_TA_GPTMTnPS_R_PSS_BIT           (0u)

#define GPWTM_TA_GPTMTnPS_PSS_MASK            ((uint32_t)0x0000FFFFu)
/*----------*/


/******************************************************************************************
************************************ 24 GPTMTBPS *********************************************
******************************************************************************************/

/* GPTM0 GPTMTBPS*/
#define GPTM0_BITBANDING_GPTMTBPS               (((BITBANDING_GPTMTBPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBPS_OFFSET)*32u))))
#define GPTM0_GPTMTBPS                          (((GPTMTBPS_TypeDef*)(GPTM0_BASE + GPTM_GPTMTBPS_OFFSET )))
#define GPTM0_GPTMTBPS_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTBPS_OFFSET)))

#define GPTM0_BITBANDING_TB_GPTMTnPS            (((BITBANDING_TB_GPTMPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TB_GPTMTnPS_OFFSET)*32u))))
#define GPTM0_TB_GPTMTnPS                       (((TB_GPTMPS_TypeDef*)(GPTM0_BASE + GPTM_TB_GPTMTnPS_OFFSET )))
#define GPTM0_TB_GPTMTnPS_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TB_GPTMTnPS_OFFSET)))

/* GPTM1 GPTMTBPS*/
#define GPTM1_BITBANDING_GPTMTBPS               (((BITBANDING_GPTMTBPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBPS_OFFSET)*32u))))
#define GPTM1_GPTMTBPS                          (((GPTMTBPS_TypeDef*)(GPTM1_BASE + GPTM_GPTMTBPS_OFFSET )))
#define GPTM1_GPTMTBPS_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTBPS_OFFSET)))

#define GPTM1_BITBANDING_TB_GPTMTnPS            (((BITBANDING_TB_GPTMPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TB_GPTMTnPS_OFFSET)*32u))))
#define GPTM1_TB_GPTMTnPS                       (((TB_GPTMPS_TypeDef*)(GPTM1_BASE + GPTM_TB_GPTMTnPS_OFFSET )))
#define GPTM1_TB_GPTMTnPS_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TB_GPTMTnPS_OFFSET)))

/* GPTM2 GPTMTBPS*/
#define GPTM2_BITBANDING_GPTMTBPS               (((BITBANDING_GPTMTBPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBPS_OFFSET)*32u))))
#define GPTM2_GPTMTBPS                          (((GPTMTBPS_TypeDef*)(GPTM2_BASE + GPTM_GPTMTBPS_OFFSET )))
#define GPTM2_GPTMTBPS_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTBPS_OFFSET)))

#define GPTM2_BITBANDING_TB_GPTMTnPS            (((BITBANDING_TB_GPTMPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TB_GPTMTnPS_OFFSET)*32u))))
#define GPTM2_TB_GPTMTnPS                       (((TB_GPTMPS_TypeDef*)(GPTM2_BASE + GPTM_TB_GPTMTnPS_OFFSET )))
#define GPTM2_TB_GPTMTnPS_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TB_GPTMTnPS_OFFSET)))

/* GPTM3 GPTMTBPS*/
#define GPTM3_BITBANDING_GPTMTBPS               (((BITBANDING_GPTMTBPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBPS_OFFSET)*32u))))
#define GPTM3_GPTMTBPS                          (((GPTMTBPS_TypeDef*)(GPTM3_BASE + GPTM_GPTMTBPS_OFFSET )))
#define GPTM3_GPTMTBPS_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTBPS_OFFSET)))

#define GPTM3_BITBANDING_TB_GPTMTnPS            (((BITBANDING_TB_GPTMPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TB_GPTMTnPS_OFFSET)*32u))))
#define GPTM3_TB_GPTMTnPS                       (((TB_GPTMPS_TypeDef*)(GPTM3_BASE + GPTM_TB_GPTMTnPS_OFFSET )))
#define GPTM3_TB_GPTMTnPS_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TB_GPTMTnPS_OFFSET)))

/* GPTM4 GPTMTBPS*/
#define GPTM4_BITBANDING_GPTMTBPS               (((BITBANDING_GPTMTBPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBPS_OFFSET)*32u))))
#define GPTM4_GPTMTBPS                          (((GPTMTBPS_TypeDef*)(GPTM4_BASE + GPTM_GPTMTBPS_OFFSET )))
#define GPTM4_GPTMTBPS_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTBPS_OFFSET)))

#define GPTM4_BITBANDING_TB_GPTMTnPS            (((BITBANDING_TB_GPTMPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TB_GPTMTnPS_OFFSET)*32u))))
#define GPTM4_TB_GPTMTnPS                       (((TB_GPTMPS_TypeDef*)(GPTM4_BASE + GPTM_TB_GPTMTnPS_OFFSET )))
#define GPTM4_TB_GPTMTnPS_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TB_GPTMTnPS_OFFSET)))

/* GPTM5 GPTMTBPS*/
#define GPTM5_BITBANDING_GPTMTBPS               (((BITBANDING_GPTMTBPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBPS_OFFSET)*32u))))
#define GPTM5_GPTMTBPS                          (((GPTMTBPS_TypeDef*)(GPTM5_BASE + GPTM_GPTMTBPS_OFFSET )))
#define GPTM5_GPTMTBPS_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTBPS_OFFSET)))

#define GPTM5_BITBANDING_TB_GPTMTnPS            (((BITBANDING_TB_GPTMPS_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TB_GPTMTnPS_OFFSET)*32u))))
#define GPTM5_TB_GPTMTnPS                       (((TB_GPTMPS_TypeDef*)(GPTM5_BASE + GPTM_TB_GPTMTnPS_OFFSET )))
#define GPTM5_TB_GPTMTnPS_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TB_GPTMTnPS_OFFSET)))

/* GPWTM0 GPTMTBPS*/
#define GPWTM0_BITBANDING_GPTMTBPS               (((BITBANDING_GPTMTBPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBPS_OFFSET)*32u))))
#define GPWTM0_GPTMTBPS                          (((GPTMTBPS_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTBPS_OFFSET )))
#define GPWTM0_GPTMTBPS_R                        (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTBPS_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnPS            (((BITBANDING_TB_GPWTMPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnPS_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnPS                       (((TB_GPWTMPS_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnPS_OFFSET )))
#define GPWTM0_TB_GPTMTnPS_R                     (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnPS_OFFSET)))

/* GPWTM1 GPTMTBPS*/
#define GPWTM1_BITBANDING_GPTMTBPS               (((BITBANDING_GPTMTBPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBPS_OFFSET)*32u))))
#define GPWTM1_GPTMTBPS                          (((GPTMTBPS_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTBPS_OFFSET )))
#define GPWTM1_GPTMTBPS_R                        (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTBPS_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnPS            (((BITBANDING_TB_GPWTMPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnPS_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnPS                       (((TB_GPWTMPS_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnPS_OFFSET )))
#define GPWTM1_TB_GPTMTnPS_R                     (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnPS_OFFSET)))

/* GPWTM2 GPTMTBPS*/
#define GPWTM2_BITBANDING_GPTMTBPS               (((BITBANDING_GPTMTBPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBPS_OFFSET)*32u))))
#define GPWTM2_GPTMTBPS                          (((GPTMTBPS_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTBPS_OFFSET )))
#define GPWTM2_GPTMTBPS_R                        (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTBPS_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnPS            (((BITBANDING_TB_GPWTMPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnPS_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnPS                       (((TB_GPWTMPS_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnPS_OFFSET )))
#define GPWTM2_TB_GPTMTnPS_R                     (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnPS_OFFSET)))

/* GPWTM3 GPTMTBPS*/
#define GPWTM3_BITBANDING_GPTMTBPS               (((BITBANDING_GPTMTBPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBPS_OFFSET)*32u))))
#define GPWTM3_GPTMTBPS                          (((GPTMTBPS_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTBPS_OFFSET )))
#define GPWTM3_GPTMTBPS_R                        (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTBPS_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnPS            (((BITBANDING_TB_GPWTMPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnPS_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnPS                       (((TB_GPWTMPS_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnPS_OFFSET )))
#define GPWTM3_TB_GPTMTnPS_R                     (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnPS_OFFSET)))

/* GPWTM4 GPTMTBPS*/
#define GPWTM4_BITBANDING_GPTMTBPS               (((BITBANDING_GPTMTBPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBPS_OFFSET)*32u))))
#define GPWTM4_GPTMTBPS                          (((GPTMTBPS_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTBPS_OFFSET )))
#define GPWTM4_GPTMTBPS_R                        (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTBPS_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnPS            (((BITBANDING_TB_GPWTMPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnPS_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnPS                       (((TB_GPWTMPS_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnPS_OFFSET )))
#define GPWTM4_TB_GPTMTnPS_R                     (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnPS_OFFSET)))

/* GPWTM5 GPTMTBPS*/
#define GPWTM5_BITBANDING_GPTMTBPS               (((BITBANDING_GPTMTBPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBPS_OFFSET)*32u))))
#define GPWTM5_GPTMTBPS                          (((GPTMTBPS_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTBPS_OFFSET )))
#define GPWTM5_GPTMTBPS_R                        (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTBPS_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnPS            (((BITBANDING_TB_GPWTMPS_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnPS_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnPS                       (((TB_GPWTMPS_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnPS_OFFSET )))
#define GPWTM5_TB_GPTMTnPS_R                     (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnPS_OFFSET)))

/*----------*/
#define GPTM_GPTMTBPS_R_PSS_MASK              ((uint32_t)0x0000FFFFu)
#define GPTM_GPTMTBPS_R_PSS_BIT               (0u)

#define GPTM_GPTMTBPS_PSS_MASK                ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPTM_TB_GPTMTnPS_R_PSS_MASK           ((uint32_t)0x0000FFFFu)
#define GPTM_TB_GPTMTnPS_R_PSS_BIT            (0u)

#define GPTM_TB_GPTMTnPS_PSS_MASK             ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBPS_R_PSS_MASK             ((uint32_t)0x0000FFFFu)
#define GPWTM_GPTMTBPS_R_PSS_BIT              (0u)

#define GPWTM_GPTMTBPS_PSS_MASK               ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnPS_R_PSS_MASK          ((uint32_t)0x0000FFFFu)
#define GPWTM_TB_GPTMTnPS_R_PSS_BIT           (0u)

#define GPWTM_TB_GPTMTnPS_PSS_MASK            ((uint32_t)0x0000FFFFu)
/*----------*/


/******************************************************************************************
************************************ 22 GPTMRTCPD *********************************************
******************************************************************************************/

/* GPTM0 GPTMRTCPD*/
#define GPTM0_BITBANDING_GPTMRTCPD               (((BITBANDING_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMRTCPD_OFFSET)*32u))))
#define GPTM0_GPTMRTCPD                          (((GPTMRTCPD_TypeDef*)(GPTM0_BASE + GPTM_GPTMRTCPD_OFFSET )))
#define GPTM0_GPTMRTCPD_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMRTCPD_OFFSET)))

#define GPTM0_BITBANDING_TW_GPTMRTCPD            (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPTM0_TW_GPTMRTCPD                       (((TW_GPTMRTCPD_TypeDef*)(GPTM0_BASE + GPTM_TW_GPTMRTCPD_OFFSET )))
#define GPTM0_TW_GPTMRTCPD_R                     (*((volatile uint32_t *)(GPTM0_BASE +GPTM_TW_GPTMRTCPD_OFFSET)))

/* GPTM1 GPTMRTCPD*/
#define GPTM1_BITBANDING_GPTMRTCPD               (((BITBANDING_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMRTCPD_OFFSET)*32u))))
#define GPTM1_GPTMRTCPD                          (((GPTMRTCPD_TypeDef*)(GPTM1_BASE + GPTM_GPTMRTCPD_OFFSET )))
#define GPTM1_GPTMRTCPD_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMRTCPD_OFFSET)))

#define GPTM1_BITBANDING_TW_GPTMRTCPD            (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPTM1_TW_GPTMRTCPD                       (((TW_GPTMRTCPD_TypeDef*)(GPTM1_BASE + GPTM_TW_GPTMRTCPD_OFFSET )))
#define GPTM1_TW_GPTMRTCPD_R                     (*((volatile uint32_t *)(GPTM1_BASE +GPTM_TW_GPTMRTCPD_OFFSET)))

/* GPTM2 GPTMRTCPD*/
#define GPTM2_BITBANDING_GPTMRTCPD               (((BITBANDING_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMRTCPD_OFFSET)*32u))))
#define GPTM2_GPTMRTCPD                          (((GPTMRTCPD_TypeDef*)(GPTM2_BASE + GPTM_GPTMRTCPD_OFFSET )))
#define GPTM2_GPTMRTCPD_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMRTCPD_OFFSET)))

#define GPTM2_BITBANDING_TW_GPTMRTCPD            (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPTM2_TW_GPTMRTCPD                       (((TW_GPTMRTCPD_TypeDef*)(GPTM2_BASE + GPTM_TW_GPTMRTCPD_OFFSET )))
#define GPTM2_TW_GPTMRTCPD_R                     (*((volatile uint32_t *)(GPTM2_BASE +GPTM_TW_GPTMRTCPD_OFFSET)))

/* GPTM3 GPTMRTCPD*/
#define GPTM3_BITBANDING_GPTMRTCPD               (((BITBANDING_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMRTCPD_OFFSET)*32u))))
#define GPTM3_GPTMRTCPD                          (((GPTMRTCPD_TypeDef*)(GPTM3_BASE + GPTM_GPTMRTCPD_OFFSET )))
#define GPTM3_GPTMRTCPD_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMRTCPD_OFFSET)))

#define GPTM3_BITBANDING_TW_GPTMRTCPD            (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPTM3_TW_GPTMRTCPD                       (((TW_GPTMRTCPD_TypeDef*)(GPTM3_BASE + GPTM_TW_GPTMRTCPD_OFFSET )))
#define GPTM3_TW_GPTMRTCPD_R                     (*((volatile uint32_t *)(GPTM3_BASE +GPTM_TW_GPTMRTCPD_OFFSET)))

/* GPTM4 GPTMRTCPD*/
#define GPTM4_BITBANDING_GPTMRTCPD               (((BITBANDING_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMRTCPD_OFFSET)*32u))))
#define GPTM4_GPTMRTCPD                          (((GPTMRTCPD_TypeDef*)(GPTM4_BASE + GPTM_GPTMRTCPD_OFFSET )))
#define GPTM4_GPTMRTCPD_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMRTCPD_OFFSET)))

#define GPTM4_BITBANDING_TW_GPTMRTCPD            (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPTM4_TW_GPTMRTCPD                       (((TW_GPTMRTCPD_TypeDef*)(GPTM4_BASE + GPTM_TW_GPTMRTCPD_OFFSET )))
#define GPTM4_TW_GPTMRTCPD_R                     (*((volatile uint32_t *)(GPTM4_BASE +GPTM_TW_GPTMRTCPD_OFFSET)))

/* GPTM5 GPTMRTCPD*/
#define GPTM5_BITBANDING_GPTMRTCPD               (((BITBANDING_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMRTCPD_OFFSET)*32u))))
#define GPTM5_GPTMRTCPD                          (((GPTMRTCPD_TypeDef*)(GPTM5_BASE + GPTM_GPTMRTCPD_OFFSET )))
#define GPTM5_GPTMRTCPD_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMRTCPD_OFFSET)))

#define GPTM5_BITBANDING_TW_GPTMRTCPD            (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPTM5_TW_GPTMRTCPD                       (((TW_GPTMRTCPD_TypeDef*)(GPTM5_BASE + GPTM_TW_GPTMRTCPD_OFFSET )))
#define GPTM5_TW_GPTMRTCPD_R                     (*((volatile uint32_t *)(GPTM5_BASE +GPTM_TW_GPTMRTCPD_OFFSET)))

/* GPWTM0 GPTMRTCPD*/
#define GPWTM0_BITBANDING_GPTMRTCPD              (((BITBANDING_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM0_GPTMRTCPD                         (((GPTMRTCPD_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMRTCPD_OFFSET )))
#define GPWTM0_GPTMRTCPD_R                       (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMRTCPD_OFFSET)))

#define GPWTM0_BITBANDING_TW_GPTMRTCPD           (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM0_TW_GPTMRTCPD                      (((TW_GPTMRTCPD_TypeDef*)(GPWTM0_BASE + GPWTM_TW_GPTMRTCPD_OFFSET )))
#define GPWTM0_TW_GPTMRTCPD_R                    (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TW_GPTMRTCPD_OFFSET)))

/* GPWTM1 GPTMRTCPD*/
#define GPWTM1_BITBANDING_GPTMRTCPD              (((BITBANDING_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM1_GPTMRTCPD                         (((GPTMRTCPD_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMRTCPD_OFFSET )))
#define GPWTM1_GPTMRTCPD_R                       (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMRTCPD_OFFSET)))

#define GPWTM1_BITBANDING_TW_GPTMRTCPD           (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM1_TW_GPTMRTCPD                      (((TW_GPTMRTCPD_TypeDef*)(GPWTM1_BASE + GPWTM_TW_GPTMRTCPD_OFFSET )))
#define GPWTM1_TW_GPTMRTCPD_R                    (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TW_GPTMRTCPD_OFFSET)))

/* GPWTM2 GPTMRTCPD*/
#define GPWTM2_BITBANDING_GPTMRTCPD              (((BITBANDING_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM2_GPTMRTCPD                         (((GPTMRTCPD_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMRTCPD_OFFSET )))
#define GPWTM2_GPTMRTCPD_R                       (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMRTCPD_OFFSET)))

#define GPWTM2_BITBANDING_TW_GPTMRTCPD           (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM2_TW_GPTMRTCPD                      (((TW_GPTMRTCPD_TypeDef*)(GPWTM2_BASE + GPWTM_TW_GPTMRTCPD_OFFSET )))
#define GPWTM2_TW_GPTMRTCPD_R                    (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TW_GPTMRTCPD_OFFSET)))

/* GPWTM3 GPTMRTCPD*/
#define GPWTM3_BITBANDING_GPTMRTCPD              (((BITBANDING_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM3_GPTMRTCPD                         (((GPTMRTCPD_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMRTCPD_OFFSET )))
#define GPWTM3_GPTMRTCPD_R                       (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMRTCPD_OFFSET)))

#define GPWTM3_BITBANDING_TW_GPTMRTCPD           (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM3_TW_GPTMRTCPD                      (((TW_GPTMRTCPD_TypeDef*)(GPWTM3_BASE + GPWTM_TW_GPTMRTCPD_OFFSET )))
#define GPWTM3_TW_GPTMRTCPD_R                    (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TW_GPTMRTCPD_OFFSET)))

/* GPWTM4 GPTMRTCPD*/
#define GPWTM4_BITBANDING_GPTMRTCPD              (((BITBANDING_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM4_GPTMRTCPD                         (((GPTMRTCPD_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMRTCPD_OFFSET )))
#define GPWTM4_GPTMRTCPD_R                       (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMRTCPD_OFFSET)))

#define GPWTM4_BITBANDING_TW_GPTMRTCPD           (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM4_TW_GPTMRTCPD                      (((TW_GPTMRTCPD_TypeDef*)(GPWTM4_BASE + GPWTM_TW_GPTMRTCPD_OFFSET )))
#define GPWTM4_TW_GPTMRTCPD_R                    (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TW_GPTMRTCPD_OFFSET)))

/* GPWTM5 GPTMRTCPD*/
#define GPWTM5_BITBANDING_GPTMRTCPD              (((BITBANDING_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM5_GPTMRTCPD                         (((GPTMRTCPD_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMRTCPD_OFFSET )))
#define GPWTM5_GPTMRTCPD_R                       (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMRTCPD_OFFSET)))

#define GPWTM5_BITBANDING_TW_GPTMRTCPD           (((BITBANDING_TW_GPTMRTCPD_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TW_GPTMRTCPD_OFFSET)*32u))))
#define GPWTM5_TW_GPTMRTCPD                      (((TW_GPTMRTCPD_TypeDef*)(GPWTM5_BASE + GPWTM_TW_GPTMRTCPD_OFFSET )))
#define GPWTM5_TW_GPTMRTCPD_R                    (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TW_GPTMRTCPD_OFFSET)))


/*----------*/
#define GPTM_GPTMRTCPD_R_RTCPD_MASK                 ((uint32_t)0x0000FFFFu)
#define GPTM_GPTMRTCPD_R_RTCPD_BIT                  (0u)
#define GPTM_GPTMRTCPD_R_RTCPD_DEFAULT             ((uint32_t)0x00007FFFu)

#define GPTM_GPTMRTCPD_RTCPD_MASK                   ((uint32_t)0x0000FFFFu)
#define GPTM_GPTMRTCPD_RTCPD_DEFAULT                ((uint32_t)0x00007FFFu)
/*----------*/

/*----------*/
#define GPTM_TW_GPTMRTCPD_R_RTCPD_MASK              ((uint32_t)0x0000FFFFu)
#define GPTM_TW_GPTMRTCPD_R_RTCPD_BIT               (0u)
#define GPTM_TW_GPTMRTCPD_R_RTCPD_DEFAULT           ((uint32_t)0x00007FFFu)


#define GPTM_TW_GPTMRTCPD_RTCPD_MASK                ((uint32_t)0x0000FFFFu)
#define GPTM_TW_GPTMRTCPD_RTCPD_DEFAULT             ((uint32_t)0x00007FFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMRTCPD_R_RTCPD_MASK                ((uint32_t)0x0000FFFFu)
#define GPWTM_GPTMRTCPD_R_RTCPD_BIT                 (0u)
#define GPWTM_GPTMRTCPD_R_RTCPD_DEFAULT             ((uint32_t)0x00007FFFu)

#define GPWTM_GPTMRTCPD_RTCPD_MASK                  ((uint32_t)0x0000FFFFu)
#define GPWTM_GPTMRTCPD_RTCPD_DEFAULT               ((uint32_t)0x00007FFFu)
/*----------*/

/*----------*/
#define GPWTM_TW_GPTMRTCPD_R_RTCPD_MASK             ((uint32_t)0x0000FFFFu)
#define GPWTM_TW_GPTMRTCPD_R_RTCPD_BIT              (0u)
#define GPWTM_TW_GPTMRTCPD_R_RTCPD_DEFAULT          ((uint32_t)0x00007FFFu)

#define GPWTM_TW_GPTMRTCPD_RTCPD_MASK               ((uint32_t)0x0000FFFFu)
#define GPWTM_TW_GPTMRTCPD_RTCPD_DEFAULT            ((uint32_t)0x00007FFFu)
/*----------*/


/******************************************************************************************
************************************ 25 GPTMTAPV *********************************************
******************************************************************************************/

/* GPTM0 GPTMTAPV*/
#define GPTM0_BITBANDING_GPTMTAPV               (((BITBANDING_GPTMTAPV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTAPV_OFFSET)*32u))))
#define GPTM0_GPTMTAPV                          (((GPTMTAPV_TypeDef*)(GPTM0_BASE + GPTM_GPTMTAPV_OFFSET )))
#define GPTM0_GPTMTAPV_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTAPV_OFFSET)))

/* GPTM1 GPTMTAPV*/
#define GPTM1_BITBANDING_GPTMTAPV               (((BITBANDING_GPTMTAPV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTAPV_OFFSET)*32u))))
#define GPTM1_GPTMTAPV                          (((GPTMTAPV_TypeDef*)(GPTM1_BASE + GPTM_GPTMTAPV_OFFSET )))
#define GPTM1_GPTMTAPV_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTAPV_OFFSET)))

/* GPTM2 GPTMTAPV*/
#define GPTM2_BITBANDING_GPTMTAPV               (((BITBANDING_GPTMTAPV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTAPV_OFFSET)*32u))))
#define GPTM2_GPTMTAPV                          (((GPTMTAPV_TypeDef*)(GPTM2_BASE + GPTM_GPTMTAPV_OFFSET )))
#define GPTM2_GPTMTAPV_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTAPV_OFFSET)))

/* GPTM3 GPTMTAPV*/
#define GPTM3_BITBANDING_GPTMTAPV               (((BITBANDING_GPTMTAPV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTAPV_OFFSET)*32u))))
#define GPTM3_GPTMTAPV                          (((GPTMTAPV_TypeDef*)(GPTM3_BASE + GPTM_GPTMTAPV_OFFSET )))
#define GPTM3_GPTMTAPV_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTAPV_OFFSET)))

/* GPTM4 GPTMTAPV*/
#define GPTM4_BITBANDING_GPTMTAPV               (((BITBANDING_GPTMTAPV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTAPV_OFFSET)*32u))))
#define GPTM4_GPTMTAPV                          (((GPTMTAPV_TypeDef*)(GPTM4_BASE + GPTM_GPTMTAPV_OFFSET )))
#define GPTM4_GPTMTAPV_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTAPV_OFFSET)))

/* GPTM5 GPTMTAPV*/
#define GPTM5_BITBANDING_GPTMTAPV               (((BITBANDING_GPTMTAPV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTAPV_OFFSET)*32u))))
#define GPTM5_GPTMTAPV                          (((GPTMTAPV_TypeDef*)(GPTM5_BASE + GPTM_GPTMTAPV_OFFSET )))
#define GPTM5_GPTMTAPV_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTAPV_OFFSET)))

/* GPWTM0 GPTMTAPV*/
#define GPWTM0_BITBANDING_GPTMTAPV               (((BITBANDING_GPTMTAPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTAPV_OFFSET)*32u))))
#define GPWTM0_GPTMTAPV                          (((GPTMTAPV_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTAPV_OFFSET )))
#define GPWTM0_GPTMTAPV_R                        (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTAPV_OFFSET)))

#define GPWTM0_BITBANDING_TA_GPTMTnPV            (((BITBANDING_TA_GPWTMPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TA_GPTMTnPV_OFFSET)*32u))))
#define GPWTM0_TA_GPTMTnPV                       (((TA_GPWTMPV_TypeDef*)(GPWTM0_BASE + GPWTM_TA_GPTMTnPV_OFFSET )))
#define GPWTM0_TA_GPTMTnPV_R                     (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TA_GPTMTnPV_OFFSET)))

/* GPWTM1 GPTMTAPV*/
#define GPWTM1_BITBANDING_GPTMTAPV               (((BITBANDING_GPTMTAPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTAPV_OFFSET)*32u))))
#define GPWTM1_GPTMTAPV                          (((GPTMTAPV_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTAPV_OFFSET )))
#define GPWTM1_GPTMTAPV_R                        (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTAPV_OFFSET)))

#define GPWTM1_BITBANDING_TA_GPTMTnPV            (((BITBANDING_TA_GPWTMPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TA_GPTMTnPV_OFFSET)*32u))))
#define GPWTM1_TA_GPTMTnPV                       (((TA_GPWTMPV_TypeDef*)(GPWTM1_BASE + GPWTM_TA_GPTMTnPV_OFFSET )))
#define GPWTM1_TA_GPTMTnPV_R                     (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TA_GPTMTnPV_OFFSET)))

/* GPWTM2 GPTMTAPV*/
#define GPWTM2_BITBANDING_GPTMTAPV               (((BITBANDING_GPTMTAPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTAPV_OFFSET)*32u))))
#define GPWTM2_GPTMTAPV                          (((GPTMTAPV_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTAPV_OFFSET )))
#define GPWTM2_GPTMTAPV_R                        (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTAPV_OFFSET)))

#define GPWTM2_BITBANDING_TA_GPTMTnPV            (((BITBANDING_TA_GPWTMPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TA_GPTMTnPV_OFFSET)*32u))))
#define GPWTM2_TA_GPTMTnPV                       (((TA_GPWTMPV_TypeDef*)(GPWTM2_BASE + GPWTM_TA_GPTMTnPV_OFFSET )))
#define GPWTM2_TA_GPTMTnPV_R                     (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TA_GPTMTnPV_OFFSET)))

/* GPWTM3 GPTMTAPV*/
#define GPWTM3_BITBANDING_GPTMTAPV               (((BITBANDING_GPTMTAPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTAPV_OFFSET)*32u))))
#define GPWTM3_GPTMTAPV                          (((GPTMTAPV_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTAPV_OFFSET )))
#define GPWTM3_GPTMTAPV_R                        (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTAPV_OFFSET)))

#define GPWTM3_BITBANDING_TA_GPTMTnPV            (((BITBANDING_TA_GPWTMPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TA_GPTMTnPV_OFFSET)*32u))))
#define GPWTM3_TA_GPTMTnPV                       (((TA_GPWTMPV_TypeDef*)(GPWTM3_BASE + GPWTM_TA_GPTMTnPV_OFFSET )))
#define GPWTM3_TA_GPTMTnPV_R                     (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TA_GPTMTnPV_OFFSET)))

/* GPWTM4 GPTMTAPV*/
#define GPWTM4_BITBANDING_GPTMTAPV               (((BITBANDING_GPTMTAPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTAPV_OFFSET)*32u))))
#define GPWTM4_GPTMTAPV                          (((GPTMTAPV_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTAPV_OFFSET )))
#define GPWTM4_GPTMTAPV_R                        (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTAPV_OFFSET)))

#define GPWTM4_BITBANDING_TA_GPTMTnPV            (((BITBANDING_TA_GPWTMPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TA_GPTMTnPV_OFFSET)*32u))))
#define GPWTM4_TA_GPTMTnPV                       (((TA_GPWTMPV_TypeDef*)(GPWTM4_BASE + GPWTM_TA_GPTMTnPV_OFFSET )))
#define GPWTM4_TA_GPTMTnPV_R                     (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TA_GPTMTnPV_OFFSET)))

/* GPWTM5 GPTMTAPV*/
#define GPWTM5_BITBANDING_GPTMTAPV               (((BITBANDING_GPTMTAPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTAPV_OFFSET)*32u))))
#define GPWTM5_GPTMTAPV                          (((GPTMTAPV_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTAPV_OFFSET )))
#define GPWTM5_GPTMTAPV_R                        (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTAPV_OFFSET)))

#define GPWTM5_BITBANDING_TA_GPTMTnPV            (((BITBANDING_TA_GPWTMPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TA_GPTMTnPV_OFFSET)*32u))))
#define GPWTM5_TA_GPTMTnPV                       (((TA_GPWTMPV_TypeDef*)(GPWTM5_BASE + GPWTM_TA_GPTMTnPV_OFFSET )))
#define GPWTM5_TA_GPTMTnPV_R                     (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TA_GPTMTnPV_OFFSET)))

/*----------*/
#define GPTM_GPTMTAPV_R_PSV_MASK              ((uint32_t)0x0000FFFFu)
#define GPTM_GPTMTAPV_R_PSV_BIT               (0u)

#define GPTM_GPTMTAPV_PSV_MASK                ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTAPV_R_PSV_MASK             ((uint32_t)0x0000FFFFu)
#define GPWTM_GPTMTAPV_R_PSV_BIT              (0u)

#define GPWTM_GPTMTAPV_PSV_MASK               ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPWTM_TA_GPTMTnPV_R_PSV_MASK          ((uint32_t)0x0000FFFFu)
#define GPWTM_TA_GPTMTnPV_R_PSV_BIT           (0u)

#define GPWTM_TA_GPTMTnPV_PSV_MASK            ((uint32_t)0x0000FFFFu)
/*----------*/


/******************************************************************************************
************************************ 25 GPTMTBPV *********************************************
******************************************************************************************/

/* GPTM0 GPTMTBPV*/
#define GPTM0_BITBANDING_GPTMTBPV               (((BITBANDING_GPTMTBPV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMTBPV_OFFSET)*32u))))
#define GPTM0_GPTMTBPV                          (((GPTMTBPV_TypeDef*)(GPTM0_BASE + GPTM_GPTMTBPV_OFFSET )))
#define GPTM0_GPTMTBPV_R                        (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMTBPV_OFFSET)))

/* GPTM1 GPTMTBPV*/
#define GPTM1_BITBANDING_GPTMTBPV               (((BITBANDING_GPTMTBPV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMTBPV_OFFSET)*32u))))
#define GPTM1_GPTMTBPV                          (((GPTMTBPV_TypeDef*)(GPTM1_BASE + GPTM_GPTMTBPV_OFFSET )))
#define GPTM1_GPTMTBPV_R                        (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMTBPV_OFFSET)))

/* GPTM2 GPTMTBPV*/
#define GPTM2_BITBANDING_GPTMTBPV               (((BITBANDING_GPTMTBPV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMTBPV_OFFSET)*32u))))
#define GPTM2_GPTMTBPV                          (((GPTMTBPV_TypeDef*)(GPTM2_BASE + GPTM_GPTMTBPV_OFFSET )))
#define GPTM2_GPTMTBPV_R                        (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMTBPV_OFFSET)))

/* GPTM3 GPTMTBPV*/
#define GPTM3_BITBANDING_GPTMTBPV               (((BITBANDING_GPTMTBPV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMTBPV_OFFSET)*32u))))
#define GPTM3_GPTMTBPV                          (((GPTMTBPV_TypeDef*)(GPTM3_BASE + GPTM_GPTMTBPV_OFFSET )))
#define GPTM3_GPTMTBPV_R                        (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMTBPV_OFFSET)))

/* GPTM4 GPTMTBPV*/
#define GPTM4_BITBANDING_GPTMTBPV               (((BITBANDING_GPTMTBPV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMTBPV_OFFSET)*32u))))
#define GPTM4_GPTMTBPV                          (((GPTMTBPV_TypeDef*)(GPTM4_BASE + GPTM_GPTMTBPV_OFFSET )))
#define GPTM4_GPTMTBPV_R                        (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMTBPV_OFFSET)))

/* GPTM5 GPTMTBPV*/
#define GPTM5_BITBANDING_GPTMTBPV               (((BITBANDING_GPTMTBPV_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMTBPV_OFFSET)*32u))))
#define GPTM5_GPTMTBPV                          (((GPTMTBPV_TypeDef*)(GPTM5_BASE + GPTM_GPTMTBPV_OFFSET )))
#define GPTM5_GPTMTBPV_R                        (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMTBPV_OFFSET)))

/* GPWTM0 GPTMTBPV*/
#define GPWTM0_BITBANDING_GPTMTBPV               (((BITBANDING_GPTMTBPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMTBPV_OFFSET)*32u))))
#define GPWTM0_GPTMTBPV                          (((GPTMTBPV_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMTBPV_OFFSET )))
#define GPWTM0_GPTMTBPV_R                        (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMTBPV_OFFSET)))

#define GPWTM0_BITBANDING_TB_GPTMTnPV            (((BITBANDING_TB_GPWTMPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_TB_GPTMTnPV_OFFSET)*32u))))
#define GPWTM0_TB_GPTMTnPV                       (((TB_GPWTMPV_TypeDef*)(GPWTM0_BASE + GPWTM_TB_GPTMTnPV_OFFSET )))
#define GPWTM0_TB_GPTMTnPV_R                     (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_TB_GPTMTnPV_OFFSET)))

/* GPWTM1 GPTMTBPV*/
#define GPWTM1_BITBANDING_GPTMTBPV               (((BITBANDING_GPTMTBPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMTBPV_OFFSET)*32u))))
#define GPWTM1_GPTMTBPV                          (((GPTMTBPV_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMTBPV_OFFSET )))
#define GPWTM1_GPTMTBPV_R                        (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMTBPV_OFFSET)))

#define GPWTM1_BITBANDING_TB_GPTMTnPV            (((BITBANDING_TB_GPWTMPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_TB_GPTMTnPV_OFFSET)*32u))))
#define GPWTM1_TB_GPTMTnPV                       (((TB_GPWTMPV_TypeDef*)(GPWTM1_BASE + GPWTM_TB_GPTMTnPV_OFFSET )))
#define GPWTM1_TB_GPTMTnPV_R                     (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_TB_GPTMTnPV_OFFSET)))

/* GPWTM2 GPTMTBPV*/
#define GPWTM2_BITBANDING_GPTMTBPV               (((BITBANDING_GPTMTBPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMTBPV_OFFSET)*32u))))
#define GPWTM2_GPTMTBPV                          (((GPTMTBPV_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMTBPV_OFFSET )))
#define GPWTM2_GPTMTBPV_R                        (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMTBPV_OFFSET)))

#define GPWTM2_BITBANDING_TB_GPTMTnPV            (((BITBANDING_TB_GPWTMPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_TB_GPTMTnPV_OFFSET)*32u))))
#define GPWTM2_TB_GPTMTnPV                       (((TB_GPWTMPV_TypeDef*)(GPWTM2_BASE + GPWTM_TB_GPTMTnPV_OFFSET )))
#define GPWTM2_TB_GPTMTnPV_R                     (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_TB_GPTMTnPV_OFFSET)))

/* GPWTM3 GPTMTBPV*/
#define GPWTM3_BITBANDING_GPTMTBPV               (((BITBANDING_GPTMTBPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMTBPV_OFFSET)*32u))))
#define GPWTM3_GPTMTBPV                          (((GPTMTBPV_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMTBPV_OFFSET )))
#define GPWTM3_GPTMTBPV_R                        (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMTBPV_OFFSET)))

#define GPWTM3_BITBANDING_TB_GPTMTnPV            (((BITBANDING_TB_GPWTMPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_TB_GPTMTnPV_OFFSET)*32u))))
#define GPWTM3_TB_GPTMTnPV                       (((TB_GPWTMPV_TypeDef*)(GPWTM3_BASE + GPWTM_TB_GPTMTnPV_OFFSET )))
#define GPWTM3_TB_GPTMTnPV_R                     (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_TB_GPTMTnPV_OFFSET)))

/* GPWTM4 GPTMTBPV*/
#define GPWTM4_BITBANDING_GPTMTBPV               (((BITBANDING_GPTMTBPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMTBPV_OFFSET)*32u))))
#define GPWTM4_GPTMTBPV                          (((GPTMTBPV_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMTBPV_OFFSET )))
#define GPWTM4_GPTMTBPV_R                        (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMTBPV_OFFSET)))

#define GPWTM4_BITBANDING_TB_GPTMTnPV            (((BITBANDING_TB_GPWTMPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_TB_GPTMTnPV_OFFSET)*32u))))
#define GPWTM4_TB_GPTMTnPV                       (((TB_GPWTMPV_TypeDef*)(GPWTM4_BASE + GPWTM_TB_GPTMTnPV_OFFSET )))
#define GPWTM4_TB_GPTMTnPV_R                     (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_TB_GPTMTnPV_OFFSET)))

/* GPWTM5 GPTMTBPV*/
#define GPWTM5_BITBANDING_GPTMTBPV               (((BITBANDING_GPTMTBPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMTBPV_OFFSET)*32u))))
#define GPWTM5_GPTMTBPV                          (((GPTMTBPV_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMTBPV_OFFSET )))
#define GPWTM5_GPTMTBPV_R                        (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMTBPV_OFFSET)))

#define GPWTM5_BITBANDING_TB_GPTMTnPV            (((BITBANDING_TB_GPWTMPV_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_TB_GPTMTnPV_OFFSET)*32u))))
#define GPWTM5_TB_GPTMTnPV                       (((TB_GPWTMPV_TypeDef*)(GPWTM5_BASE + GPWTM_TB_GPTMTnPV_OFFSET )))
#define GPWTM5_TB_GPTMTnPV_R                     (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_TB_GPTMTnPV_OFFSET)))

/*----------*/
#define GPTM_GPTMTBPV_R_PSV_MASK              ((uint32_t)0x0000FFFFu)
#define GPTM_GPTMTBPV_R_PSV_BIT               (0u)

#define GPTM_GPTMTBPV_PSV_MASK                ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPWTM_GPTMTBPV_R_PSV_MASK             ((uint32_t)0x0000FFFFu)
#define GPWTM_GPTMTBPV_R_PSV_BIT              (0u)

#define GPWTM_GPTMTBPV_PSV_MASK               ((uint32_t)0x0000FFFFu)
/*----------*/

/*----------*/
#define GPWTM_TB_GPTMTnPV_R_PSV_MASK          ((uint32_t)0x0000FFFFu)
#define GPWTM_TB_GPTMTnPV_R_PSV_BIT           (0u)

#define GPWTM_TB_GPTMTnPV_PSV_MASK            ((uint32_t)0x0000FFFFu)
/*----------*/


/******************************************************************************************
************************************ 27 GPTMPP *********************************************
******************************************************************************************/

/* GPTM0 GPTMPP*/
#define GPTM0_BITBANDING_GPTMPP        (((BITBANDING_GPTMPP_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_GPTMPP_OFFSET)*32u))))
#define GPTM0_GPTMPP                   (((GPTMPP_TypeDef*)(GPTM0_BASE + GPTM_GPTMPP_OFFSET )))
#define GPTM0_GPTMPP_R                 (*((volatile uint32_t *)(GPTM0_BASE +GPTM_GPTMPP_OFFSET)))

#define GPTM0_BITBANDING_CTL_GPTMPP    (((BITBANDING_GPTMPP_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM0_OFFSET+GPTM_CTL_GPTMPP_OFFSET)*32u))))
#define GPTM0_CTL_GPTMPP               (((GPTMPP_TypeDef*)(GPTM0_BASE + GPTM_CTL_GPTMPP_OFFSET )))
#define GPTM0_CTL_GPTMPP_R             (*((volatile uint32_t *)(GPTM0_BASE +GPTM_CTL_GPTMPP_OFFSET)))

/* GPTM1 GPTMPP*/
#define GPTM1_BITBANDING_GPTMPP        (((BITBANDING_GPTMPP_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_GPTMPP_OFFSET)*32u))))
#define GPTM1_GPTMPP                   (((GPTMPP_TypeDef*)(GPTM1_BASE + GPTM_GPTMPP_OFFSET )))
#define GPTM1_GPTMPP_R                 (*((volatile uint32_t *)(GPTM1_BASE +GPTM_GPTMPP_OFFSET)))

#define GPTM1_BITBANDING_CTL_GPTMPP    (((BITBANDING_GPTMPP_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM1_OFFSET+GPTM_CTL_GPTMPP_OFFSET)*32u))))
#define GPTM1_CTL_GPTMPP               (((GPTMPP_TypeDef*)(GPTM1_BASE + GPTM_CTL_GPTMPP_OFFSET )))
#define GPTM1_CTL_GPTMPP_R             (*((volatile uint32_t *)(GPTM1_BASE +GPTM_CTL_GPTMPP_OFFSET)))

/* GPTM2 GPTMPP*/
#define GPTM2_BITBANDING_GPTMPP        (((BITBANDING_GPTMPP_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_GPTMPP_OFFSET)*32u))))
#define GPTM2_GPTMPP                   (((GPTMPP_TypeDef*)(GPTM2_BASE + GPTM_GPTMPP_OFFSET )))
#define GPTM2_GPTMPP_R                 (*((volatile uint32_t *)(GPTM2_BASE +GPTM_GPTMPP_OFFSET)))

#define GPTM2_BITBANDING_CTL_GPTMPP    (((BITBANDING_GPTMPP_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM2_OFFSET+GPTM_CTL_GPTMPP_OFFSET)*32u))))
#define GPTM2_CTL_GPTMPP               (((GPTMPP_TypeDef*)(GPTM2_BASE + GPTM_CTL_GPTMPP_OFFSET )))
#define GPTM2_CTL_GPTMPP_R             (*((volatile uint32_t *)(GPTM2_BASE +GPTM_CTL_GPTMPP_OFFSET)))

/* GPTM3 GPTMPP*/
#define GPTM3_BITBANDING_GPTMPP        (((BITBANDING_GPTMPP_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_GPTMPP_OFFSET)*32u))))
#define GPTM3_GPTMPP                   (((GPTMPP_TypeDef*)(GPTM3_BASE + GPTM_GPTMPP_OFFSET )))
#define GPTM3_GPTMPP_R                 (*((volatile uint32_t *)(GPTM3_BASE +GPTM_GPTMPP_OFFSET)))

#define GPTM3_BITBANDING_CTL_GPTMPP    (((BITBANDING_GPTMPP_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM3_OFFSET+GPTM_CTL_GPTMPP_OFFSET)*32u))))
#define GPTM3_CTL_GPTMPP               (((GPTMPP_TypeDef*)(GPTM3_BASE + GPTM_CTL_GPTMPP_OFFSET )))
#define GPTM3_CTL_GPTMPP_R             (*((volatile uint32_t *)(GPTM3_BASE +GPTM_CTL_GPTMPP_OFFSET)))

/* GPTM4 GPTMPP*/
#define GPTM4_BITBANDING_GPTMPP        (((BITBANDING_GPTMPP_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_GPTMPP_OFFSET)*32u))))
#define GPTM4_GPTMPP                   (((GPTMPP_TypeDef*)(GPTM4_BASE + GPTM_GPTMPP_OFFSET )))
#define GPTM4_GPTMPP_R                 (*((volatile uint32_t *)(GPTM4_BASE +GPTM_GPTMPP_OFFSET)))

#define GPTM4_BITBANDING_CTL_GPTMPP    (((BITBANDING_GPTMPP_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM4_OFFSET+GPTM_CTL_GPTMPP_OFFSET)*32u))))
#define GPTM4_CTL_GPTMPP               (((GPTMPP_TypeDef*)(GPTM4_BASE + GPTM_CTL_GPTMPP_OFFSET )))
#define GPTM4_CTL_GPTMPP_R             (*((volatile uint32_t *)(GPTM4_BASE +GPTM_CTL_GPTMPP_OFFSET)))

/* GPTM5 GPTMPP*/
#define GPTM5_BITBANDING_GPTMPP        (((BITBANDING_GPTMPP_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_GPTMPP_OFFSET)*32u))))
#define GPTM5_GPTMPP                   (((GPTMPP_TypeDef*)(GPTM5_BASE + GPTM_GPTMPP_OFFSET )))
#define GPTM5_GPTMPP_R                 (*((volatile uint32_t *)(GPTM5_BASE +GPTM_GPTMPP_OFFSET)))

#define GPTM5_BITBANDING_CTL_GPTMPP    (((BITBANDING_GPTMPP_TypeDef*)(GPTM_BITBANDING_BASE+((GPTM5_OFFSET+GPTM_CTL_GPTMPP_OFFSET)*32u))))
#define GPTM5_CTL_GPTMPP               (((GPTMPP_TypeDef*)(GPTM5_BASE + GPTM_CTL_GPTMPP_OFFSET )))
#define GPTM5_CTL_GPTMPP_R             (*((volatile uint32_t *)(GPTM5_BASE +GPTM_CTL_GPTMPP_OFFSET)))

/* GPWTM0 GPTMPP*/
#define GPWTM0_BITBANDING_GPTMPP       (((BITBANDING_GPTMPP_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_GPTMPP_OFFSET)*32u))))
#define GPWTM0_GPTMPP                  (((GPTMPP_TypeDef*)(GPWTM0_BASE + GPWTM_GPTMPP_OFFSET )))
#define GPWTM0_GPTMPP_R                (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_GPTMPP_OFFSET)))

#define GPWTM0_BITBANDING_CTL_GPTMPP   (((BITBANDING_GPTMPP_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM0_OFFSET+GPWTM_CTL_GPTMPP_OFFSET)*32u))))
#define GPWTM0_CTL_GPTMPP              (((GPTMPP_TypeDef*)(GPWTM0_BASE + GPWTM_CTL_GPTMPP_OFFSET )))
#define GPWTM0_CTL_GPTMPP_R            (*((volatile uint32_t *)(GPWTM0_BASE +GPWTM_CTL_GPTMPP_OFFSET)))

/* GPWTM1 GPTMPP*/
#define GPWTM1_BITBANDING_GPTMPP       (((BITBANDING_GPTMPP_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_GPTMPP_OFFSET)*32u))))
#define GPWTM1_GPTMPP                  (((GPTMPP_TypeDef*)(GPWTM1_BASE + GPWTM_GPTMPP_OFFSET )))
#define GPWTM1_GPTMPP_R                (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_GPTMPP_OFFSET)))

#define GPWTM1_BITBANDING_CTL_GPTMPP   (((BITBANDING_GPTMPP_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM1_OFFSET+GPWTM_CTL_GPTMPP_OFFSET)*32u))))
#define GPWTM1_CTL_GPTMPP              (((GPTMPP_TypeDef*)(GPWTM1_BASE + GPWTM_CTL_GPTMPP_OFFSET )))
#define GPWTM1_CTL_GPTMPP_R            (*((volatile uint32_t *)(GPWTM1_BASE +GPWTM_CTL_GPTMPP_OFFSET)))

/* GPWTM2 GPTMPP*/
#define GPWTM2_BITBANDING_GPTMPP       (((BITBANDING_GPTMPP_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_GPTMPP_OFFSET)*32u))))
#define GPWTM2_GPTMPP                  (((GPTMPP_TypeDef*)(GPWTM2_BASE + GPWTM_GPTMPP_OFFSET )))
#define GPWTM2_GPTMPP_R                (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_GPTMPP_OFFSET)))

#define GPWTM2_BITBANDING_CTL_GPTMPP   (((BITBANDING_GPTMPP_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM2_OFFSET+GPWTM_CTL_GPTMPP_OFFSET)*32u))))
#define GPWTM2_CTL_GPTMPP              (((GPTMPP_TypeDef*)(GPWTM2_BASE + GPWTM_CTL_GPTMPP_OFFSET )))
#define GPWTM2_CTL_GPTMPP_R            (*((volatile uint32_t *)(GPWTM2_BASE +GPWTM_CTL_GPTMPP_OFFSET)))

/* GPWTM3 GPTMPP*/
#define GPWTM3_BITBANDING_GPTMPP       (((BITBANDING_GPTMPP_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_GPTMPP_OFFSET)*32u))))
#define GPWTM3_GPTMPP                  (((GPTMPP_TypeDef*)(GPWTM3_BASE + GPWTM_GPTMPP_OFFSET )))
#define GPWTM3_GPTMPP_R                (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_GPTMPP_OFFSET)))

#define GPWTM3_BITBANDING_CTL_GPTMPP   (((BITBANDING_GPTMPP_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM3_OFFSET+GPWTM_CTL_GPTMPP_OFFSET)*32u))))
#define GPWTM3_CTL_GPTMPP              (((GPTMPP_TypeDef*)(GPWTM3_BASE + GPWTM_CTL_GPTMPP_OFFSET )))
#define GPWTM3_CTL_GPTMPP_R            (*((volatile uint32_t *)(GPWTM3_BASE +GPWTM_CTL_GPTMPP_OFFSET)))

/* GPWTM4 GPTMPP*/
#define GPWTM4_BITBANDING_GPTMPP       (((BITBANDING_GPTMPP_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_GPTMPP_OFFSET)*32u))))
#define GPWTM4_GPTMPP                  (((GPTMPP_TypeDef*)(GPWTM4_BASE + GPWTM_GPTMPP_OFFSET )))
#define GPWTM4_GPTMPP_R                (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_GPTMPP_OFFSET)))

#define GPWTM4_BITBANDING_CTL_GPTMPP   (((BITBANDING_GPTMPP_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM4_OFFSET+GPWTM_CTL_GPTMPP_OFFSET)*32u))))
#define GPWTM4_CTL_GPTMPP              (((GPTMPP_TypeDef*)(GPWTM4_BASE + GPWTM_CTL_GPTMPP_OFFSET )))
#define GPWTM4_CTL_GPTMPP_R            (*((volatile uint32_t *)(GPWTM4_BASE +GPWTM_CTL_GPTMPP_OFFSET)))

/* GPWTM5 GPTMPP*/
#define GPWTM5_BITBANDING_GPTMPP       (((BITBANDING_GPTMPP_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_GPTMPP_OFFSET)*32u))))
#define GPWTM5_GPTMPP                  (((GPTMPP_TypeDef*)(GPWTM5_BASE + GPWTM_GPTMPP_OFFSET )))
#define GPWTM5_GPTMPP_R                (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_GPTMPP_OFFSET)))

#define GPWTM5_BITBANDING_CTL_GPTMPP   (((BITBANDING_GPTMPP_TypeDef*)(GPWTM_BITBANDING_BASE+((GPWTM5_OFFSET+GPWTM_CTL_GPTMPP_OFFSET)*32u))))
#define GPWTM5_CTL_GPTMPP              (((GPTMPP_TypeDef*)(GPWTM5_BASE + GPWTM_CTL_GPTMPP_OFFSET )))
#define GPWTM5_CTL_GPTMPP_R            (*((volatile uint32_t *)(GPWTM5_BASE +GPWTM_CTL_GPTMPP_OFFSET)))


/*----------*/
#define GPTM_GPTMPP_R_SIZE_MASK         ((uint32_t)0x0000000Fu)
#define GPTM_GPTMPP_R_SIZE_BIT          (0u)
#define GPTM_GPTMPP_R_SIZE_16b          ((uint32_t)0x00000000u)
#define GPTM_GPTMPP_R_SIZE_32b          ((uint32_t)0x00000001u)

#define GPTM_GPTMPP_SIZE_MASK           ((uint32_t)0x0000000Fu)
#define GPTM_GPTMPP_SIZE_BOTH           ((uint32_t)0x00000000u)
#define GPTM_GPTMPP_SIZE_16b          ((uint32_t)0x00000000u)
#define GPTM_GPTMPP_SIZE_32b          ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPTM_CTL_GPTMPP_R_SIZE_MASK     ((uint32_t)0x0000000Fu)
#define GPTM_CTL_GPTMPP_R_SIZE_BIT      (0u)
#define GPTM_CTL_GPTMPP_R_SIZE_16b      ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMPP_R_SIZE_32b      ((uint32_t)0x00000001u)

#define GPTM_CTL_GPTMPP_SIZE_MASK       ((uint32_t)0x0000000Fu)
#define GPTM_CTL_GPTMPP_SIZE_16b      ((uint32_t)0x00000000u)
#define GPTM_CTL_GPTMPP_SIZE_32b      ((uint32_t)0x00000001u)

/*----------*/

/*----------*/
#define GPWTM_GPTMPP_R_SIZE_MASK        ((uint32_t)0x0000000Fu)
#define GPWTM_GPTMPP_R_SIZE_BIT         (0u)
#define GWPTM_GPTMPP_R_SIZE_16b         ((uint32_t)0x00000000u)
#define GWPTM_GPTMPP_R_SIZE_32b         ((uint32_t)0x00000001u)

#define GPWTM_GPTMPP_SIZE_MASK          ((uint32_t)0x0000000Fu)
#define GPWTM_GPTMPP_SIZE_16b           ((uint32_t)0x00000000u)
#define GPWTM_GPTMPP_SIZE_32b           ((uint32_t)0x00000001u)
/*----------*/

/*----------*/
#define GPWTM_CTL_GPTMPP_R_SIZE_MASK    ((uint32_t)0x0000000Fu)
#define GPWTM_CTL_GPTMPP_R_SIZE_BIT     (0u)
#define GPWTM_CTL_GPTMPP_R_SIZE_16b     ((uint32_t)0x00000000u)
#define GPWTM_CTL_GPTMPP_R_SIZE_32b     ((uint32_t)0x00000001u)

#define GPWTM_CTL_GPTMPP_SIZE_MASK      ((uint32_t)0x0000000Fu)
#define GPWTM_CTL_GPTMPP_SIZE_BOTH      ((uint32_t)0x00000000u)
#define GPWTM_CTL_GPTMPP_SIZE_16b       ((uint32_t)0x00000000u)
#define GPWTM_CTL_GPTMPP_SIZE_32b       ((uint32_t)0x00000001u)
/*----------*/

#define TIMER_MAX (5u)
#define TIMER_INT (5u)
#define TIMER_32  (0u)
#define TIMER_64  (1u)
#define TIMER_A  (0u)
#define TIMER_B  (1u)
#define TIMER_W  (2u)

void TIMER__vInit(void);
void TIMER__vRegisterISR(void (*Isr) (void),TIMER_nMODULE enModule,TIMER_nINTERRUPT enInterrupt);
void TIMER__vRegisterMODULEISR(void (*Isr) (void),TIMER_nMODULE enModule);

void TIMER__vEnInterruptMODULE(TIMER_nMODULE enModule,TIMER_nPRIORITY enPriority);
void TIMER__vDisInterruptMODULE(TIMER_nMODULE enModule);

void TIMER__vSetReady(TIMER_nMODULE enModule);
void TIMER__vClearReady(TIMER_nMODULE enModule);
TIMER_nREADY TIMER__enIsReady(TIMER_nMODULE enModule);

void TIMER__vSetConfiguration(TIMER_nMODULE enModule, TIMER_nCONFIG enConf);
TIMER_nCONFIG TIMER__enGetConfiguration(TIMER_nMODULE enModule);

void TIMER__vSetSubMode(TIMER_nMODULE enModule, TIMER_nSUB_MODE enSubMode);
TIMER_nSUB_MODE TIMER__enGetSubMode(TIMER_nMODULE enModule);

void TIMER__vSetEdgeMode(TIMER_nMODULE enModule, TIMER_nEDGE_MODE enEdgeMode);
TIMER_nEDGE_MODE TIMER__enGetEdgeMode(TIMER_nMODULE enModule);

void TIMER__vSetAltMode(TIMER_nMODULE enModule, TIMER_nALT_MODE enAltMode);
TIMER_nALT_MODE TIMER__enGetAltMode(TIMER_nMODULE enModule);

void TIMER__vSetCountDir(TIMER_nMODULE enModule, TIMER_nCOUNT_DIR enCountDir);
TIMER_nCOUNT_DIR TIMER__enGetCountDir(TIMER_nMODULE enModule);

void TIMER__vSetWaitTrigger(TIMER_nMODULE enModule, TIMER_nWAIT enWaitTrigger);
TIMER_nWAIT TIMER__enGetWaitTrigger(TIMER_nMODULE enModule);

void TIMER__vSetSnapShot(TIMER_nMODULE enModule, TIMER_nSNAPSHOT enSnapShot);
TIMER_nSNAPSHOT TIMER__enGetSnapShot(TIMER_nMODULE enModule);

void TIMER__vSetUpdateIntervalMode(TIMER_nMODULE enModule, TIMER_nUPDATE_INTERVAL enUpdateIntervalMode);
TIMER_nUPDATE_INTERVAL TIMER__enGetUpdateIntervalMode(TIMER_nMODULE enModule);

void TIMER__vSetPWMInterrupt(TIMER_nMODULE enModule, TIMER_nPWM_INT enPWMInterrupt);
TIMER_nPWM_INT TIMER__enGetPWMInterrupt(TIMER_nMODULE enModule);

void TIMER__vSetMatchEventInterrupt(TIMER_nMODULE enModule, TIMER_nEVENT_INT enEventInterrupt);
TIMER_nEVENT_INT TIMER__enGetMatchEventInterrupt(TIMER_nMODULE enModule);

void TIMER__vSetUpdateMatchMode(TIMER_nMODULE enModule, TIMER_nUPDATE_MATCH enUpdateMatchMode);
TIMER_nUPDATE_MATCH TIMER__enGetUpdateMatchMode(TIMER_nMODULE enModule);

void TIMER__vSetPWMOutputInit(TIMER_nMODULE enModule, TIMER_nPWM_OUT_INIT enPWMOutputInit);
TIMER_nPWM_OUT_INIT TIMER__enGetPWMOutputInit(TIMER_nMODULE enModule);



void TIMER__vSetEnable(TIMER_nMODULE enModule, TIMER_nENABLE enEnable);
TIMER_nENABLE TIMER__enGetEnable(TIMER_nMODULE enModule);

void TIMER__vSetStall(TIMER_nMODULE enModule, TIMER_nSTALL enStall);
TIMER_nSTALL TIMER__enGetStall(TIMER_nMODULE enModule);

void TIMER__vSetEdgeEvent(TIMER_nMODULE enModule, TIMER_nEDGE_EVENT enEdgeEvent);
TIMER_nEDGE_EVENT TIMER__enGetEdgeEvent(TIMER_nMODULE enModule);

void TIMER__vSetRTCStall(TIMER_nMODULE enModule, TIMER_nRTC_STALL enRTCStall);
TIMER_nRTC_STALL TIMER__enGetRTCStall(TIMER_nMODULE enModule);

void TIMER__vSetADCTrigger(TIMER_nMODULE enModule, TIMER_nADC_TRIGGER enADCTrigger);
TIMER_nADC_TRIGGER TIMER__enGetADCTrigger(TIMER_nMODULE enModule);

void TIMER__vSetPWMOutputLevel(TIMER_nMODULE enModule, TIMER_nPWM_OUTPUT enPWMOutputLevel);
TIMER_nPWM_OUTPUT TIMER__enGetPWMOutputLevel(TIMER_nMODULE enModule);

void TIMER__vSetSyncronize(TIMER_nSYNC enSync);

void TIMER__vEnInterrupt(TIMER_nMODULE enModule, TIMER_nINT enInterrupt);
void TIMER__vDisInterrupt(TIMER_nMODULE enModule, TIMER_nINT enInterrupt);
void TIMER__vClearInterrupt(TIMER_nMODULE enModule, TIMER_nINT enInterrupt);
TIMER_nINT_STATUS TIMER__enStatusInterrupt(TIMER_nMODULE enModule, TIMER_nINT enInterrupt);

void TIMER__vCreateModeStructPointer(TIMER_nMODE enMode,TIMER_MODE_Typedef* psMode);
TIMER_MODE_Typedef* TIMER__psCreateModeStruct(TIMER_nMODE enMode);

void TIMER__vDeleteModeStruct(TIMER_MODE_Typedef* psMode);

TIMER_nSTATUS TIMER__enSetMode(TIMER_nMODULE enModule, TIMER_nMODE enMode);
TIMER_nSTATUS TIMER__enSetModeStruct(TIMER_nMODULE enModule, const TIMER_MODE_Typedef* psMode);

TIMER_nMODE TIMER__enGetMode(TIMER_nMODULE enModule);
void TIMER__vGetMode(TIMER_nMODULE enModule, TIMER_MODE_Typedef* psMode);
TIMER_MODE_Typedef* TIMER__psGetMode(TIMER_nMODULE enModule);

TIMER_nSTATUS TIMER__enSetExtraModeStruct(TIMER_nMODULE enModule, const TIMER_EXTRAMODE_Typedef* psExtraMode);

TIMER_EXTRAMODE_Typedef* TIMER__psGetExtraMode(TIMER_nMODULE enModule);
void TIMER__vGetExtraMode(TIMER_nMODULE enModule, TIMER_EXTRAMODE_Typedef* psExtraMode);

void TIMER__vSetReload(TIMER_nMODULE enModule, uint32_t u32PrescalerRTC, uint64_t u64Reload);
void TIMER__vSetMatch(TIMER_nMODULE enModule,uint64_t u64Match);

TIMER_nSTATUS TIMER__enSetMode_Reload(TIMER_nMODULE enModule, TIMER_nMODE enMode, uint32_t u32PrescalerRTC, uint64_t u64Reload);
TIMER_nSTATUS TIMER__enSetModeStruct_Reload(TIMER_nMODULE enModule, const TIMER_MODE_Typedef* psMode, uint32_t u32PrescalerRTC, uint64_t u64Reload);


TIMER_nSTATUS TIMER__enSetMode_Match(TIMER_nMODULE enModule, TIMER_nMODE enMode,uint64_t u64Match);
TIMER_nSTATUS TIMER__enSetModeStruct_Match(TIMER_nMODULE enModule, const TIMER_MODE_Typedef* psMode,uint64_t u64Match);

TIMER_nSTATUS TIMER__enSetMode_ReloadMatch(TIMER_nMODULE enModule, TIMER_nMODE enMode, uint32_t u32PrescalerRTC, uint64_t u64Reload,uint64_t u64Match);
TIMER_nSTATUS TIMER__enSetModeStruct_ReloadMatch(TIMER_nMODULE enModule, const TIMER_MODE_Typedef* psMode, uint32_t u32PrescalerRTC, uint64_t u64Reload,uint64_t u64Match);

/*ToDO Add implementation to read counter of the timer TnR and TnPS (current), TnV and TnPV (free-Running)
 * Create TIMER__vGetReload and TIMER__vGetMatch
 * */

uint64_t TIMER__u64GetValueCurrent(TIMER_nMODULE enModule);
uint64_t TIMER__u64GetValueFreeRunning(TIMER_nMODULE enModule);

#endif /* TIMER_H_ */

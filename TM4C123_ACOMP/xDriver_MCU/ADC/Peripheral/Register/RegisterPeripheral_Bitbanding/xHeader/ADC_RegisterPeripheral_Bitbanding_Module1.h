/**
 *
 * @file ADC_RegisterPeripheral_Bitbanding_Module1.h
 * @copyright
 * @verbatim InDeviceMex 2020 @endverbatim
 *
 * @par Responsibility
 * @verbatim InDeviceMex Developers @endverbatim
 *
 * @version
 * @verbatim 1.0 @endverbatim
 *
 * @date
 * @verbatim 15 nov. 2020 @endverbatim
 *
 * @author
 * @verbatim vyldram @endverbatim
 *
 * @par Change History
 * @verbatim
 * Date           Author     Version     Description
 * 15 nov. 2020     vyldram    1.0         initial Version@endverbatim
 */
#ifndef XDRIVER_MCU_ADC_PERIPHERAL_REGISTER_REGISTERPERIPHERAL_BITBANDING_XHEADER_ADC_REGISTERPERIPHERAL_BITBANDING_MODULE1_H_
#define XDRIVER_MCU_ADC_PERIPHERAL_REGISTER_REGISTERPERIPHERAL_BITBANDING_XHEADER_ADC_REGISTERPERIPHERAL_BITBANDING_MODULE1_H_

#include <xDriver_MCU/ADC/Peripheral/Register/xHeader/ADC_RegisterAddress.h>
#include <xDriver_MCU/ADC/Peripheral/Register/RegisterDefines/ADC_RegisterDefines.h>
#include <xDriver_MCU/ADC/Peripheral/Struct/xHeader/ADC_StructPeripheral_Bitbanding.h>

/******************************************************************************************
************************************ ADC1 *********************************************
******************************************************************************************/
#define ADC1_BITBANDING    (((ADC_BITBANDING_TypeDef*) (ADC_BITBANDING_BASE+(ADC1_OFFSET*32U))))

/******************************************************************************************
************************************ 1 ADCACTSS *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCACTSS    (((BITBANDING_ADCACTSS_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCACTSS_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCACTSS_ASEN0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCACTSS_OFFSET)*32U)+(ADC_ADCACTSS_R_ASEN0_BIT*4U))))
#define ADC1_BITBANDING_ADCACTSS_ASEN1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCACTSS_OFFSET)*32U)+(ADC_ADCACTSS_R_ASEN1_BIT*4U))))
#define ADC1_BITBANDING_ADCACTSS_ASEN2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCACTSS_OFFSET)*32U)+(ADC_ADCACTSS_R_ASEN2_BIT*4U))))
#define ADC1_BITBANDING_ADCACTSS_ASEN3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCACTSS_OFFSET)*32U)+(ADC_ADCACTSS_R_ASEN3_BIT*4U))))
#define ADC1_BITBANDING_ADCACTSS_BUSY    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCACTSS_OFFSET)*32U)+(ADC_ADCACTSS_R_BUSY_BIT*4U))))

/******************************************************************************************
************************************ 2 ADCRIS *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCRIS    (((BITBANDING_ADCRIS_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCRIS_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCRIS_INR0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCRIS_OFFSET)*32U)+(ADC_ADCRIS_R_INR0_BIT*4U))))
#define ADC1_BITBANDING_ADCRIS_INR1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCRIS_OFFSET)*32U)+(ADC_ADCRIS_R_INR1_BIT*4U))))
#define ADC1_BITBANDING_ADCRIS_INR2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCRIS_OFFSET)*32U)+(ADC_ADCRIS_R_INR2_BIT*4U))))
#define ADC1_BITBANDING_ADCRIS_INR3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCRIS_OFFSET)*32U)+(ADC_ADCRIS_R_INR3_BIT*4U))))
#define ADC1_BITBANDING_ADCRIS_INRDC    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCRIS_OFFSET)*32U)+(ADC_ADCRIS_R_INRDC_BIT*4U))))

/******************************************************************************************
************************************ 3 ADCIM *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCIM    (((BITBANDING_ADCIM_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCIM_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCIM_MASK0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCIM_OFFSET)*32U)+(ADC_ADCIM_R_MASK0_BIT*4U))))
#define ADC1_BITBANDING_ADCIM_MASK1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCIM_OFFSET)*32U)+(ADC_ADCIM_R_MASK1_BIT*4U))))
#define ADC1_BITBANDING_ADCIM_MASK2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCIM_OFFSET)*32U)+(ADC_ADCIM_R_MASK2_BIT*4U))))
#define ADC1_BITBANDING_ADCIM_MASK3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCIM_OFFSET)*32U)+(ADC_ADCIM_R_MASK3_BIT*4U))))
#define ADC1_BITBANDING_ADCIM_DCONSS0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCIM_OFFSET)*32U)+(ADC_ADCIM_R_DCONSS0_BIT*4U))))
#define ADC1_BITBANDING_ADCIM_DCONSS1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCIM_OFFSET)*32U)+(ADC_ADCIM_R_DCONSS1_BIT*4U))))
#define ADC1_BITBANDING_ADCIM_DCONSS2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCIM_OFFSET)*32U)+(ADC_ADCIM_R_DCONSS2_BIT*4U))))
#define ADC1_BITBANDING_ADCIM_DCONSS3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCIM_OFFSET)*32U)+(ADC_ADCIM_R_DCONSS3_BIT*4U))))

/******************************************************************************************
************************************ 4 ADCISC *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCISC    (((BITBANDING_ADCISC_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCISC_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCISC_IN0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCISC_OFFSET)*32U)+(ADC_ADCISC_R_IN0_BIT*4U))))
#define ADC1_BITBANDING_ADCISC_IN1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCISC_OFFSET)*32U)+(ADC_ADCISC_R_IN1_BIT*4U))))
#define ADC1_BITBANDING_ADCISC_IN2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCISC_OFFSET)*32U)+(ADC_ADCISC_R_IN2_BIT*4U))))
#define ADC1_BITBANDING_ADCISC_IN3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCISC_OFFSET)*32U)+(ADC_ADCISC_R_IN3_BIT*4U))))
#define ADC1_BITBANDING_ADCISC_DCINSS0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCISC_OFFSET)*32U)+(ADC_ADCISC_R_DCINSS0_BIT*4U))))
#define ADC1_BITBANDING_ADCISC_DCINSS1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCISC_OFFSET)*32U)+(ADC_ADCISC_R_DCINSS1_BIT*4U))))
#define ADC1_BITBANDING_ADCISC_DCINSS2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCISC_OFFSET)*32U)+(ADC_ADCISC_R_DCINSS2_BIT*4U))))
#define ADC1_BITBANDING_ADCISC_DCINSS3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCISC_OFFSET)*32U)+(ADC_ADCISC_R_DCINSS3_BIT*4U))))

/******************************************************************************************
************************************ 5 ADCOSTAT *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCOSTAT    (((BITBANDING_ADCOSTAT_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCOSTAT_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCOSTAT_OV0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCOSTAT_OFFSET)*32U)+(ADC_ADCOSTAT_R_OV0_BIT*4U))))
#define ADC1_BITBANDING_ADCOSTAT_OV1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCOSTAT_OFFSET)*32U)+(ADC_ADCOSTAT_R_OV1_BIT*4U))))
#define ADC1_BITBANDING_ADCOSTAT_OV2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCOSTAT_OFFSET)*32U)+(ADC_ADCOSTAT_R_OV2_BIT*4U))))
#define ADC1_BITBANDING_ADCOSTAT_OV3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCOSTAT_OFFSET)*32U)+(ADC_ADCOSTAT_R_OV3_BIT*4U))))

/******************************************************************************************
************************************ 6 ADCEMUX *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCEMUX    (((BITBANDING_ADCEMUX_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCEMUX_EM0_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM0_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM0_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM0_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM0_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM0_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM0_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM0_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM1_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM1_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM1_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM1_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM1_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM1_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM1_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM1_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM2_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM2_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM2_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM2_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM2_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM2_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM2_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM2_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM3_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM3_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM3_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM3_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM3_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM3_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCEMUX_EM3_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCEMUX_OFFSET)*32U)+((ADC_ADCEMUX_R_EM3_BIT+3U)*4U))))

/******************************************************************************************
************************************ 7 ADCUSTAT *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCUSTAT    (((BITBANDING_ADCUSTAT_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCUSTAT_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCUSTAT_UV0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCUSTAT_OFFSET)*32U)+(ADC_ADCUSTAT_R_UV0_BIT*4U))))
#define ADC1_BITBANDING_ADCUSTAT_UV1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCUSTAT_OFFSET)*32U)+(ADC_ADCUSTAT_R_UV1_BIT*4U))))
#define ADC1_BITBANDING_ADCUSTAT_UV2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCUSTAT_OFFSET)*32U)+(ADC_ADCUSTAT_R_UV2_BIT*4U))))
#define ADC1_BITBANDING_ADCUSTAT_UV3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCUSTAT_OFFSET)*32U)+(ADC_ADCUSTAT_R_UV3_BIT*4U))))

/******************************************************************************************
************************************ 8 ADCTSSEL *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCTSSEL    (((BITBANDING_ADCTSSEL_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCTSSEL_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCTSSEL_PS0_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCTSSEL_OFFSET)*32U)+((ADC_ADCTSSEL_R_PS0_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCTSSEL_PS0_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCTSSEL_OFFSET)*32U)+((ADC_ADCTSSEL_R_PS0_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCTSSEL_PS1_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCTSSEL_OFFSET)*32U)+((ADC_ADCTSSEL_R_PS1_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCTSSEL_PS1_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCTSSEL_OFFSET)*32U)+((ADC_ADCTSSEL_R_PS1_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCTSSEL_PS2_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCTSSEL_OFFSET)*32U)+((ADC_ADCTSSEL_R_PS2_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCTSSEL_PS2_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCTSSEL_OFFSET)*32U)+((ADC_ADCTSSEL_R_PS2_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCTSSEL_PS3_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCTSSEL_OFFSET)*32U)+((ADC_ADCTSSEL_R_PS3_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCTSSEL_PS3_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCTSSEL_OFFSET)*32U)+((ADC_ADCTSSEL_R_PS3_BIT+1U)*4U))))

/******************************************************************************************
************************************ 9 ADCSSPRI *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCSSPRI    (((BITBANDING_ADCSSPRI_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSPRI_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCSSPRI_SS0_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSPRI_OFFSET)*32U)+((ADC_ADCSSPRI_R_SS0_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSPRI_SS0_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSPRI_OFFSET)*32U)+((ADC_ADCSSPRI_R_SS0_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSPRI_SS1_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSPRI_OFFSET)*32U)+((ADC_ADCSSPRI_R_SS1_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSPRI_SS1_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSPRI_OFFSET)*32U)+((ADC_ADCSSPRI_R_SS1_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSPRI_SS2_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSPRI_OFFSET)*32U)+((ADC_ADCSSPRI_R_SS2_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSPRI_SS2_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSPRI_OFFSET)*32U)+((ADC_ADCSSPRI_R_SS2_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSPRI_SS3_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSPRI_OFFSET)*32U)+((ADC_ADCSSPRI_R_SS3_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSPRI_SS3_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSPRI_OFFSET)*32U)+((ADC_ADCSSPRI_R_SS3_BIT+1U)*4U))))

/******************************************************************************************
************************************ 10 ADCSPC *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCSPC    (((BITBANDING_ADCSPC_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSPC_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCSPC_PHASE_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSPC_OFFSET)*32U)+((ADC_ADCSPC_R_PHASE_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSPC_PHASE_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSPC_OFFSET)*32U)+((ADC_ADCSPC_R_PHASE_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSPC_PHASE_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSPC_OFFSET)*32U)+((ADC_ADCSPC_R_PHASE_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSPC_PHASE_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSPC_OFFSET)*32U)+((ADC_ADCSPC_R_PHASE_BIT+3U)*4U))))

/******************************************************************************************
************************************ 11 ADCPSSI *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCPSSI    (((BITBANDING_ADCPSSI_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPSSI_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCPSSI_SS0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPSSI_OFFSET)*32U)+(ADC_ADCPSSI_R_SS0_BIT*4U))))
#define ADC1_BITBANDING_ADCPSSI_SS1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPSSI_OFFSET)*32U)+(ADC_ADCPSSI_R_SS1_BIT*4U))))
#define ADC1_BITBANDING_ADCPSSI_SS2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPSSI_OFFSET)*32U)+(ADC_ADCPSSI_R_SS2_BIT*4U))))
#define ADC1_BITBANDING_ADCPSSI_SS3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPSSI_OFFSET)*32U)+(ADC_ADCPSSI_R_SS3_BIT*4U))))
#define ADC1_BITBANDING_ADCPSSI_SYNCWAIT    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPSSI_OFFSET)*32U)+(ADC_ADCPSSI_R_SYNCWAIT_BIT*4U))))
#define ADC1_BITBANDING_ADCPSSI_GSYNC    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPSSI_OFFSET)*32U)+(ADC_ADCPSSI_R_GSYNC_BIT*4U))))

/******************************************************************************************
************************************ 12 ADCSAC *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCSAC    (((BITBANDING_ADCSAC_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSAC_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCSAC_AVG_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSAC_OFFSET)*32U)+((ADC_ADCSAC_R_AVG_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSAC_AVG_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSAC_OFFSET)*32U)+((ADC_ADCSAC_R_AVG_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSAC_AVG_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSAC_OFFSET)*32U)+((ADC_ADCSAC_R_AVG_BIT+2U)*4U))))

/******************************************************************************************
************************************ 13 ADCDCISC *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCDCISC    (((BITBANDING_ADCDCISC_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCISC_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCDCISC_DCINT0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCISC_OFFSET)*32U)+(ADC_ADCDCISC_R_DCINT0_BIT*4U))))
#define ADC1_BITBANDING_ADCDCISC_DCINT1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCISC_OFFSET)*32U)+(ADC_ADCDCISC_R_DCINT1_BIT*4U))))
#define ADC1_BITBANDING_ADCDCISC_DCINT2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCISC_OFFSET)*32U)+(ADC_ADCDCISC_R_DCINT2_BIT*4U))))
#define ADC1_BITBANDING_ADCDCISC_DCINT3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCISC_OFFSET)*32U)+(ADC_ADCDCISC_R_DCINT3_BIT*4U))))
#define ADC1_BITBANDING_ADCDCISC_DCINT4    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCISC_OFFSET)*32U)+(ADC_ADCDCISC_R_DCINT4_BIT*4U))))
#define ADC1_BITBANDING_ADCDCISC_DCINT5    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCISC_OFFSET)*32U)+(ADC_ADCDCISC_R_DCINT5_BIT*4U))))
#define ADC1_BITBANDING_ADCDCISC_DCINT6    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCISC_OFFSET)*32U)+(ADC_ADCDCISC_R_DCINT6_BIT*4U))))
#define ADC1_BITBANDING_ADCDCISC_DCINT7    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCISC_OFFSET)*32U)+(ADC_ADCDCISC_R_DCINT7_BIT*4U))))

/******************************************************************************************
************************************ 14 ADCCTL *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCCTL    (((BITBANDING_ADCCTL_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCCTL_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCCTL_VREF    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCCTL_OFFSET)*32U)+(ADC_ADCCTL_R_VREF_BIT*4U))))
#define ADC1_BITBANDING_ADCCTL_DITHER    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCCTL_OFFSET)*32U)+(ADC_ADCCTL_R_DITHER_BIT*4U))))

/******************************************************************************************
************************************ 15 ADCSSMUX *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCSSMUX0    (((BITBANDING_ADCSSMUX8_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSMUX1    (((BITBANDING_ADCSSMUX4_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSMUX2    (((BITBANDING_ADCSSMUX4_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSMUX3    (((BITBANDING_ADCSSMUX1_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX3_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCSSMUX0_MUX0_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX0_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX0_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX0_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX1_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX1_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX1_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX1_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX1_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX1_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX1_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX1_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX2_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX2_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX2_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX2_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX2_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX2_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX2_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX2_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX3_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX3_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX3_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX3_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX3_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX3_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX3_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX3_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX4_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX4_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX4_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX4_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX4_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX4_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX4_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX4_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX5_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX5_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX5_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX5_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX5_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX5_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX5_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX5_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX6_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX6_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX6_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX6_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX6_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX6_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX6_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX6_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX7_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX7_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX7_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX7_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX7_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX7_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX0_MUX7_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX0_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX7_BIT+3U)*4U))))

#define ADC1_BITBANDING_ADCSSMUX1_MUX0_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX0_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX0_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX0_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX1_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX1_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX1_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX1_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX1_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX1_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX1_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX1_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX2_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX2_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX2_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX2_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX2_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX2_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX2_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX2_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX3_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX3_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX3_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX3_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX3_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX3_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX1_MUX3_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX1_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX3_BIT+3U)*4U))))

#define ADC1_BITBANDING_ADCSSMUX2_MUX0_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX0_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX0_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX0_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX1_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX1_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX1_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX1_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX1_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX1_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX1_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX1_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX2_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX2_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX2_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX2_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX2_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX2_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX2_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX2_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX3_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX3_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX3_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX3_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX3_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX3_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX2_MUX3_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX2_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX3_BIT+3U)*4U))))

#define ADC1_BITBANDING_ADCSSMUX3_MUX0_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX3_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX3_MUX0_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX3_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX3_MUX0_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX3_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSMUX3_MUX0_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSMUX3_OFFSET)*32U)+((ADC_ADCSSMUX_R_MUX0_BIT+3U)*4U))))

/******************************************************************************************
************************************ 16 ADCSSCTL *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCSSCTL0    (((BITBANDING_ADCSSCTL8_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSCTL1    (((BITBANDING_ADCSSCTL4_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSCTL2    (((BITBANDING_ADCSSCTL4_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSCTL3    (((BITBANDING_ADCSSCTL1_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL3_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCSSCTL0_D0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_D0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_END0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_END0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_IE0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_TS0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_D1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_D1_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_END1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_END1_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_IE1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE1_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_TS1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS1_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_D2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_D2_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_END2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_END2_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_IE2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE2_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_TS2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS2_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_D3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_D3_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_END3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_END3_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_IE3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE3_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_TS3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS3_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_D4    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_D4_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_END4    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_END4_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_IE4    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE4_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_TS4    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS4_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_D5    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_D5_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_END5    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_END5_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_IE5    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE5_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_TS5    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS5_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_D6    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_D6_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_END6    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_END6_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_IE6    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE6_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_TS6    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS6_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_D7    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_D7_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_END7    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_END7_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_IE7    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE7_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL0_TS7    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL0_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS7_BIT*4U))))

#define ADC1_BITBANDING_ADCSSCTL1_D0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_D0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_END0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_END0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_IE0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_TS0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_D1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_D1_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_END1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_END1_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_IE1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE1_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_TS1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS1_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_D2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_D2_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_END2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_END2_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_IE2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE2_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_TS2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS2_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_D3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_D3_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_END3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_END3_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_IE3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE3_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL1_TS3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL1_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS3_BIT*4U))))

#define ADC1_BITBANDING_ADCSSCTL2_D0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_D0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_END0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_END0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_IE0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_TS0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_D1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_D1_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_END1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_END1_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_IE1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE1_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_TS1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS1_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_D2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_D2_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_END2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_END2_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_IE2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE2_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_TS2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS2_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_D3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_D3_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_END3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_END3_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_IE3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE3_BIT*4U))))
#define ADC1_BITBANDING_ADCSSCTL2_TS3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSCTL2_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS3_BIT*4U))))

#define ADC1_BITBANDING_ADCSSFSTAT0_D0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+(ADC_ADCSSCTL_R_D0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT0_END0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+(ADC_ADCSSCTL_R_END0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT0_IE0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+(ADC_ADCSSCTL_R_IE0_BIT*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT0_TS0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+(ADC_ADCSSCTL_R_TS0_BIT*4U))))

/******************************************************************************************
************************************ 17 ADCSSFIFO *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCSSFIFO0    (((BITBANDING_ADCSSFIFO_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFIFO0_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSFIFO1    (((BITBANDING_ADCSSFIFO_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFIFO1_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSFIFO2    (((BITBANDING_ADCSSFIFO_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFIFO2_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSFIFO3    (((BITBANDING_ADCSSFIFO_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFIFO3_OFFSET)*32U))))

/******************************************************************************************
************************************ 18 ADCSSFSTAT *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCSSFSTAT0    (((BITBANDING_ADCSSFSTAT_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSFSTAT1    (((BITBANDING_ADCSSFSTAT_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT1_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSFSTAT2    (((BITBANDING_ADCSSFSTAT_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT2_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSFSTAT3    (((BITBANDING_ADCSSFSTAT_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT3_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCSSFSTAT0_TPTR_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT0_TPTR_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT0_TPTR_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT0_TPTR_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT0_HPTR_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT0_HPTR_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT0_HPTR_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT0_HPTR_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT0_EMPTY    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+(ADC_ADCSSFSTAT_R_EMPTY_BIT*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT0_FULL    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT0_OFFSET)*32U)+(ADC_ADCSSFSTAT_R_FULL_BIT*4U))))

#define ADC1_BITBANDING_ADCSSFSTAT1_TPTR_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT1_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT1_TPTR_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT1_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT1_TPTR_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT1_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT1_TPTR_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT1_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT1_HPTR_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT1_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT1_HPTR_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT1_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT1_HPTR_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT1_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT1_HPTR_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT1_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT1_EMPTY    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT1_OFFSET)*32U)+(ADC_ADCSSFSTAT_R_EMPTY_BIT*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT1_FULL    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT1_OFFSET)*32U)+(ADC_ADCSSFSTAT_R_FULL_BIT*4U))))

#define ADC1_BITBANDING_ADCSSFSTAT2_TPTR_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT2_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT2_TPTR_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT2_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT2_TPTR_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT2_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT2_TPTR_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT2_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT2_HPTR_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT2_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT2_HPTR_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT2_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT2_HPTR_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT2_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT2_HPTR_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT2_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT2_EMPTY    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT2_OFFSET)*32U)+(ADC_ADCSSFSTAT_R_EMPTY_BIT*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT2_FULL    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT2_OFFSET)*32U)+(ADC_ADCSSFSTAT_R_FULL_BIT*4U))))

#define ADC1_BITBANDING_ADCSSFSTAT3_TPTR_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT3_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT3_TPTR_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT3_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT3_TPTR_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT3_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT3_TPTR_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT3_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_TPTR_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT3_HPTR_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT3_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT3_HPTR_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT3_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT3_HPTR_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT3_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT3_HPTR_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT3_OFFSET)*32U)+((ADC_ADCSSFSTAT_R_HPTR_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT3_EMPTY    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT3_OFFSET)*32U)+(ADC_ADCSSFSTAT_R_EMPTY_BIT*4U))))
#define ADC1_BITBANDING_ADCSSFSTAT3_FULL    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSFSTAT3_OFFSET)*32U)+(ADC_ADCSSFSTAT_R_FULL_BIT*4U))))

/******************************************************************************************
************************************ 19 ADCSSOP *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCSSOP0    (((BITBANDING_ADCSSOP8_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP0_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSOP1    (((BITBANDING_ADCSSOP4_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP1_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSOP2    (((BITBANDING_ADCSSOP4_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP2_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSOP3    (((BITBANDING_ADCSSOP1_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP3_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCSSOP0_S0DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP0_OFFSET)*32U)+(ADC_ADCSSOP_R_S0DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP0_S1DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP0_OFFSET)*32U)+(ADC_ADCSSOP_R_S1DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP0_S2DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP0_OFFSET)*32U)+(ADC_ADCSSOP_R_S2DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP0_S3DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP0_OFFSET)*32U)+(ADC_ADCSSOP_R_S3DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP0_S4DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP0_OFFSET)*32U)+(ADC_ADCSSOP_R_S4DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP0_S5DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP0_OFFSET)*32U)+(ADC_ADCSSOP_R_S5DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP0_S6DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP0_OFFSET)*32U)+(ADC_ADCSSOP_R_S6DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP0_S7DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP0_OFFSET)*32U)+(ADC_ADCSSOP_R_S7DCOP_BIT*4U))))

#define ADC1_BITBANDING_ADCSSOP1_S0DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP1_OFFSET)*32U)+(ADC_ADCSSOP_R_S0DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP1_S1DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP1_OFFSET)*32U)+(ADC_ADCSSOP_R_S1DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP1_S2DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP1_OFFSET)*32U)+(ADC_ADCSSOP_R_S2DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP1_S3DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP1_OFFSET)*32U)+(ADC_ADCSSOP_R_S3DCOP_BIT*4U))))

#define ADC1_BITBANDING_ADCSSOP2_S0DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP2_OFFSET)*32U)+(ADC_ADCSSOP_R_S0DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP2_S1DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP2_OFFSET)*32U)+(ADC_ADCSSOP_R_S1DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP2_S2DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP2_OFFSET)*32U)+(ADC_ADCSSOP_R_S2DCOP_BIT*4U))))
#define ADC1_BITBANDING_ADCSSOP2_S3DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP2_OFFSET)*32U)+(ADC_ADCSSOP_R_S3DCOP_BIT*4U))))

#define ADC1_BITBANDING_ADCSSOP3_S0DCOP    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSOP3_OFFSET)*32U)+(ADC_ADCSSOP_R_S0DCOP_BIT*4U))))

/******************************************************************************************
************************************ 20 ADCSSDC *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCSSDC0    (((BITBANDING_ADCSSDC8_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSDC1    (((BITBANDING_ADCSSDC4_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSDC2    (((BITBANDING_ADCSSDC4_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCSSDC3    (((BITBANDING_ADCSSDC1_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC3_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCSSDC0_S0DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S0DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S0DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S0DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S1DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S1DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S1DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S1DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S1DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S1DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S1DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S1DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S2DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S2DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S2DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S2DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S2DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S2DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S2DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S2DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S3DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S3DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S3DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S3DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S3DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S3DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S3DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S3DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S4DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S4DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S4DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S4DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S4DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S4DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S4DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S4DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S5DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S5DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S5DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S5DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S5DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S5DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S5DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S5DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S6DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S6DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S6DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S6DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S6DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S6DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S6DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S6DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S7DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S7DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S7DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S7DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S7DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S7DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC0_S7DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC0_OFFSET)*32U)+((ADC_ADCSSDC_R_S7DCSEL_BIT+3U)*4U))))

#define ADC1_BITBANDING_ADCSSDC1_S0DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S0DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S0DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S0DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S1DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S1DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S1DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S1DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S1DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S1DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S1DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S1DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S2DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S2DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S2DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S2DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S2DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S2DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S2DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S2DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S3DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S3DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S3DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S3DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S3DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S3DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC1_S3DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC1_OFFSET)*32U)+((ADC_ADCSSDC_R_S3DCSEL_BIT+3U)*4U))))

#define ADC1_BITBANDING_ADCSSDC2_S0DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S0DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S0DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S0DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S1DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S1DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S1DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S1DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S1DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S1DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S1DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S1DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S2DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S2DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S2DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S2DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S2DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S2DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S2DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S2DCSEL_BIT+3U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S3DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S3DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S3DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S3DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S3DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S3DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC2_S3DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC2_OFFSET)*32U)+((ADC_ADCSSDC_R_S3DCSEL_BIT+3U)*4U))))

#define ADC1_BITBANDING_ADCSSDC3_S0DCSEL_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC3_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCSSDC3_S0DCSEL_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC3_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCSSDC3_S0DCSEL_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC3_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCSSDC3_S0DCSEL_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCSSDC3_OFFSET)*32U)+((ADC_ADCSSDC_R_S0DCSEL_BIT+3U)*4U))))

/******************************************************************************************
************************************ 21 ADCDCRIC *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCDCRIC    (((BITBANDING_ADCDCRIC_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCDCRIC_DCINT0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCINT0_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCINT1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCINT1_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCINT2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCINT2_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCINT3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCINT3_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCINT4    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCINT4_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCINT5    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCINT5_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCINT6    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCINT6_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCINT7    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCINT7_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCTRIG0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCTRIG0_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCTRIG1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCTRIG1_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCTRIG2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCTRIG2_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCTRIG3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCTRIG3_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCTRIG4    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCTRIG4_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCTRIG5    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCTRIG5_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCTRIG6    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCTRIG6_BIT*4U))))
#define ADC1_BITBANDING_ADCDCRIC_DCTRIG7    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCRIC_OFFSET)*32U)+(ADC_ADCDCRIC_R_DCTRIG7_BIT*4U))))

/******************************************************************************************
************************************ 22 ADCDCCTL *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCDCCTL0    (((BITBANDING_ADCDCCTL_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL0_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCTL1    (((BITBANDING_ADCDCCTL_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL1_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCTL2    (((BITBANDING_ADCDCCTL_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL2_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCTL3    (((BITBANDING_ADCDCCTL_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL3_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCTL4    (((BITBANDING_ADCDCCTL_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL4_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCTL5    (((BITBANDING_ADCDCCTL_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL5_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCTL6    (((BITBANDING_ADCDCCTL_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL6_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCTL7    (((BITBANDING_ADCDCCTL_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL7_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCDCCTL0_CIM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL0_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL0_CIM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL0_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL0_CIC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL0_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL0_CIC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL0_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL0_CIE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL0_OFFSET)*32U)+(ADC_ADCDCCTL_R_CIE_BIT*4U))))
#define ADC1_BITBANDING_ADCDCCTL0_CTM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL0_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL0_CTM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL0_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL0_CTC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL0_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL0_CTC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL0_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL0_CTE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL0_OFFSET)*32U)+(ADC_ADCDCCTL_R_CTE_BIT*4U))))

#define ADC1_BITBANDING_ADCDCCTL1_CIM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL1_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL1_CIM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL1_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL1_CIC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL1_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL1_CIC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL1_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL1_CIE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL1_OFFSET)*32U)+(ADC_ADCDCCTL_R_CIE_BIT*4U))))
#define ADC1_BITBANDING_ADCDCCTL1_CTM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL1_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL1_CTM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL1_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL1_CTC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL1_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL1_CTC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL1_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL1_CTE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL1_OFFSET)*32U)+(ADC_ADCDCCTL_R_CTE_BIT*4U))))

#define ADC1_BITBANDING_ADCDCCTL2_CIM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL2_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL2_CIM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL2_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL2_CIC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL2_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL2_CIC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL2_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL2_CIE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL2_OFFSET)*32U)+(ADC_ADCDCCTL_R_CIE_BIT*4U))))
#define ADC1_BITBANDING_ADCDCCTL2_CTM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL2_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL2_CTM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL2_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL2_CTC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL2_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL2_CTC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL2_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL2_CTE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL2_OFFSET)*32U)+(ADC_ADCDCCTL_R_CTE_BIT*4U))))

#define ADC1_BITBANDING_ADCDCCTL3_CIM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL3_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL3_CIM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL3_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL3_CIC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL3_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL3_CIC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL3_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL3_CIE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL3_OFFSET)*32U)+(ADC_ADCDCCTL_R_CIE_BIT*4U))))
#define ADC1_BITBANDING_ADCDCCTL3_CTM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL3_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL3_CTM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL3_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL3_CTC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL3_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL3_CTC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL3_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL3_CTE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL3_OFFSET)*32U)+(ADC_ADCDCCTL_R_CTE_BIT*4U))))

#define ADC1_BITBANDING_ADCDCCTL4_CIM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL4_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL4_CIM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL4_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL4_CIC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL4_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL4_CIC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL4_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL4_CIE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL4_OFFSET)*32U)+(ADC_ADCDCCTL_R_CIE_BIT*4U))))
#define ADC1_BITBANDING_ADCDCCTL4_CTM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL4_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL4_CTM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL4_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL4_CTC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL4_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL4_CTC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL4_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL4_CTE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL4_OFFSET)*32U)+(ADC_ADCDCCTL_R_CTE_BIT*4U))))

#define ADC1_BITBANDING_ADCDCCTL5_CIM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL5_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL5_CIM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL5_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL5_CIC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL5_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL5_CIC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL5_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL5_CIE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL5_OFFSET)*32U)+(ADC_ADCDCCTL_R_CIE_BIT*4U))))
#define ADC1_BITBANDING_ADCDCCTL5_CTM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL5_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL5_CTM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL5_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL5_CTC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL5_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL5_CTC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL5_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL5_CTE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL5_OFFSET)*32U)+(ADC_ADCDCCTL_R_CTE_BIT*4U))))

#define ADC1_BITBANDING_ADCDCCTL6_CIM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL6_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL6_CIM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL6_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL6_CIC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL6_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL6_CIC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL6_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL6_CIE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL6_OFFSET)*32U)+(ADC_ADCDCCTL_R_CIE_BIT*4U))))
#define ADC1_BITBANDING_ADCDCCTL6_CTM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL6_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL6_CTM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL6_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL6_CTC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL6_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL6_CTC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL6_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL6_CTE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL6_OFFSET)*32U)+(ADC_ADCDCCTL_R_CTE_BIT*4U))))

#define ADC1_BITBANDING_ADCDCCTL7_CIM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL7_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL7_CIM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL7_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL7_CIC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL7_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL7_CIC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL7_OFFSET)*32U)+((ADC_ADCDCCTL_R_CIC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL7_CIE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL7_OFFSET)*32U)+(ADC_ADCDCCTL_R_CIE_BIT*4U))))
#define ADC1_BITBANDING_ADCDCCTL7_CTM_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL7_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL7_CTM_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL7_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTM_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL7_CTC_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL7_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL7_CTC_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL7_OFFSET)*32U)+((ADC_ADCDCCTL_R_CTC_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCDCCTL7_CTE    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCTL7_OFFSET)*32U)+(ADC_ADCDCCTL_R_CTE_BIT*4U))))


/******************************************************************************************
************************************ 23 ADCDCCMP *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCDCCMP0    (((BITBANDING_ADCDCCMP_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCMP0_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCMP1    (((BITBANDING_ADCDCCMP_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCMP1_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCMP2    (((BITBANDING_ADCDCCMP_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCMP2_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCMP3    (((BITBANDING_ADCDCCMP_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCMP3_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCMP4    (((BITBANDING_ADCDCCMP_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCMP4_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCMP5    (((BITBANDING_ADCDCCMP_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCMP5_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCMP6    (((BITBANDING_ADCDCCMP_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCMP6_OFFSET)*32U))))
#define ADC1_BITBANDING_ADCDCCMP7    (((BITBANDING_ADCDCCMP_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCDCCMP7_OFFSET)*32U))))

/******************************************************************************************
************************************ 24 ADCPP *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCPP    (((BITBANDING_ADCPP_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPP_OFFSET)*32U))))

/******************************************************************************************
************************************ 25 ADCPC *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCPC    (((BITBANDING_ADCPC_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPC_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCPC_SR_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPC_OFFSET)*32U)+((ADC_ADCPC_R_SR_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCPC_SR_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPC_OFFSET)*32U)+((ADC_ADCPC_R_SR_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCPC_SR_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPC_OFFSET)*32U)+((ADC_ADCPC_R_SR_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCPC_SR_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCPC_OFFSET)*32U)+((ADC_ADCPC_R_SR_BIT+3U)*4U))))

/******************************************************************************************
************************************ 26 ADCCC *********************************************
******************************************************************************************/
#define ADC1_BITBANDING_ADCCC    (((BITBANDING_ADCCC_TypeDef*) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCCC_OFFSET)*32U))))

#define ADC1_BITBANDING_ADCCC_CS_0    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCCC_OFFSET)*32U)+((ADC_ADCCC_R_CS_BIT+0U)*4U))))
#define ADC1_BITBANDING_ADCCC_CS_1    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCCC_OFFSET)*32U)+((ADC_ADCCC_R_CS_BIT+1U)*4U))))
#define ADC1_BITBANDING_ADCCC_CS_2    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCCC_OFFSET)*32U)+((ADC_ADCCC_R_CS_BIT+2U)*4U))))
#define ADC1_BITBANDING_ADCCC_CS_3    (*((volatile uint32_t *) (ADC_BITBANDING_BASE+((ADC1_OFFSET+ADC_ADCCC_OFFSET)*32U)+((ADC_ADCCC_R_CS_BIT+3U)*4U))))


#endif /* XDRIVER_MCU_ADC_PERIPHERAL_REGISTER_REGISTERPERIPHERAL_BITBANDING_XHEADER_ADC_REGISTERPERIPHERAL_BITBANDING_MODULE1_H_ */

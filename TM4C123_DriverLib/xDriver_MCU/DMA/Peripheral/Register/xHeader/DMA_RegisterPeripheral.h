/**
 *
 * @file DMA_RegisterPeripheral.h
 * @copyright
 * @verbatim InDeviceMex 2020 @endverbatim
 *
 * @par Responsibility
 * @verbatim InDeviceMex Developers @endverbatim
 *
 * @version
 * @verbatim 1.0 @endverbatim
 *
 * @date
 * @verbatim 28 jul. 2020 @endverbatim
 *
 * @author
 * @verbatim vyldram @endverbatim
 *
 * @par Change History
 * @verbatim
 * Date           Author     Version     Description
 * 28 jul. 2020     vyldram    1.0         initial Version@endverbatim
 */

#ifndef XDRIVER_MCU_DRIVER_HEADER_DMA_DMA_PERIPHERAL_DMA_REGISTER_DMA_REGISTERPERIPHERAL_H_
#define XDRIVER_MCU_DRIVER_HEADER_DMA_DMA_PERIPHERAL_DMA_REGISTER_DMA_REGISTERPERIPHERAL_H_

#include <xDriver_MCU/DMA/Peripheral/Register/xHeader/DMA_RegisterAddress.h>
#include <xDriver_MCU/DMA/Peripheral/Struct/xHeader/DMA_StructPeripheral.h>

#define DMA    ((DMA_TypeDef*) (DMA_BASE))

/********************************************************************************************
************************************** 4 STAT **********************************************
********************************************************************************************/
#define DMA_STAT    ((DMASTAT_TypeDef*) (DMA_BASE + DMA_STAT_OFFSET ))
#define DMA_STAT_R    (*((volatile const uint32_t*) (DMA_BASE + DMA_STAT_OFFSET)))

/********************************************************************************************
************************************** 5 CFG **********************************************
********************************************************************************************/
#define DMA_CFG    ((DMACFG_TypeDef*) (DMA_BASE + DMA_CFG_OFFSET ))
#define DMA_CFG_R    (*((volatile uint32_t*) (DMA_BASE + DMA_CFG_OFFSET)))

/********************************************************************************************
************************************** 6 CTLBASE **********************************************
********************************************************************************************/
#define DMA_CTLBASE    ((DMACTLBASE_TypeDef*) (DMA_BASE + DMA_CTLBASE_OFFSET ))
#define DMA_CTLBASE_R    (*((volatile uint32_t*) (DMA_BASE + DMA_CTLBASE_OFFSET)))

/********************************************************************************************
************************************** 7 ALTBASE **********************************************
********************************************************************************************/
#define DMA_ALTBASE    ((DMAALTBASE_TypeDef*) (DMA_BASE + DMA_ALTBASE_OFFSET ))
#define DMA_ALTBASE_R    (*((volatile const uint32_t*) (DMA_BASE + DMA_ALTBASE_OFFSET)))

/********************************************************************************************
************************************** 8 WAITSTAT **********************************************
********************************************************************************************/
#define DMA_WAITSTAT    ((DMAWAITSTAT_TypeDef*) (DMA_BASE + DMA_WAITSTAT_OFFSET ))
#define DMA_WAITSTAT_R    (*((volatile uint32_t*) (DMA_BASE + DMA_WAITSTAT_OFFSET)))

/********************************************************************************************
************************************** 9 SWREQ **********************************************
********************************************************************************************/
#define DMA_SWREQ    ((DMASWREQ_TypeDef*) (DMA_BASE + DMA_SWREQ_OFFSET ))
#define DMA_SWREQ_R    (*((volatile uint32_t*) (DMA_BASE + DMA_SWREQ_OFFSET)))

/********************************************************************************************
************************************** 10 USEBURSTSET **********************************************
********************************************************************************************/
#define DMA_USEBURSTSET    ((DMASET_TypeDef*) (DMA_BASE + DMA_USEBURSTSET_OFFSET ))
#define DMA_USEBURSTSET_R    (*((volatile uint32_t*) (DMA_BASE + DMA_USEBURSTSET_OFFSET)))

/********************************************************************************************
************************************** 11 USEBURSTCLR **********************************************
********************************************************************************************/
#define DMA_USEBURSTCLR    ((DMACLR_TypeDef*) (DMA_BASE + DMA_USEBURSTCLR_OFFSET ))
#define DMA_USEBURSTCLR_R    (*((volatile uint32_t*) (DMA_BASE + DMA_USEBURSTCLR_OFFSET)))

/********************************************************************************************
************************************** 12 REQMASKSET **********************************************
********************************************************************************************/
#define DMA_REQMASKSET    ((DMASET_TypeDef*) (DMA_BASE + DMA_REQMASKSET_OFFSET ))
#define DMA_REQMASKSET_R    (*((volatile uint32_t*) (DMA_BASE + DMA_REQMASKSET_OFFSET)))

/********************************************************************************************
************************************** 13 REQMASKCLR **********************************************
********************************************************************************************/
#define DMA_REQMASKCLR    ((DMACLR_TypeDef*) (DMA_BASE + DMA_REQMASKCLR_OFFSET ))
#define DMA_REQMASKCLR_R    (*((volatile uint32_t*) (DMA_BASE + DMA_REQMASKCLR_OFFSET)))

/********************************************************************************************
************************************** 14 ENASET **********************************************
********************************************************************************************/
#define DMA_ENASET    ((DMASET_TypeDef*) (DMA_BASE + DMA_ENASET_OFFSET ))
#define DMA_ENASET_R    (*((volatile uint32_t*) (DMA_BASE + DMA_ENASET_OFFSET)))

/********************************************************************************************
************************************** 15 ENACLR **********************************************
********************************************************************************************/
#define DMA_ENACLR    ((DMACLR_TypeDef*) (DMA_BASE + DMA_ENACLR_OFFSET ))
#define DMA_ENACLR_R    (*((volatile uint32_t*) (DMA_BASE + DMA_ENACLR_OFFSET)))

/********************************************************************************************
************************************** 16 ALTSET **********************************************
********************************************************************************************/
#define DMA_ALTSET    ((DMASET_TypeDef*) (DMA_BASE + DMA_ALTSET_OFFSET ))
#define DMA_ALTSET_R    (*((volatile uint32_t*) (DMA_BASE + DMA_ALTSET_OFFSET)))

/********************************************************************************************
************************************** 17 ALTCLR **********************************************
********************************************************************************************/
#define DMA_ALTCLR    ((DMACLR_TypeDef*) (DMA_BASE + DMA_ALTCLR_OFFSET ))
#define DMA_ALTCLR_R    (*((volatile uint32_t*) (DMA_BASE + DMA_ALTCLR_OFFSET)))

/********************************************************************************************
************************************* 18 PRIOSET **********************************************
********************************************************************************************/
#define DMA_PRIOSET    ((DMASET_TypeDef*) (DMA_BASE + DMA_PRIOSET_OFFSET ))
#define DMA_PRIOSET_R    (*((volatile uint32_t*) (DMA_BASE + DMA_PRIOSET_OFFSET)))

/********************************************************************************************
************************************** 19 PRIOCLR **********************************************
********************************************************************************************/
#define DMA_PRIOCLR    ((DMACLR_TypeDef*) (DMA_BASE + DMA_PRIOCLR_OFFSET ))
#define DMA_PRIOCLR_R    (*((volatile uint32_t*) (DMA_BASE + DMA_PRIOCLR_OFFSET)))

/********************************************************************************************
************************************** 20 ERRCLR **********************************************
********************************************************************************************/
#define DMA_ERRCLR    ((DMAERRCLR_TypeDef*) (DMA_BASE + DMA_ERRCLR_OFFSET ))
#define DMA_ERRCLR_R    (*((volatile uint32_t*) (DMA_BASE + DMA_ERRCLR_OFFSET)))

/********************************************************************************************
************************************** 21 CHASGN **********************************************
********************************************************************************************/
#define DMA_CHASGN    ((DMACHASGN_TypeDef*) (DMA_BASE + DMA_CHASGN_OFFSET ))
#define DMA_CHASGN_R    (*((volatile uint32_t*) (DMA_BASE + DMA_CHASGN_OFFSET)))

/********************************************************************************************
************************************** 22 CHIS **********************************************
********************************************************************************************/
#define DMA_CHIS    ((DMACHIS_TypeDef*) (DMA_BASE + DMA_CHIS_OFFSET ))
#define DMA_CHIS_R    (*((volatile uint32_t*) (DMA_BASE + DMA_CHIS_OFFSET)))

/********************************************************************************************
************************************** 23 CHMAP **********************************************
********************************************************************************************/
#define DMA_CHMAP    ((DMACHMAP_TypeDef*) (DMA_BASE + DMA_CHMAP0_OFFSET ))

/********************************************************************************************
************************************** 23 CHMAP0 **********************************************
********************************************************************************************/
#define DMA_CHMAP0    ((DMACHMAP0_TypeDef*) (DMA_BASE + DMA_CHMAP0_OFFSET ))
#define DMA_CHMAP0_R    (*((volatile uint32_t*) (DMA_BASE + DMA_CHMAP0_OFFSET)))

/********************************************************************************************
************************************** 24 CHMAP1 **********************************************
********************************************************************************************/
#define DMA_CHMAP1    ((DMACHMAP1_TypeDef*) (DMA_BASE + DMA_CHMAP1_OFFSET ))
#define DMA_CHMAP1_R    (*((volatile uint32_t*) (DMA_BASE + DMA_CHMAP1_OFFSET)))

/********************************************************************************************
************************************** 25 CHMAP2 **********************************************
********************************************************************************************/
#define DMA_CHMAP2    ((DMACHMAP2_TypeDef*) (DMA_BASE + DMA_CHMAP2_OFFSET ))
#define DMA_CHMAP2_R    (*((volatile uint32_t*) (DMA_BASE + DMA_CHMAP2_OFFSET)))

/********************************************************************************************
************************************** 26 CHMAP3 *********************************************
********************************************************************************************/
#define DMA_CHMAP3    ((DMACHMAP3_TypeDef*) (DMA_BASE + DMA_CHMAP3_OFFSET ))
#define DMA_CHMAP3_R    (*((volatile uint32_t*) (DMA_BASE + DMA_CHMAP3_OFFSET)))

/********************************************************************************************
************************************** 27 PeriphID0 **********************************************
********************************************************************************************/
#define DMA_PeriphID0    ((DMAPeriphID0_TypeDef*) (DMA_BASE + DMA_PeriphID0_OFFSET ))
#define DMA_PeriphID0_R    (*((volatile const uint32_t*) (DMA_BASE + DMA_PeriphID0_OFFSET)))

/********************************************************************************************
************************************** 28 PeriphID1 **********************************************
********************************************************************************************/
#define DMA_PeriphID1    ((DMAPeriphID1_TypeDef*) (DMA_BASE + DMA_PeriphID1_OFFSET ))
#define DMA_PeriphID1_R    (*((volatile const uint32_t*) (DMA_BASE + DMA_PeriphID1_OFFSET)))

/********************************************************************************************
************************************** 29 PeriphID2 **********************************************
********************************************************************************************/
#define DMA_PeriphID2    ((DMAPeriphID2_TypeDef*) (DMA_BASE + DMA_PeriphID2_OFFSET ))
#define DMA_PeriphID2_R    (*((volatile const uint32_t*) (DMA_BASE + DMA_PeriphID2_OFFSET)))

/********************************************************************************************
************************************** 30 PeriphID3 **********************************************
********************************************************************************************/
#define DMA_PeriphID3    ((DMAPeriphID3_TypeDef*) (DMA_BASE + DMA_PeriphID3_OFFSET ))
#define DMA_PeriphID3_R    (*((volatile const uint32_t*) (DMA_BASE + DMA_PeriphID3_OFFSET)))

/********************************************************************************************
************************************** 31 PeriphID4 **********************************************
********************************************************************************************/
#define DMA_PeriphID4    ((DMAPeriphID4_TypeDef*) (DMA_BASE + DMA_PeriphID4_OFFSET ))
#define DMA_PeriphID4_R    (*((volatile const uint32_t*) (DMA_BASE + DMA_PeriphID4_OFFSET)))

/********************************************************************************************
************************************** 32 PCellID0 **********************************************
********************************************************************************************/
#define DMA_PCellID0    ((DMAPCellID0_TypeDef*) (DMA_BASE + DMA_PCellID0_OFFSET ))
#define DMA_PCellID0_R    (*((volatile const uint32_t*) (DMA_BASE + DMA_PCellID0_OFFSET)))

/********************************************************************************************
************************************** 33 PCellID1 **********************************************
********************************************************************************************/
#define DMA_PCellID1    ((DMAPCellID1_TypeDef*) (DMA_BASE + DMA_PCellID1_OFFSET ))
#define DMA_PCellID1_R    (*((volatile const uint32_t*) (DMA_BASE + DMA_PCellID1_OFFSET)))

/********************************************************************************************
************************************** 34 PCellID2 **********************************************
********************************************************************************************/
#define DMA_PCellID2    ((DMAPCellID2_TypeDef*) (DMA_BASE + DMA_PCellID2_OFFSET ))
#define DMA_PCellID2_R    (*((volatile const uint32_t*) (DMA_BASE + DMA_PCellID2_OFFSET)))

/********************************************************************************************
************************************** 35 PCellID3 **********************************************
********************************************************************************************/
#define DMA_PCellID3    ((DMAPCellID3_TypeDef*) (DMA_BASE + DMA_PCellID3_OFFSET ))
#define DMA_PCellID3_R    (*((volatile const uint32_t*) (DMA_BASE + DMA_PCellID3_OFFSET)))

#endif /* XDRIVER_MCU_DRIVER_HEADER_DMA_DMA_PERIPHERAL_DMA_REGISTER_DMA_REGISTERPERIPHERAL_H_ */
